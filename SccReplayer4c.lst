Sjasm Z80 Assembler v0.42c - www.xl2s.tk             [2018.02.03 - 12:31:52]

SccReplayer4c.asm
Errors: 5

       1   00:0000                      ;----------------------------------------------------------------------------
       2   00:0000                      ;----------------------------------------------------------------------------
       3   00:0000                      
       4   00:0000                              output "sccplay4c.rom"
       5   00:4000                      
       6   00:4000                              org 4000h
       7   00:4000                              dw  4241h,START,0,0,0,0,0,0
       7   00:4000  41 42 10 40 00 00 00 00 00 00 00 00 00 00 00 00 
       8   00:4010                      
       9   00:4010                      ;	Bank 1: 6000h - 67FFh (6000h used)
      10   00:4010                      ;	Bank 2: 6800h - 6FFFh (6800h used)
      11   00:4010                      ;	Bank 3: 7000h - 77FFh (7000h used)
      12   00:4010                      ;	Bank 4: 7800h - 7FFFh (7800h used)
      13   00:4010                      
      14   00:4010                      
      15   00:4010                      ; ascii-8 mapper
      16   00:4010                      
      17   00:4010  (00:6000)           Bank1:  equ      6000h
      18   00:4010  (00:6800)           Bank2:  equ      6800h
      19   00:4010  (00:7000)           Bank3:  equ      7000h
      20   00:4010  (00:7800)           Bank4:  equ      7800h
      21   00:4010                      
      22   00:4010                      ; scc mapper for scc chip
      23   00:4010                      
      24   00:4010  (00:9000)           sccBank3:  equ      09000h
      25   00:4010                      
      26   00:4010                      ;-------------------------------------
      27   00:4010                      ; Entry point
      28   00:4010                      ;-------------------------------------
      29   00:4010                      START:
      30   00:4010  3E 28                       ld		a,40
      31   00:4012  32 AE F3            		ld		(0xF3AE),a	; screen width
      32   00:4015  AF                          xor     a
      33   00:4016  CD 5F 00                    call    005Fh
      34   00:4019  AF                          xor     a
      35   00:401A  32 DB F3            		ld		(0xF3DB),a	; no key click
      36   00:401D  CD 67 42            		call	init_mapper
      37   00:4020                      
      38   00:4020  CD 6B 43            		call	search_slot
      39   00:4023  11 68 01            		ld		de,40*9
      40   00:4026  21 14 41            		ld		hl,rom_slot_text
      41   00:4029  CD DD 40            		call	message
      42   00:402C  11 72 01                    ld      de,40*9+10
      43   00:402F  2A 0C D0            		ld		hl,(slotvar)
      44   00:4032  26 00               		ld		h,0
      45   00:4034  CD 78 42                    call    PrintNum
      46   00:4037                      
      47   00:4037  CD 8A 43            		call	search_slotram
      48   00:403A  11 90 01            		ld		de,40*10
      49   00:403D  21 1F 41            		ld		hl,ram_slot_text
      50   00:4040  CD DD 40            		call	message
      51   00:4043  11 9A 01                    ld      de,40*10+10
      52   00:4046  2A 0E D0            		ld		hl,(slotram)
      53   00:4049  26 00               		ld		h,0
      54   00:404B  CD 78 42                    call    PrintNum
      55   00:404E                      
      56   00:404E  CD CD 44                    call    SCCsearch
      57   00:4051  11 40 01            		ld		de,40*8
      58   00:4054  21 09 41            		ld		hl,scc_slot_text
      59   00:4057  CD DD 40            		call	message
      60   00:405A  11 4A 01                    ld      de,40*8+10
      61   00:405D  2A 10 D0            		ld		hl,(SCC)
      62   00:4060  26 00               		ld		h,0
      63   00:4062  CD 78 42                    call    PrintNum
      64   00:4065                      
      65   00:4065                      
      66   00:4065  CD E0 44            		call	en_scc
      67   00:4068                      
      68   00:4068  F3                          di
      69   00:4069                      
      70   00:4069  3E 3F                       ld      a,3Fh
      71   00:406B  32 00 90                    ld      (sccBank3),a
      72   00:406E                      
      73   00:406E  CD D2 42                    call    SccAdjust
      74   00:4071  CD 22 43                    call    SccInit
      75   00:4074  CD 5F 42                    call    ReplayerMute
      76   00:4077  CD 52 43                    call    SccMute
      77   00:407A  CD 2A 41                    call    InstallIntHanlder
      78   00:407D                      
      79   00:407D                      
      80   00:407D                       ; print period from SccAdjust
      81   00:407D                      
      82   00:407D  2A 04 D0                    ld      hl,(Period)
      83   00:4080  11 00 00                    ld      de,0
      84   00:4083  CD 78 42                    call    PrintNum
      85   00:4086                      
      86   00:4086  11 7D 00            		ld		de,3*40+5
      87   00:4089  21 EF 40            		ld		hl,instruction_text
      88   00:408C  CD DD 40            		call	message
      89   00:408F                      
      90   00:408F                      		
      91   00:408F  FB                          ei
      92   00:4090                      
      93   00:4090                      .halt:
      94   00:4090                      
      95   00:4090                      ; print blocks to play
      96   00:4090  76                          halt
      97   00:4091                      
      98   00:4091  2A 06 D0                    ld      hl,(NumBlocksToPlay)
      99   00:4094  11 08 00                    ld      de,8
     100   00:4097  CD 78 42                    call    PrintNum
     101   00:409A                      
     102   00:409A  2A 00 D0                    ld      hl,(SamplePos)
     103   00:409D  11 10 00                    ld      de,16
     104   00:40A0  CD 78 42                    call    PrintNum
     105   00:40A3                      
     106   00:40A3  2A 02 D0                    ld      hl,(SamplePage)
     107   00:40A6  26 00                       ld      h,0
     108   00:40A8  11 18 00                    ld      de,24
     109   00:40AB  CD 78 42                    call    PrintNum
     110   00:40AE                      		
     111   00:40AE                      ; play one sfx at time		
     112   00:40AE  3A 08 D0            		ld      a,(SccSfxOn)
     113   00:40B1  B7                          or      a
     114   00:40B2  CC B8 40            		call	z,effetct24
     115   00:40B5  C3 90 40            		jp		.halt
     116   00:40B8                      
     117   00:40B8                      ; Keyboard testing
     118   00:40B8                      ; // 3 "J" "I" "H" "G" "F" "E" "D" "C"
     119   00:40B8                      ; // 4 "R" "Q" "P" "O" "N" "M" "L" "K"
     120   00:40B8                      ; // 5 "Z" "Y" "X" "W" "V" "U" "T" "S"
     121   00:40B8                      
     122   00:40B8                      effetct24:
     123   00:40B8                       
     124   00:40B8  11 03 00            		ld      de,3				
     125   00:40BB  D5                  2: 		push	de
     126   00:40BC  CD 60 43             		call    checkkbd		
     127   00:40BF  06 08                		ld      b,8		
     128   00:40C1  4F                   		ld      c,a		
     129   00:40C2                      1:		
     130   00:40C2  78                   		ld      a,b		
     131   00:40C3  3D                   		dec     a		
     132   00:40C4  82                  		add		a,d
     133   00:40C5  6F                   		ld      l,a		
     134   00:40C6  79                   		ld      a,c		
     135   00:40C7  87                   		add     a,a		
     136   00:40C8  4F                   		ld      c,a		
     137   00:40C9  C5                   		push    bc		
     138   00:40CA  7D                   		ld      a,l		
     139   00:40CB  D4 41 41             		call    nc,ReplayerInit		
     140   00:40CE  C1                   		pop     bc		
     141   00:40CF  10 F1                		djnz    1B
     142   00:40D1  D1                  		pop		de
     143   00:40D2  3E 08               		ld		a,8
     144   00:40D4  82                  		add		a,d
     145   00:40D5  57                  		ld		d,a
     146   00:40D6  1C                  		inc		e
     147   00:40D7  3E 06               		ld		a,6
     148   00:40D9  BB                  		cp		e
     149   00:40DA  20 DF               		jr		nz,2B
     150   00:40DC                      	
     151   00:40DC  C9                   		ret		
     152   00:40DD                      ;-------------------------------------
     153   00:40DD                      ;-------------------------------------
     154   00:40DD                      message:
     155   00:40DD  7B                          ld      a,e
     156   00:40DE  D3 99                       out     (99h),a
     157   00:40E0  7A                          ld      a,d
     158   00:40E1  E6 3F                       and     3Fh
     159   00:40E3  F6 40                       or      40h
     160   00:40E5  D3 99                       out     (99h),a
     161   00:40E7                      
     162   00:40E7  7E                  1:		ld		a,(hl)
     163   00:40E8  A7                  		and		a
     164   00:40E9  C8                  		ret		z
     165   00:40EA  D3 98               		out     (98h),a
     166   00:40EC  23                  		inc		hl
     167   00:40ED  18 F8               		jr		1b
     168   00:40EF                      
     169   00:40EF                      instruction_text:	
     170   00:40EF                      		db "Press any key from C to Z",0
     170   00:40EF  50 72 65 73 73 20 61 6E 79 20 6B 65 79 20 66 72 
     170   00:40FF  6F 6D 20 43 20 74 6F 20 5A 00 
     171   00:4109                      scc_slot_text:
     172   00:4109                      		db	"Scc slot: ",0
     172   00:4109  53 63 63 20 73 6C 6F 74 3A 20 00 
     173   00:4114                      rom_slot_text:
     174   00:4114                      		db	"Rom slot: ",0
     174   00:4114  52 6F 6D 20 73 6C 6F 74 3A 20 00 
     175   00:411F                      ram_slot_text:
     176   00:411F                      		db	"Ram slot: ",0
     176   00:411F  52 61 6D 20 73 6C 6F 74 3A 20 00 
     177   00:412A                      		
     178   00:412A                      ;-------------------------------------
     179   00:412A                      ;-------------------------------------
     180   00:412A                      InstallIntHanlder:
     181   00:412A  F3                          di
     182   00:412B  3E C3                       ld      a,0xC3
     183   00:412D  21 37 41                    ld      hl,HandleInt
     184   00:4130  32 9A FD                    ld      ($FD9A),a
     185   00:4133  22 9B FD                    ld      ($FD9B),hl
     186   00:4136  C9                          ret
     187   00:4137                      
     188   00:4137                      ;-------------------------------------
     189   00:4137                      ;-------------------------------------
     190   00:4137                      HandleInt:
     191   00:4137  F5                          push    af
     192   00:4138                      
     193   00:4138  3A 08 D0                    ld      a,(SccSfxOn)
     194   00:413B  B7                          or      a
     195   00:413C  C4 03 42                    call    nz,ReplayerUpdate
     196   00:413F                      
     197   00:413F  F1                          pop     af
     198   00:4140  C9                          ret
     199   00:4141                      
     200   00:4141                      
     201   00:4141                      
     202   00:4141                      ;-------------------------------------
     203   00:4141                      ; Initialize replayer
     204   00:4141                      ;
     205   00:4141                      ; in :
     206   00:4141                      ; l  # of Sfx
     207   00:4141                      ;
     208   00:4141                      ;-------------------------------------
     209   00:4141                      ReplayerInit:
     210   00:4141  26 00                       ld      h,0
     211   00:4143                      
     212   00:4143  54                          ld      d,h
     213   00:4144  5D                          ld      e,l
     214   00:4145                      
     215   00:4145  29                          add     hl,hl
     216   00:4146  29                          add     hl,hl
     217   00:4147  19                          add     hl,de
     218   00:4148                      
     219   00:4148  11 69 41                    ld      de,SfxTable
     220   00:414B  19                          add     hl,de
     221   00:414C                      
     222   00:414C  5E                          ld      e,(hl)
     223   00:414D  23                          inc     hl
     224   00:414E  56                          ld      d,(hl)
     225   00:414F  23                          inc     hl
     226   00:4150  ED 53 00 D0                 ld      (SamplePos),de
     227   00:4154                      
     228   00:4154  7E                          ld      a,(hl)
     229   00:4155  23                          inc     hl
     230   00:4156  32 02 D0                    ld      (SamplePage),a
     231   00:4159  32 00 68                    ld      (Bank2),a
     232   00:415C                      
     233   00:415C  5E                          ld      e,(hl)
     234   00:415D  23                          inc     hl
     235   00:415E  56                          ld      d,(hl)
     236   00:415F  ED 53 06 D0                 ld      (NumBlocksToPlay),de
     237   00:4163                      
     238   00:4163  3E FF                       ld      a,0FFh
     239   00:4165  32 08 D0                    ld      (SccSfxOn),a
     240   00:4168                      		
     241   00:4168  C9                          ret
     242   00:4169                      
     243   00:4169                      SfxTable:
     244   00:4169                               include SfxTable.asm
       1.  00:4169  00 60                        dw     06000h + (s0_START & 01FFFH)
       2.  00:416B  01                           db     s0_START/02000h-2
       3.  00:416C  37 00                        dw     (s0_END - s0_START+127)/128
       4.  00:416E                          
       5.  00:416E  80 7B                        dw     06000h + (s1_START & 01FFFH)
       6.  00:4170  01                           db     s1_START/02000h-2
       7.  00:4171  64 01                        dw     (s1_END - s1_START+127)/128
       8.  00:4173                          
       9.  00:4173  80 6D                        dw     06000h + (s2_START & 01FFFH)
      10.  00:4175  07                           db     s2_START/02000h-2
      11.  00:4176  4C 01                        dw     (s2_END - s2_START+127)/128
      12.  00:4178                          
      13.  00:4178  80 73                        dw     06000h + (s3_START & 01FFFH)
      14.  00:417A  0C                           db     s3_START/02000h-2
      15.  00:417B  C8 00                        dw     (s3_END - s3_START+127)/128
      16.  00:417D                          
      17.  00:417D  80 77                        dw     06000h + (s4_START & 01FFFH)
      18.  00:417F  0F                           db     s4_START/02000h-2
      19.  00:4180  B2 00                        dw     (s4_END - s4_START+127)/128
      20.  00:4182                          
      21.  00:4182  80 70                        dw     06000h + (s5_START & 01FFFH)
      22.  00:4184  12                           db     s5_START/02000h-2
      23.  00:4185  C8 00                        dw     (s5_END - s5_START+127)/128
      24.  00:4187                          
      25.  00:4187  80 74                        dw     06000h + (s6_START & 01FFFH)
      26.  00:4189  15                           db     s6_START/02000h-2
      27.  00:418A  C8 00                        dw     (s6_END - s6_START+127)/128
      28.  00:418C                          
      29.  00:418C  80 78                        dw     06000h + (s7_START & 01FFFH)
      30.  00:418E  18                           db     s7_START/02000h-2
      31.  00:418F  B2 00                        dw     (s7_END - s7_START+127)/128
      32.  00:4191                          
      33.  00:4191  80 71                        dw     06000h + (s8_START & 01FFFH)
      34.  00:4193  1B                           db     s8_START/02000h-2
      35.  00:4194  4E 01                        dw     (s8_END - s8_START+127)/128
      36.  00:4196                          
      37.  00:4196  80 78                        dw     06000h + (s9_START & 01FFFH)
      38.  00:4198  20                           db     s9_START/02000h-2
      39.  00:4199  FB 00                        dw     (s9_END - s9_START+127)/128
      40.  00:419B                          
      41.  00:419B  00 76                        dw     06000h + (s10_START & 01FFFH)
      42.  00:419D  24                           db     s10_START/02000h-2
      43.  00:419E  60 00                        dw     (s10_END - s10_START+127)/128
      44.  00:41A0                          
      45.  00:41A0  00 66                        dw     06000h + (s11_START & 01FFFH)
      46.  00:41A2  26                           db     s11_START/02000h-2
      47.  00:41A3  C8 00                        dw     (s11_END - s11_START+127)/128
      48.  00:41A5                          
     245   00:41A5                      
     246   00:41A5                      
     247   00:41A5                      ;-------------------------------------
     248   00:41A5                      ; Moves sample pointer to next page
     249   00:41A5                      ;-------------------------------------
     250   00:41A5                      ReplayerNextPage:
     251   00:41A5                      
     252   00:41A5  3A 02 D0                    ld      a,(SamplePage)
     253   00:41A8  3C                          inc     a
     254   00:41A9  32 02 D0                    ld      (SamplePage),a
     255   00:41AC  32 00 68                    ld      (Bank2),a
     256   00:41AF                      
     257   00:41AF  21 00 60                    ld      hl,06000h
     258   00:41B2  22 00 D0                    ld      (SamplePos),hl
     259   00:41B5  C9                          ret
     260   00:41B6                      
     261   00:41B6                      
     262   00:41B6                      ;-------------------------------------
     263   00:41B6                      ; Updates the SCC wave table. This method updates
     264   00:41B6                      ; the entire wave table starting at sample 'a'
     265   00:41B6                      ;-------------------------------------
     266   00:41B6                      ;-------------------------------------
     267   00:41B6                      ; write the first NSmp samples
     268   00:41B6                      ;-------------------------------------
     269   00:41B6  (00:0015)           NSmp:  equ 21
     270   00:41B6                      
     271   00:41B6                      myldir0:
     272   00:41B6                              repeat     NSmp
     273   00:41B6                    <         ldi                     ; 18*NSmp
     274   00:41B6                    <         endrepeat 
     274   00:41B6  ED A0 ED A0 ED A0 ED A0 ED A0 ED A0 ED A0 ED A0 
     274   00:41C6  ED A0 ED A0 ED A0 ED A0 ED A0 ED A0 ED A0 ED A0 
     274   00:41D6  ED A0 ED A0 ED A0 ED A0 ED A0 
     275   00:41E0                      
     276   00:41E0  01 0B 00                    ld      bc,32-NSmp      ; 11
     277   00:41E3  09                          add     hl,bc           ; 12
     278   00:41E4  01 00 00                    ld      bc,0            ; 11     ; dummy
     279   00:41E7  C9                          ret                     ; 11
     280   00:41E8                      
     281   00:41E8                      ;-------------------------------------
     282   00:41E8                      ; write the last 32-NSmp samples
     283   00:41E8                      ;-------------------------------------
     284   00:41E8                      myldir:
     285   00:41E8  01 15 00                    ld      bc,NSmp
     286   00:41EB  09                          add     hl,bc
     287   00:41EC                      
     288   00:41EC                              repeat  (32-NSmp)
     289   00:41EC                    <         ldi
     290   00:41EC                    <         endrepeat 
     290   00:41EC  ED A0 ED A0 ED A0 ED A0 ED A0 ED A0 ED A0 ED A0 
     290   00:41FC  ED A0 ED A0 ED A0 
     291   00:4202  C9                          ret
     292   00:4203                      
     293   00:4203                      
     294   00:4203                      ReplayerUpdate:
     295   00:4203  2A 00 D0                    ld      hl,(SamplePos)
     296   00:4206  3A 05 D0                    ld      a,(Period+1)
     297   00:4209                      
     298   00:4209                              ;466 cycles
     299   00:4209                      
     300   00:4209                              ; phase 0
     301   00:4209                      
     302   00:4209  11 00 98                    ld      de,9800h        ; 11
     303   00:420C  CD B6 41                    call    myldir0         ; 18
     304   00:420F  32 81 98                    ld      (9880h+1),a     ; 14
     305   00:4212                      
     306   00:4212                              ; phase 1
     307   00:4212                      
     308   00:4212  11 20 98                    ld      de,9820h        ; 11
     309   00:4215  CD B6 41                    call    myldir0         ; 18
     310   00:4218  32 83 98                    ld      (9882h+1),a		; 14
     311   00:421B                      
     312   00:421B                              ; phase 2
     313   00:421B                      
     314   00:421B  11 40 98                    ld      de,9840h        ; 11
     315   00:421E  CD B6 41                    call    myldir0         ; 18
     316   00:4221  32 85 98                    ld      (9884h+1),a		; 14
     317   00:4224                      
     318   00:4224                              ; phase 3
     319   00:4224                      
     320   00:4224  11 60 98                    ld      de,9860h        ; 11
     321   00:4227  CD B6 41                    call    myldir0         ; 18
     322   00:422A  32 87 98                    ld      (9886h+1),a		; 14 
     323   00:422D                      		
     324   00:422D                              ; Start over with rest of samples
     325   00:422D                      
     326   00:422D  2A 00 D0                    ld      hl,(SamplePos)
     327   00:4230                      
     328   00:4230  11 15 98                    ld      de,9800h+NSmp
     329   00:4233  CD E8 41                    call    myldir
     330   00:4236                      
     331   00:4236  11 35 98                    ld      de,9820h+NSmp
     332   00:4239  CD E8 41                    call    myldir
     333   00:423C                      
     334   00:423C  11 55 98                    ld      de,9840h+NSmp
     335   00:423F  CD E8 41                    call    myldir
     336   00:4242                      
     337   00:4242  11 75 98                    ld      de,9860h+NSmp
     338   00:4245  CD E8 41                    call    myldir
     339   00:4248                      
     340   00:4248  22 00 D0                    ld      (SamplePos),hl
     341   00:424B                      
     342   00:424B  3E 0F               		ld      a,00001111b     ; channels 1-4 active
     343   00:424D  32 8F 98                    ld      (988Fh),a
     344   00:4250                      
     345   00:4250  CB 7C                       bit     7,h
     346   00:4252  C4 A5 41                    call    nz,ReplayerNextPage
     347   00:4255                      
     348   00:4255  2A 06 D0                    ld      hl,(NumBlocksToPlay)     
     349   00:4258  2B                          dec     hl                       ; does NOT affect Z flag
     350   00:4259  22 06 D0                    ld      (NumBlocksToPlay),hl     
     351   00:425C                      
     352   00:425C  7C                          ld      a,h
     353   00:425D  B5                          or      l
     354   00:425E  C0                  		ret		nz
     355   00:425F                      
     356   00:425F                      ;-------------------------------------
     357   00:425F                      ; Mute replayer
     358   00:425F                      ;-------------------------------------
     359   00:425F                      ReplayerMute:
     360   00:425F                      
     361   00:425F  AF                          xor      a
     362   00:4260  32 08 D0                    ld      (SccSfxOn),a
     363   00:4263  32 8F 98                    ld      (988Fh),a	; all channels inactive
     364   00:4266  C9                          ret
     365   00:4267                      
     366   00:4267                      
     367   00:4267                      
     368   00:4267                      ;-------------------------------------
     369   00:4267                      ; To make rom guesseres happy
     370   00:4267                      ;-------------------------------------
     371   00:4267                      init_mapper:
     372   00:4267  AF                          xor     a
     373   00:4268  32 00 60                    ld      (Bank1),a
     374   00:426B  3C                  		inc		a
     375   00:426C  32 00 68                    ld      (Bank2),a
     376   00:426F  3C                  		inc		a
     377   00:4270  32 00 70                    ld      (Bank3),a
     378   00:4273  3C                  		inc		a
     379   00:4274  32 00 78                    ld      (Bank4),a
     380   00:4277  C9                          ret
     381   00:4278                      
     382   00:4278                      ;-------------------------------------
     383   00:4278                      ; method that prints hl on screen
     384   00:4278                      ; to address de
     385   00:4278                      ;-------------------------------------
     386   00:4278                      PrintNum:
     387   00:4278  7B                          ld      a,e
     388   00:4279  D3 99                       out     (99h),a
     389   00:427B  7A                          ld      a,d
     390   00:427C  E6 3F                       and     3Fh
     391   00:427E  F6 40                       or      40h
     392   00:4280  D3 99                       out     (99h),a
     393   00:4282                      
     394   00:4282  E5                          push    hl
     395   00:4283  EB                          ex      de,hl
     396   00:4284                      
     397   00:4284  7A                          ld      a,d
     398   00:4285  07                          rlca
     399   00:4286  07                          rlca
     400   00:4287  07                          rlca
     401   00:4288  07                          rlca
     402   00:4289  E6 0F                       and     15
     403   00:428B  06 00                       ld      b,0
     404   00:428D  4F                          ld      c,a
     405   00:428E  21 C2 42                    ld      hl,Numbers
     406   00:4291  09                          add     hl,bc
     407   00:4292  7E                          ld      a,(hl)
     408   00:4293  D3 98                       out     (98h),a
     409   00:4295                      
     410   00:4295  7A                          ld      a,d
     411   00:4296  E6 0F                       and     15
     412   00:4298  06 00                       ld      b,0
     413   00:429A  4F                          ld      c,a
     414   00:429B  21 C2 42                    ld      hl,Numbers
     415   00:429E  09                          add     hl,bc
     416   00:429F  7E                          ld      a,(hl)
     417   00:42A0  D3 98                       out     (98h),a
     418   00:42A2                      
     419   00:42A2  7B                          ld      a,e
     420   00:42A3  07                          rlca
     421   00:42A4  07                          rlca
     422   00:42A5  07                          rlca
     423   00:42A6  07                          rlca
     424   00:42A7  E6 0F                       and     15
     425   00:42A9  06 00                       ld      b,0
     426   00:42AB  4F                          ld      c,a
     427   00:42AC  21 C2 42                    ld      hl,Numbers
     428   00:42AF  09                          add     hl,bc
     429   00:42B0  7E                          ld      a,(hl)
     430   00:42B1  D3 98                       out     (98h),a
     431   00:42B3                      
     432   00:42B3  7B                          ld      a,e
     433   00:42B4  E6 0F                       and     15
     434   00:42B6  06 00                       ld      b,0
     435   00:42B8  4F                          ld      c,a
     436   00:42B9  21 C2 42                    ld      hl,Numbers
     437   00:42BC  09                          add     hl,bc
     438   00:42BD  7E                          ld      a,(hl)
     439   00:42BE  D3 98                       out     (98h),a
     440   00:42C0                      
     441   00:42C0  E1                          pop     hl
     442   00:42C1  C9                          ret
     443   00:42C2                      
     444   00:42C2                      Numbers:
     445   00:42C2                              db  "0123456789ABCDEF"
     445   00:42C2  30 31 32 33 34 35 36 37 38 39 41 42 43 44 45 46 
     446   00:42D2                      
     447   00:42D2                      ;-------------------------------------
     448   00:42D2                      ; Adjusts the SCC period to the frame
     449   00:42D2                      ; rate
     450   00:42D2                      ;-------------------------------------
     451   00:42D2                      
     452   00:42D2  (00:08BC)           Period50: equ       (3579545/32/50-1) 
     453   00:42D2  (00:0749)           Period60: equ       (3579545/32*1001/(60*1000)-1) 
     454   00:42D2                      
     455   00:42D2                      ;Period60: equ      749h
     456   00:42D2                      
     457   00:42D2                      SccAdjust:
     458   00:42D2  21 49 07            		ld      hl,Period60
     459   00:42D5  22 04 D0            		ld      (Period),hl
     460   00:42D8                      
     461   00:42D8  1E 07                       ld      e,7					;    7   |   RET   SEL   BS   STOP   TAB   ESC   F5    F4
     462   00:42DA  CD 60 43                    call    checkkbd
     463   00:42DD  FE FB                       cp      11111011b           ; key ESC
     464   00:42DF  C0                          ret     nz
     465   00:42E0                      
     466   00:42E0                              ; press ESC at boot to start the frequency test
     467   00:42E0                      		; WARNING it hangs on SCC+
     468   00:42E0                      
     469   00:42E0  3E 18                       ld      a,00011000b
     470   00:42E2  32 8F 98                    ld      (988Fh),a		; activate ch 4 & 5 for testing
     471   00:42E5                      
     472   00:42E5  21 60 98                    ld      hl,9800h+32*3   ; counter in channel 4
     473   00:42E8  01 00 20                    ld      bc,2000h
     474   00:42EB                      .counter:
     475   00:42EB  71                          ld      (hl),c
     476   00:42EC  23                          inc     hl
     477   00:42ED  0C                          inc     c
     478   00:42EE  10 FB                       djnz    .counter
     479   00:42F0                      
     480   00:42F0  3E A0                       ld      a,10100000b     	; rotate channel 4&5 with ch4 freq., reset wav if freq is written
     481   00:42F2  32 E0 98                    ld      (98E0h),a			; on SCC
     482   00:42F5  32 C0 98                    ld  	(98C0h),a			; cover SCC+ in SCC mode
     483   00:42F8                      
     484   00:42F8  21 45 07                    ld      hl,Period60-4
     485   00:42FB  DB 99                       in      a,(99h)
     486   00:42FD  C3 18 43            		jp		2f					; expect in C any value > 31
     487   00:4300                      
     488   00:4300                      .loop:
     489   00:4300                      
     490   00:4300  DB 99               1:      in      a,(99h)
     491   00:4302  E6 80                       and     80h
     492   00:4304  CA 00 43                    jp      z,1B         ; wait vblank
     493   00:4307                      
     494   00:4307  3A 60 98                    ld      a,(9800h+32*3)
     495   00:430A  B9                          cp      c
     496   00:430B  CA 1E 43                    jp      z,.end
     497   00:430E                      
     498   00:430E  0E 1F                       ld      c,31
     499   00:4310  23                          inc     hl
     500   00:4311                      
     501   00:4311  DB 99               1:      in      a,(99h)
     502   00:4313  E6 80                       and     80h
     503   00:4315  CA 11 43                    jp      z,1B         ; wait vblank
     504   00:4318                      2:
     505   00:4318  22 86 98                    ld      (9886h),hl	
     506   00:431B                      ;        ld      (9888h),hl	; ch5 not needed
     507   00:431B  C3 00 43                    jp      .loop
     508   00:431E                      .end:
     509   00:431E  22 04 D0                    ld      (Period),hl
     510   00:4321                      
     511   00:4321  C9                          ret
     512   00:4322                      
     513   00:4322                      ;-------------------------------------
     514   00:4322                      ; Initialize the scc
     515   00:4322                      ;-------------------------------------
     516   00:4322                      SccInit:
     517   00:4322  CD 52 43                    call SccMute
     518   00:4325                      
     519   00:4325  3E 20                       ld  	a,00100000b         ; Reset phase when freq is written
     520   00:4327  32 E0 98                    ld  	(98E0h),a			; on SCC
     521   00:432A  32 C0 98                    ld  	(98C0h),a			; cover SCC+ in SCC mode
     522   00:432D                       		
     523   00:432D  3E 0F                       ld      a,15
     524   00:432F  32 8A 98                    ld      (988Ah),a       ; volume ch1
     525   00:4332  32 8B 98                    ld      (988Bh),a       ; volume ch2
     526   00:4335  32 8C 98                    ld      (988Ch),a       ; volume ch3
     527   00:4338  32 8D 98                    ld      (988Dh),a       ; volume ch4
     528   00:433B  AF                  		xor		a
     529   00:433C  32 8E 98                    ld      (988Eh),a       ; experiment on ch 5
     530   00:433F                      
     531   00:433F  2A 04 D0                    ld      hl,(Period)
     532   00:4342  22 80 98                    ld      (9880h),hl
     533   00:4345  22 82 98                    ld      (9882h),hl
     534   00:4348  22 84 98                    ld      (9884h),hl
     535   00:434B  22 86 98                    ld      (9886h),hl
     536   00:434E                      		; ld		hl,0
     537   00:434E  22 88 98                    ld      (9888h),hl		; experiment on ch 5
     538   00:4351                      		
     539   00:4351  C9                          ret
     540   00:4352                      
     541   00:4352                      SccMute:
     542   00:4352  21 00 98                    ld      hl,9800h
     543   00:4355  11 01 98                    ld      de,9801h
     544   00:4358  01 7F 00                    ld      bc,32*4 -1
     545   00:435B                      
     546   00:435B  36 00                       ld      (hl),0
     547   00:435D  ED B0                       ldir
     548   00:435F  C9                          ret
     549   00:4360                      
     550   00:4360                      ;-------------------------------------
     551   00:4360                      ; checkkbd: ckeck keyboard line
     552   00:4360                      ; syntax:checkkbd <keyboar line #>
     553   00:4360                      ; in:  e
     554   00:4360                      ; out: l
     555   00:4360                      ;-------------------------------------
     556   00:4360                      ; i8255 ports
     557   00:4360                      ;
     558   00:4360  (00:00A8)           i8255porta  equ 0a8h        ; slot selection
     559   00:4360  (00:00A9)           i8255portb  equ 0a9h        ; keyboard column input
     560   00:4360  (00:00AA)           i8255portc  equ 0aah        ; leds, motor, cassette, kbd line
     561   00:4360  (00:00AB)           i8255portd  equ 0abh        ; mode select for i8255 ports A,B,C
     562   00:4360                      
     563   00:4360                      checkkbd:
     564   00:4360  DB AA                       in  a,(i8255portc)
     565   00:4362  E6 F0                       and 011110000B          ; upper 4 bits contain info to preserve
     566   00:4364  B3                          or  e
     567   00:4365  D3 AA                       out (i8255portc),a
     568   00:4367  DB A9                       in  a,(i8255portb)
     569   00:4369  6F                          ld  l,a
     570   00:436A  C9                          ret
     571   00:436B                      
     572   00:436B                      ; #define right (!(kbd & 128))
     573   00:436B                      ; #define left 	(!(kbd & 16))
     574   00:436B                      ; #define up 	(!(kbd & 32))
     575   00:436B                      ; #define down 	(!(kbd & 64))
     576   00:436B                      ; // space
     577   00:436B                      ; #define key1 	(!(kbd & 1))
     578   00:436B                      ; // M
     579   00:436B                      ; #define key2 	(!(kb2 & 4))
     580   00:436B                      
     581   00:436B                      ;  Bit_7 Bit_6 Bit_5 Bit_4 Bit_3 Bit_2 Bit_1 Bit_0
     582   00:436B                      ; 0 "7" "6" "5" "4" "3" "2" "1" "0"
     583   00:436B                      ; 1 ";" "]" "[" "\" "=" "-" "9" "8"
     584   00:436B                      ; 2 "B" "A" ??? "/" "." "," "'" "`"
     585   00:436B                      ; 3 "J" "I" "H" "G" "F" "E" "D" "C"
     586   00:436B                      ; 4 "R" "Q" "P" "O" "N" "M" "L" "K"
     587   00:436B                      ; 5 "Z" "Y" "X" "W" "V" "U" "T" "S"
     588   00:436B                      ; 6 F3 F2  F1 CODE CAP GRAPH CTR SHIFT
     589   00:436B                      ; 7 RET SEL BS STOP TAB ESC F5  F4
     590   00:436B                      ; 8 RIGHT DOWN UP LEFT DEL INS HOME SPACE
     591   00:436B                      
     592   00:436B                      	
     593   00:436B                      ;-------------------------------------
     594   00:436B                      ; SCC and Slot management
     595   00:436B                      ;-------------------------------------
     596   00:436B                               include rominit64.asm
       1.  00:436B                      
       2.  00:436B                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
       3.  00:436B                      ; set pages and subslot
       4.  00:436B                      ;
       5.  00:436B                      
       6.  00:436B                      
       7.  00:436B  (00:0024)           ENASLT:			equ		024h
       8.  00:436B  (00:0138)           RSLREG:			equ		0138h
       9.  00:436B  (00:013B)           WSLREG:			equ		013Bh
      10.  00:436B  (00:FCC1)           EXPTBL:			equ		0FCC1h	; Bios Slot / Expansion Slot
      11.  00:436B                      
      12.  00:436B                      
      13.  00:436B                      ; ----------------------------
      14.  00:436B                      ; pre-set main slot for page 3
      15.  00:436B                      ; and set sub-slot for page 3
      16.  00:436B                      ; ----------------------------
      17.  00:436B                      	macro	mainslot_setup n
      18.  00:436B                    < 	and		3
      19.  00:436B                    < [2]	rrca
      20.  00:436B                    < 	and		0xC0
      21.  00:436B                    < 	ld		c,a
      22.  00:436B                    < 	ld		a,d
      23.  00:436B                    < 	and		0x3F
      24.  00:436B                    < 	or		c
      25.  00:436B                    < 	ld		c,a					; Primary slot value with main slot in page 3
      26.  00:436B                    < 
      27.  00:436B                    < 	ld		a,b
      28.  00:436B                    < 	and		0x0C
      29.  00:436B                    < [2]	rrca
      30.  00:436B                    < 	and		3
      31.  00:436B                    < 	ld		b,a					; B = Expanded slot in page 3
      32.  00:436B                    < 	ld		a,c
      33.  00:436B                    < 	out		(0A8h),a			; Slot : Main Slot, xx, xx, Main slot
      34.  00:436B                    < 	ld		a,(0FFFFh)
      35.  00:436B                    < 	cpl
      36.  00:436B                    < 	if (n<=4)
      37.  00:436B                    < [n]	RLCA
      38.  00:436B                    < 	else
      39.  00:436B                    < [8-n] RRCA	
      40.  00:436B                    < 	endif
      41.  00:436B                    < 	and		0xFC
      42.  00:436B                    < 	or		b
      43.  00:436B                    < 	if (n<=4)
      44.  00:436B                    < [n]	RRCA
      45.  00:436B                    < 	else
      46.  00:436B                    < [8-n] RLCA
      47.  00:436B                    < 	endif
      48.  00:436B                    < 	ld		(0FFFFh),a		; Expanded slot selected
      49.  00:436B                    < 	ld		b,a				; save for later	
      50.  00:436B                    < 	endmacro
      51.  00:436B                      		
      52.  00:436B                      
      53.  00:436B                      ; ------------------------------
      54.  00:436B                      ; SEARCH_SLOT
      55.  00:436B                      ; look for the slot of our rom
      56.  00:436B                      ; active in page 1
      57.  00:436B                      ; ------------------------------
      58.  00:436B                      
      59.  00:436B                      search_slot:
      60.  00:436B  CD 38 01            	call	RSLREG
      61.  00:436E  0F 0F               [2]	rrca
      62.  00:4370  E6 03               	and		3
      63.  00:4372  4F                  	ld		c,a
      64.  00:4373  06 00               	ld		b,0
      65.  00:4375  21 C1 FC            	ld		hl,EXPTBL
      66.  00:4378  09                  	add		hl,bc
      67.  00:4379  7E                  	ld		a,(hl)
      68.  00:437A  E6 80               	and		080h
      69.  00:437C  B1                  	or		c
      70.  00:437D  4F                  	ld		c,a
      71.  00:437E  23 23 23 23         [4]	inc		hl
      72.  00:4382  7E                  	ld		a,(hl)
      73.  00:4383  E6 0C               	and		0Ch
      74.  00:4385  B1                  	or		c
      75.  00:4386  32 0C D0            	ld		(slotvar),a
      76.  00:4389  C9                  	ret
      77.  00:438A                      	
      78.  00:438A                      ; ------------------------------
      79.  00:438A                      ; look for the slot of ram
      80.  00:438A                      ; active in page 3
      81.  00:438A                      ; ------------------------------
      82.  00:438A                      
      83.  00:438A                      search_slotram:
      84.  00:438A  F3                  	di
      85.  00:438B  CD 38 01            	call	RSLREG
      86.  00:438E  07 07               [2]	rlca
      87.  00:4390  E6 03               	and		3
      88.  00:4392  4F                  	ld		c,a
      89.  00:4393  06 00               	ld		b,0
      90.  00:4395  21 C1 FC            	ld		hl,EXPTBL
      91.  00:4398  09                  	add		hl,bc
      92.  00:4399  7E                  	ld		a,(hl)
      93.  00:439A  E6 80               	and		080h
      94.  00:439C  28 0D               	jr		z,search_slotram0
      95.  00:439E  B1                  	or		c
      96.  00:439F  4F                  	ld		c,a
      97.  00:43A0  23 23 23 23         [4]	inc		hl
      98.  00:43A4  7E                  	ld		a,(hl)
      99.  00:43A5  07 07 07 07         [4]	rlca
     100.  00:43A9  E6 0C               	and		0Ch
     101.  00:43AB                      search_slotram0:
     102.  00:43AB  B1                  	or		c
     103.  00:43AC  32 0E D0            	ld		(slotram),a
     104.  00:43AF  C9                  	ret
     105.  00:43B0                      	
     106.  00:43B0                      ; ------------------------------
     107.  00:43B0                      ; SETROMPAGE0
     108.  00:43B0                      ; Set the chart in
     109.  00:43B0                      ; Page 0
     110.  00:43B0                      ; -----------------------------
     111.  00:43B0                      
     112.  00:43B0                      setrompage0:
     113.  00:43B0  3A 0C D0            	ld		a,(slotvar)
     114.  00:43B3  C3 D1 43            	jp		setslotpage0
     115.  00:43B6                      
     116.  00:43B6                      setrompage2:
     117.  00:43B6  3A 0C D0            	ld		a,(slotvar)
     118.  00:43B9  C3 47 44            	jp		setslotpage2
     119.  00:43BC                      
     120.  00:43BC                      setrampage2:
     121.  00:43BC  3A 0E D0            	ld		a,(slotram)
     122.  00:43BF  C3 47 44            	jp		setslotpage2
     123.  00:43C2                      	
     124.  00:43C2                      setrompage3:
     125.  00:43C2  3A 0C D0            	ld		a,(slotvar)
     126.  00:43C5  C3 8E 44            	jp		setslotpage3
     127.  00:43C8                      
     128.  00:43C8                      setrampage3:
     129.  00:43C8  3A 0E D0            	ld		a,(slotram)
     130.  00:43CB  C3 8E 44            	jp		setslotpage3
     131.  00:43CE                      	
     132.  00:43CE                      ; ------------------------------
     133.  00:43CE                      ; RECBIOS
     134.  00:43CE                      ; set the bios ROM
     135.  00:43CE                      ; -------------------------------
     136.  00:43CE                      recbios:
     137.  00:43CE  3A C1 FC            	ld		a,(EXPTBL)
     138.  00:43D1                      
     139.  00:43D1                      ; ---------------------------
     140.  00:43D1                      ; SETSLOTPAGE0
     141.  00:43D1                      ; Set the slot passed in A
     142.  00:43D1                      ; at page 0 in the Z80 address space
     143.  00:43D1                      ; A: Format FxxxSSPP
     144.  00:43D1                      ; ----------------------------
     145.  00:43D1                      
     146.  00:43D1                      setslotpage0:
     147.  00:43D1  F3                  	di
     148.  00:43D2  47                  	ld		b,a					; B = Slot param in FxxxSSPP format
     149.  00:43D3  DB A8               	in		a,(0A8h)
     150.  00:43D5  E6 FC               	and		0xFC
     151.  00:43D7  57                  	ld		d,a					; D = Primary slot value
     152.  00:43D8  78                  	ld		a,b
     153.  00:43D9  E6 03               	and		3
     154.  00:43DB  B2                  	or		d
     155.  00:43DC  57                  	ld		d,a		; D = Final Value for primary slot
     156.  00:43DD  78                  	ld		a,b		; Check if expanded
     157.  00:43DE  CB 7F               	bit		7,a
     158.  00:43E0  28 22               	jr		z,1f	; Not Expanded
     159.  00:43E2                      	mainslot_setup	0
     159.  00:43E2  E6 03             >  and  3
     159.  00:43E4  0F 0F             > [2] rrca
     159.  00:43E6  E6 C0             >  and  0xC0
     159.  00:43E8  4F                >  ld  c,a
     159.  00:43E9  7A                >  ld  a,d
     159.  00:43EA  E6 3F             >  and  0x3F
     159.  00:43EC  B1                >  or  c
     159.  00:43ED  4F                >  ld  c,a
     159.  00:43EE                    > 
     159.  00:43EE  78                >  ld  a,b
     159.  00:43EF  E6 0C             >  and  0x0C
     159.  00:43F1  0F 0F             > [2] rrca
     159.  00:43F3  E6 03             >  and  3
     159.  00:43F5  47                >  ld  b,a
     159.  00:43F6  79                >  ld  a,c
     159.  00:43F7  D3 A8             >  out  (0A8h),a
     159.  00:43F9  3A FF FF          >  ld  a,(0FFFFh)
     159.  00:43FC  2F                >  cpl
     159.  00:43FD                    >  if (n<=4)
     159.  00:43FD                    > [n] RLCA
     159.  00:43FD                    >  else
     159.  00:43FD                    ~ [8-n] RRCA
     159.  00:43FD                    ~  endif
     159.  00:43FD  E6 FC             >  and  0xFC
     159.  00:43FF  B0                >  or  b
     159.  00:4400                    >  if (n<=4)
     159.  00:4400                    > [n] RRCA
     159.  00:4400                    >  else
     159.  00:4400                    ~ [8-n] RLCA
     159.  00:4400                    ~  endif
     159.  00:4400  32 FF FF          >  ld  (0FFFFh),a
     159.  00:4403  47                >  ld  b,a
     160.  00:4404  7A                  1:	ld		a,d				; A = Final value
     161.  00:4405  D3 A8               	out		(0A8h),a		; Slot Final. Ram, rom c, rom c, Main
     162.  00:4407  C9                  	ret
     163.  00:4408                      
     164.  00:4408                      ; ---------------------------
     165.  00:4408                      ; SETSLOTPAGE1
     166.  00:4408                      ; Set the slot passed in A
     167.  00:4408                      ; at page 1 in the Z80 address space
     168.  00:4408                      ; A: Format FxxxSSPP
     169.  00:4408                      ; ----------------------------
     170.  00:4408                      
     171.  00:4408                      setslotpage1:
     172.  00:4408  F3                  	di
     173.  00:4409  47                  	ld		b,a					; B = Slot param in FxxxSSPP format
     174.  00:440A  DB A8               	in		a,(0A8h)
     175.  00:440C  0F 0F               [2]	RRCA
     176.  00:440E  E6 FC               	and		0xFC
     177.  00:4410  57                  	ld		d,a					; D = Primary slot value
     178.  00:4411  78                  	ld		a,b
     179.  00:4412  E6 03               	and		3
     180.  00:4414  B2                  	or		d
     181.  00:4415  07 07               [2]	RLCA
     182.  00:4417  57                  	ld		d,a		; D = Final Value for primary slot
     183.  00:4418  78                  	ld		a,b		; Check if expanded
     184.  00:4419  CB 7F               	bit		7,a
     185.  00:441B  28 26               	jr		z,1f	; Not Expanded
     186.  00:441D                      	mainslot_setup	6
     186.  00:441D  E6 03             >  and  3
     186.  00:441F  0F 0F             > [2] rrca
     186.  00:4421  E6 C0             >  and  0xC0
     186.  00:4423  4F                >  ld  c,a
     186.  00:4424  7A                >  ld  a,d
     186.  00:4425  E6 3F             >  and  0x3F
     186.  00:4427  B1                >  or  c
     186.  00:4428  4F                >  ld  c,a
     186.  00:4429                    > 
     186.  00:4429  78                >  ld  a,b
     186.  00:442A  E6 0C             >  and  0x0C
     186.  00:442C  0F 0F             > [2] rrca
     186.  00:442E  E6 03             >  and  3
     186.  00:4430  47                >  ld  b,a
     186.  00:4431  79                >  ld  a,c
     186.  00:4432  D3 A8             >  out  (0A8h),a
     186.  00:4434  3A FF FF          >  ld  a,(0FFFFh)
     186.  00:4437  2F                >  cpl
     186.  00:4438                    >  if (n<=4)
     186.  00:4438                    ~ [n] RLCA
     186.  00:4438                    ~  else
     186.  00:4438  0F 0F             > [8-n] RRCA
     186.  00:443A                    >  endif
     186.  00:443A  E6 FC             >  and  0xFC
     186.  00:443C  B0                >  or  b
     186.  00:443D                    >  if (n<=4)
     186.  00:443D                    ~ [n] RRCA
     186.  00:443D                    ~  else
     186.  00:443D  07 07             > [8-n] RLCA
     186.  00:443F                    >  endif
     186.  00:443F  32 FF FF          >  ld  (0FFFFh),a
     186.  00:4442  47                >  ld  b,a
     187.  00:4443  7A                  1:	ld		a,d				; A = Final value
     188.  00:4444  D3 A8               	out		(0A8h),a		; Slot Final. Ram, rom c, rom c, Main
     189.  00:4446  C9                  	ret
     190.  00:4447                      	
     191.  00:4447                      
     192.  00:4447                      ; ---------------------------
     193.  00:4447                      ; SETSLOTPAGE2
     194.  00:4447                      ; Set the slot passed in A
     195.  00:4447                      ; at page 2 in the Z80 address space
     196.  00:4447                      ; A: Format FxxxSSPP
     197.  00:4447                      ; ----------------------------
     198.  00:4447                      
     199.  00:4447                      setslotpage2:
     200.  00:4447  F3                  	di
     201.  00:4448  47                  	ld		b,a					; B = Slot param in FxxxSSPP format
     202.  00:4449  DB A8               	in		a,(0A8h)
     203.  00:444B  07 07 07 07         [4]	RLCA
     204.  00:444F  E6 FC               	and		0xFC
     205.  00:4451  57                  	ld		d,a					; D = Primary slot value
     206.  00:4452  78                  	ld		a,b
     207.  00:4453  E6 03               	and		3
     208.  00:4455  B2                  	or		d
     209.  00:4456  0F 0F 0F 0F         [4]	RRCA
     210.  00:445A  57                  	ld		d,a		; D = Final Value for primary slot
     211.  00:445B  78                  	ld		a,b		; Check if expanded
     212.  00:445C  CB 7F               	bit		7,a
     213.  00:445E  28 2A               	jr		z,1f	; Not Expanded
     214.  00:4460                      	mainslot_setup	4
     214.  00:4460  E6 03             >  and  3
     214.  00:4462  0F 0F             > [2] rrca
     214.  00:4464  E6 C0             >  and  0xC0
     214.  00:4466  4F                >  ld  c,a
     214.  00:4467  7A                >  ld  a,d
     214.  00:4468  E6 3F             >  and  0x3F
     214.  00:446A  B1                >  or  c
     214.  00:446B  4F                >  ld  c,a
     214.  00:446C                    > 
     214.  00:446C  78                >  ld  a,b
     214.  00:446D  E6 0C             >  and  0x0C
     214.  00:446F  0F 0F             > [2] rrca
     214.  00:4471  E6 03             >  and  3
     214.  00:4473  47                >  ld  b,a
     214.  00:4474  79                >  ld  a,c
     214.  00:4475  D3 A8             >  out  (0A8h),a
     214.  00:4477  3A FF FF          >  ld  a,(0FFFFh)
     214.  00:447A  2F                >  cpl
     214.  00:447B                    >  if (n<=4)
     214.  00:447B  07 07 07 07       > [n] RLCA
     214.  00:447F                    >  else
     214.  00:447F                    ~ [8-n] RRCA
     214.  00:447F                    ~  endif
     214.  00:447F  E6 FC             >  and  0xFC
     214.  00:4481  B0                >  or  b
     214.  00:4482                    >  if (n<=4)
     214.  00:4482  0F 0F 0F 0F       > [n] RRCA
     214.  00:4486                    >  else
     214.  00:4486                    ~ [8-n] RLCA
     214.  00:4486                    ~  endif
     214.  00:4486  32 FF FF          >  ld  (0FFFFh),a
     214.  00:4489  47                >  ld  b,a
     215.  00:448A  7A                  1:	ld		a,d				; A = Final value
     216.  00:448B  D3 A8               	out		(0A8h),a		; Slot Final. Ram, rom c, rom c, Main
     217.  00:448D  C9                  	ret
     218.  00:448E                      	
     219.  00:448E                      ; ---------------------------
     220.  00:448E                      ; SETSLOTPAGE3
     221.  00:448E                      ; Set the slot passed in A
     222.  00:448E                      ; at page 3 in the Z80 address space
     223.  00:448E                      ; A: Format FxxxSSPP
     224.  00:448E                      ; ----------------------------
     225.  00:448E                      	
     226.  00:448E                      setslotpage3:
     227.  00:448E  F3                  	di
     228.  00:448F  47                  	ld		b,a					; B = Slot param in FxxxSSPP format
     229.  00:4490  DB A8               	in		a,(0A8h)
     230.  00:4492  07 07               [2]	RLCA
     231.  00:4494  E6 FC               	and		0xFC
     232.  00:4496  57                  	ld		d,a					; D = Primary slot value
     233.  00:4497  78                  	ld		a,b
     234.  00:4498  E6 03               	and		3
     235.  00:449A  B2                  	or		d
     236.  00:449B  0F 0F               [2]	RRCA	
     237.  00:449D  57                  	ld		d,a		; D = Final Value for primary slot
     238.  00:449E  78                  	ld		a,b		; Check if expanded
     239.  00:449F  CB 7F               	bit		7,a
     240.  00:44A1  28 26               	jr		z,1f	; Not Expanded
     241.  00:44A3                      	mainslot_setup	2
     241.  00:44A3  E6 03             >  and  3
     241.  00:44A5  0F 0F             > [2] rrca
     241.  00:44A7  E6 C0             >  and  0xC0
     241.  00:44A9  4F                >  ld  c,a
     241.  00:44AA  7A                >  ld  a,d
     241.  00:44AB  E6 3F             >  and  0x3F
     241.  00:44AD  B1                >  or  c
     241.  00:44AE  4F                >  ld  c,a
     241.  00:44AF                    > 
     241.  00:44AF  78                >  ld  a,b
     241.  00:44B0  E6 0C             >  and  0x0C
     241.  00:44B2  0F 0F             > [2] rrca
     241.  00:44B4  E6 03             >  and  3
     241.  00:44B6  47                >  ld  b,a
     241.  00:44B7  79                >  ld  a,c
     241.  00:44B8  D3 A8             >  out  (0A8h),a
     241.  00:44BA  3A FF FF          >  ld  a,(0FFFFh)
     241.  00:44BD  2F                >  cpl
     241.  00:44BE                    >  if (n<=4)
     241.  00:44BE  07 07             > [n] RLCA
     241.  00:44C0                    >  else
     241.  00:44C0                    ~ [8-n] RRCA
     241.  00:44C0                    ~  endif
     241.  00:44C0  E6 FC             >  and  0xFC
     241.  00:44C2  B0                >  or  b
     241.  00:44C3                    >  if (n<=4)
     241.  00:44C3  0F 0F             > [n] RRCA
     241.  00:44C5                    >  else
     241.  00:44C5                    ~ [8-n] RLCA
     241.  00:44C5                    ~  endif
     241.  00:44C5  32 FF FF          >  ld  (0FFFFh),a
     241.  00:44C8  47                >  ld  b,a
     242.  00:44C9  7A                  1:	ld		a,d				; A = Final value
     243.  00:44CA  D3 A8               	out		(0A8h),a		; Slot Final. Ram, rom c, rom c, Main
     244.  00:44CC  C9                  	ret
     597   00:44CD                               include sccdetec.asm
       1.  00:44CD                      
       2.  00:44CD                       ; ====================
       3.  00:44CD                       ;    Initialization
       4.  00:44CD                       ; ====================
       5.  00:44CD                      SCCsearch
       6.  00:44CD  21 02 45             	ld	hl,begin
       7.  00:44D0  11 00 C0             	ld	de,0C000H
       8.  00:44D3  01 7E 00             	ld	bc,end-begin+1
       9.  00:44D6  ED B0                	ldir
      10.  00:44D8  CD 00 C0             	call	0C000H
      11.  00:44DB  78                   	ld	a,b
      12.  00:44DC  32 10 D0             	ld	(SCC),a
      13.  00:44DF  C9                   	ret
      14.  00:44E0                       
      15.  00:44E0                       ; SLOT            .db     0
      16.  00:44E0                       ; PAGE1RAM        .db     0
      17.  00:44E0                       ; RAMSLOT         .db     0
      18.  00:44E0                       
      19.  00:44E0                       ; SCC             .db     0
      20.  00:44E0                       ; SUB             .db     0FFH
      21.  00:44E0                       
      22.  00:44E0                       
      23.  00:44E0                      en_scc:
      24.  00:44E0  3A 10 D0            	ld	a,[SCC]
      25.  00:44E3  3C                  	inc	a
      26.  00:44E4  C8                  	ret	z			; no scc
      27.  00:44E5                      	; ld	a,(0xFFFF)
      28.  00:44E5                      	; cpl
      29.  00:44E5                      	; ld	(cursubslots),a
      30.  00:44E5  DB A8               	in	a,(0xA8)	; Leemos el registro principal de slots
      31.  00:44E7  32 12 D0            	ld	(curslot),a	; save it
      32.  00:44EA  5F                  	ld	e,a
      33.  00:44EB  3A 10 D0            	ld	a,(SCC)
      34.  00:44EE  E6 03               	and	0x03		; Nos fijamos en el slot primario
      35.  00:44F0  87 87 87 87         [4]	add	a,a
      36.  00:44F4  57                  	ld	d,a
      37.  00:44F5  7B                  	ld	a,e			; registro principal de slots
      38.  00:44F6  E6 CF               	and	11001111b
      39.  00:44F8  B2                  	or	d
      40.  00:44F9  D3 A8               	out (0xA8),a
      41.  00:44FB                      	; ld	(sccslots),a
      42.  00:44FB                      	; ld	a,(0xFFFF)
      43.  00:44FB                      	; cpl
      44.  00:44FB                      	; ld	(sccsubslots),a
      45.  00:44FB  C9                  	ret
      46.  00:44FC                      	
      47.  00:44FC                      en_slot:
      48.  00:44FC  3A 12 D0            	ld	a,(curslot)
      49.  00:44FF  D3 A8               	out (0xA8),a
      50.  00:4501                      	; ld	a,(cursubslots)
      51.  00:4501                      	; ld	(0xFFFF),a
      52.  00:4501  C9                  	ret
      53.  00:4502                      
      54.  00:4502                      
      55.  00:4502                      ;------------------------------------------------------------
      56.  00:4502                      ; SCC-search v1.0
      57.  00:4502                      ; by Alwin Henseler
      58.  00:4502                      ; using method described in bulletin # 18 MSX-club Enschede
      59.  00:4502                      ; input: none
      60.  00:4502                      ; output: B=slot that contains SCC (=255 if no SCC found)
      61.  00:4502                      
      62.  00:4502  (00:0024)           enaslt:          equ #0024
      63.  00:4502  (00:FCC1)           exptbl:          equ #fcc1
      64.  00:4502  (00:FCC5)           slttbl:          equ #fcc5
      65.  00:4502                      
      66.  00:4502                      begin:
      67.  00:4502  (C000)              	MAP #c000
      68.  00:4502  DB A8               	in a,(#a8)        ; read prim. slotregister
      69.  00:4504  1F                  	rra
      70.  00:4505  1F                  	rra
      71.  00:4506  1F                  	rra
      72.  00:4507  1F                  	rra
      73.  00:4508  E6 03               	and %00000011     ; A = prim.slot page 2
      74.  00:450A  06 00               	ld b,0
      75.  00:450C  4F                  	ld c,a
      76.  00:450D  21 C1 FC            	ld hl,exptbl
      77.  00:4510  09                  	add hl,bc
      78.  00:4511  CB 7E               	bit 7,(hl)        ; page 2-slot expanded ?
      79.  00:4513  28 0C               	jr z,scctest
      80.  00:4515  21 C5 FC            	ld hl,slttbl
      81.  00:4518  09                  	add hl,bc
      82.  00:4519  7E                  	ld a,(hl)         ; A = sec.sel.reg. of page 2-slot
      83.  00:451A  1F                  	rra
      84.  00:451B  1F                  	rra
      85.  00:451C  E6 0C               	and %00001100     ; bit 1/2 = sec.slot page 2
      86.  00:451E  B1                  	or c
      87.  00:451F  CB FF               	set 7,a           ; compose sec.slot-code
      88.  00:4521                      scctest:
      89.  00:4521  F5                  	push af           ; save page 2-slot on the stack
      90.  00:4522  3A C1 FC            	ld a,(exptbl)     ; 1st slot to test
      91.  00:4525                      
      92.  00:4525                      testslot:        
      93.  00:4525  F5                  	push af           ; save test-slot on the stack
      94.  00:4526  26 80               	ld h,#80
      95.  00:4528  CD 24 00            	call enaslt       ; switch slot-to-test in 8000-bfffh
      96.  00:452B  21 00 90            	ld hl,#9000
      97.  00:452E  46                  	ld b,(hl)         ; save contents of address 9000h
      98.  00:452F  36 3F               	ld (hl),#3f       ; activate SCC (if present)
      99.  00:4531                      
     100.  00:4531  AF                  	xor	a
     101.  00:4532  32 FE BF            	ld (0xbffe),a	  ; scc+ patch for bluemsx
     102.  00:4535                      
     103.  00:4535  26 9C               	ld h,#9c          ; address of SCC-register mirrors
     104.  00:4537  11 00 98            	ld de,#9800       ; 9800h = address of SCC-registers
     105.  00:453A                      testreg:         
     106.  00:453A  1A                  	ld a,(de)
     107.  00:453B  4F                  	ld c,a            ; save contents of address 98xxh
     108.  00:453C  7E                  	ld a,(hl)         ; read byte from address 9cxxh
     109.  00:453D  2F                  	cpl               ; and invert it
     110.  00:453E  12                  	ld (de),a         ; write inverted byte to 98xxh
     111.  00:453F  BE                  	cp (hl)           ; same value on 9cxxh ?
     112.  00:4540  79                  	ld a,c
     113.  00:4541  12                  	ld (de),a         ; restore value on 98xxh
     114.  00:4542  20 0D               	jr nz,nextslot    ; unequal -> no SCC -> continue search
     115.  00:4544  23                  	inc hl
     116.  00:4545  13                  	inc de            ; next test-addresses
     117.  00:4546  CB 7D               	bit 7,l           ; 128 addresses (registers) tested ?
     118.  00:4548  28 F0               	jr z,testreg      ; no -> repeat mirror-test
     119.  00:454A  78                  	ld a,b
     120.  00:454B  32 00 90            	ld (#9000),a      ; restore value on 9000h
     121.  00:454E  C1                  	pop bc            ; retrieve slotcode (=SCC-slot) from stack
     122.  00:454F  18 24               	jr done           ; SCC found, restore page 2-slot & return
     123.  00:4551                      
     124.  00:4551                      nextslot:
     125.  00:4551  78                  	ld a,b
     126.  00:4552  32 00 90            	ld (#9000),a      ; restore value on 9000h
     127.  00:4555  C1                  	pop bc            ; retrieve slotcode from stack
     128.  00:4556  CB 78               	bit 7,b           ; test-slot = sec.slot ?
     129.  00:4558  28 07               	jr z,nextprim
     130.  00:455A  78                  	ld a,b
     131.  00:455B  C6 04               	add a,4           ; increase sec.slotnumber
     132.  00:455D  CB 67               	bit 4,a           ; sec.slot = 4 ?
     133.  00:455F  28 C4               	jr z,testslot
     134.  00:4561                      nextprim:
     135.  00:4561  78                  	ld a,b
     136.  00:4562  E6 03               	and %00000011
     137.  00:4564  FE 03               	cp 3              ; prim.slot = 3 ?
     138.  00:4566  28 0B               	jr z,noscc
     139.  00:4568  3C                  	inc a             ; increase prim.slotnumber
     140.  00:4569  16 00               	ld d,0
     141.  00:456B  5F                  	ld e,a
     142.  00:456C  21 C1 FC            	ld hl,exptbl
     143.  00:456F  19                  	add hl,de
     144.  00:4570  B6                  	or (hl)           ; combine slot-expansion with slotcode
     145.  00:4571  18 B2               	jr testslot
     146.  00:4573                      
     147.  00:4573                      noscc:           
     148.  00:4573  06 FF               	ld b,255          ; code for no SCC
     149.  00:4575                      done:            
     150.  00:4575  F1                  	pop af            ; retrieve page 2-slot from stack
     151.  00:4576  C5                  	push bc
     152.  00:4577  26 80               	ld h,#80
     153.  00:4579  CD 24 00            	call enaslt       ; restore original page 2-slot
     154.  00:457C  C1                  	pop bc
     155.  00:457D  FB                  	ei
     156.  00:457E  C9                  	ret
     157.  00:457F                      end:
     158.  00:457F  (0000)              	endmap				 
     159.  00:457F                      ; -------------------------------------------------------------
     160.  00:457F                      
     598   00:457F                      	
     599   00:457F                      ;-------------------------------------
     600   00:457F                      ; Padding for rom player
     601   00:457F                      ;-------------------------------------
     602   00:457F  00 (6785)                   ds	$6000 - $
     603   00:6000                      
     604   00:6000                      
     605   00:6000                      
     606   00:6000                      ;-------------------------------------
     607   00:6000                      ; Sample data
     608   00:6000                      ;-------------------------------------
     609   00:6000                      SAMPLE_START:
     610   00:6000                               include DataTable.asm
       1.  00:6000                      s0_START:
       2.  00:6000  (1B80)                       incbin data0.bin 
       3.  00:7B80                      s0_END:
       4.  00:7B80                      s1_START:
       5.  00:7B80  (B200)                       incbin data1.bin 
       6.  00!2D80                      s1_END:
       7.  00!2D80                      s2_START:
       8.  00!2D80  (A600)                       incbin data2.bin 
       9.  00!D380                      s2_END:
      10.  00!D380                      s3_START:
      11.  00!D380  (6400)                       incbin data3.bin 
      12.  00!3780                      s3_END:
      13.  00!3780                      s4_START:
      14.  00!3780  (5900)                       incbin data4.bin 
      15.  00!9080                      s4_END:
      16.  00!9080                      s5_START:
      17.  00!9080  (6400)                       incbin data5.bin 
      18.  00!F480                      s5_END:
      19.  00!F480                      s6_START:
      20.  00!F480  (6400)                       incbin data6.bin 
      21.  00!5880                      s6_END:
      22.  00!5880                      s7_START:
      23.  00!5880  (5900)                       incbin data7.bin 
      24.  00!B180                      s7_END:
      25.  00!B180                      s8_START:
      26.  00!B180  (A700)                       incbin data8.bin 
      27.  00!5880                      s8_END:
      28.  00!5880                      s9_START:
      29.  00!5880  (7D80)                       incbin data9.bin 
      30.  00!D600                      s9_END:
      31.  00!D600                      s10_START:
      32.  00!D600  (3000)                       incbin data10.bin 
      33.  00!0600                      s10_END:
      34.  00!0600                      s11_START:
      35.  00!0600  (6400)                       incbin data11.bin 
      36.  00!6A00                      s11_END:
     611   00!6A00                      SAMPLE_END:
     612   00!6A00                      
     613   00!6A00                      
     614   00!6A00                      
     615   00!6A00                      ;-------------------------------------
     616   00!6A00                      ; Padding, align rom image to a power of two.
     617   00!6A00                      ;-------------------------------------
     618   00!6A00                      
     619   00!6A00  (00:50A00)          SAMPLE_LENGTH:  equ SAMPLE_END - SAMPLE_START
     620   00!6A00                      
     621   00!6A00                      
     622   00!6A00                      
SccReplayer4c.asm(623) : Forward reference
     623   00!6A00                              IF (SAMPLE_LENGTH <= 6000h)
     624   00!6A00                    ~         DS (06000h - SAMPLE_LENGTH)
     625   00!6A00                    ~         ELSE
SccReplayer4c.asm(626) : Forward reference
     626   00!6A00                              IF (SAMPLE_LENGTH <= 10000h-2000h)
     627   00!6A00                    ~         DS (0E000h - SAMPLE_LENGTH)
     628   00!6A00                    ~         ELSE
SccReplayer4c.asm(629) : Forward reference
     629   00!6A00                              IF (SAMPLE_LENGTH <= 1E000h)
     630   00!6A00                    ~         DS (01E000h - SAMPLE_LENGTH)
     631   00!6A00                    ~         ELSE
SccReplayer4c.asm(632) : Forward reference
     632   00!6A00                              IF (SAMPLE_LENGTH <= 3E000h)
     633   00!6A00                    ~         DS (03E000h - SAMPLE_LENGTH)
     634   00!6A00                    ~         ELSE
SccReplayer4c.asm(635) : Forward reference
     635   00!6A00                              IF (SAMPLE_LENGTH <= 7E000h)
     636   00!6A00  00 (185856)                 DS (07E000h - SAMPLE_LENGTH)
     637   00!4000                              ELSE
     638   00!4000                    ~         DS (0FE000h - SAMPLE_LENGTH)
     639   00!4000                    ~         ENDIF
     640   00!4000                              ENDIF
     641   00!4000                              ENDIF
     642   00!4000                              ENDIF
     643   00!4000                              ENDIF
     644   00!4000                      
     645   00!4000                      
     646   00!4000                      
     647   00!4000                      FINISH:
     648   00!4000                      
     649   00!4000                      
     650   00!4000                      ;---------------------------------------------------------
     651   00!4000                      ; Variables
     652   00!4000                      ;---------------------------------------------------------
     653   00!4000  (00:D000)           VarBase:            equ $D000
     654   00!4000                      
     655   00!4000  (00:D000)           SamplePos:          equ VarBase + 0
     656   00!4000  (00:D002)           SamplePage:         equ VarBase + 2
     657   00!4000  (00:D004)           Period:             equ VarBase + 4
     658   00!4000  (00:D006)           NumBlocksToPlay:    equ VarBase + 6
     659   00!4000  (00:D008)           SccSfxOn:           equ VarBase + 8
     660   00!4000  (00:D00A)           Keys:               equ VarBase + 10
     661   00!4000                      
     662   00!4000  (00:D00C)           slotvar:            equ VarBase + 12
     663   00!4000  (00:D00E)           slotram:            equ VarBase + 14
     664   00!4000  (00:D010)           SCC:            	equ VarBase + 16
     665   00!4000  (00:D012)           curslot:            equ VarBase + 18

    LABELS
-------------------------------------------------
00:00006000   Bank1
00:00006800   Bank2
00:00007000   Bank3
00:00007800   Bank4
00:00009000   sccBank3
00:00004010   START
00:00004090   START.halt
00:000040B8   effetct24
00:000040DD   message
00:000040EF   instruction_text
00:00004109   scc_slot_text
00:00004114   rom_slot_text
00:0000411F   ram_slot_text
00:0000412A   InstallIntHanlder
00:00004137   HandleInt
00:00004141   ReplayerInit
00:00004169   SfxTable
00:000041A5   ReplayerNextPage
00:00000015   NSmp
00:000041B6   myldir0
00:000041E8   myldir
00:00004203   ReplayerUpdate
00:0000425F   ReplayerMute
00:00004267   init_mapper
00:00004278   PrintNum
00:000042C2   Numbers
00:000008BC X Period50
00:00000749   Period60
00:000042D2   SccAdjust
00:000042EB   SccAdjust.counter
00:00004300   SccAdjust.loop
00:0000431E   SccAdjust.end
00:00004322   SccInit
00:00004352   SccMute
00:000000A8 X i8255porta
00:000000A9   i8255portb
00:000000AA   i8255portc
00:000000AB X i8255portd
00:00004360   checkkbd
00:00000024 X ENASLT
00:00000138   RSLREG
00:0000013B X WSLREG
00:0000FCC1   EXPTBL
00:0000436B   search_slot
00:0000438A   search_slotram
00:000043AB   search_slotram0
00:000043B0 X setrompage0
00:000043B6 X setrompage2
00:000043BC X setrampage2
00:000043C2 X setrompage3
00:000043C8 X setrampage3
00:000043CE X recbios
00:000043D1   setslotpage0
00:00004408 X setslotpage1
00:00004447   setslotpage2
00:0000448E   setslotpage3
00:000044CD   SCCsearch
00:000044E0   en_scc
00:000044FC X en_slot
00:00000024   enaslt
00:0000FCC1   exptbl
00:0000FCC5   slttbl
00:00004502   begin
00:00004521   scctest
00:00004525   testslot
00:0000453A   testreg
00:00004551   nextslot
00:00004561   nextprim
00:00004573   noscc
00:00004575   done
00:0000457F   end
00:00006000   SAMPLE_START
00:00006000   s0_START
00:00007B80   s0_END
00:00007B80   s1_START
00:00012D80   s1_END
00:00012D80   s2_START
00:0001D380   s2_END
00:0001D380   s3_START
00:00023780   s3_END
00:00023780   s4_START
00:00029080   s4_END
00:00029080   s5_START
00:0002F480   s5_END
00:0002F480   s6_START
00:00035880   s6_END
00:00035880   s7_START
00:0003B180   s7_END
00:0003B180   s8_START
00:00045880   s8_END
00:00045880   s9_START
00:0004D600   s9_END
00:0004D600   s10_START
00:00050600   s10_END
00:00050600   s11_START
00:00056A00   s11_END
00:00056A00   SAMPLE_END
00:00050A00   SAMPLE_LENGTH
00:00084000 X FINISH
00:0000D000   VarBase
00:0000D000   SamplePos
00:0000D002   SamplePage
00:0000D004   Period
00:0000D006   NumBlocksToPlay
00:0000D008   SccSfxOn
00:0000D00A X Keys
00:0000D00C   slotvar
00:0000D00E   slotram
00:0000D010   SCC
00:0000D012   curslot


 Output: SccReplayer4c.out
-------------------------------------------------

 Page: 00
  Org: 00004000  Size: *  Used: 00000000

    No output

 Output: sccplay4c.rom
-------------------------------------------------

 Page: 00
  Org: 00004000  Size: *  Used: 00080000

   Address   Length Align   Label
   00004000  524288         START
