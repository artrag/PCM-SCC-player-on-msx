Sjasm Z80 Assembler v0.42c - www.xl2s.tk             [2018.02.03 - 11:59:16]

SccReplayer3c_bas.asm
Errors: 5

       1   00:0000                      ;----------------------------------------------------------------------------
       2   00:0000                      ;----------------------------------------------------------------------------
       3   00:0000                      
       4   00:0000                              output "sccplay3c_bas.rom"
       5   00:4000                      
       6   00:4000                              org 4000h
       7   00:4000                              dw  4241h,START,0,0,0,0,0,0
       7   00:4000  41 42 10 40 00 00 00 00 00 00 00 00 00 00 00 00 
       8   00:4010                      
       9   00:4010                      ;	Bank 1: 6000h - 67FFh (6000h used)
      10   00:4010                      ;	Bank 2: 6800h - 6FFFh (6800h used)
      11   00:4010                      ;	Bank 3: 7000h - 77FFh (7000h used)
      12   00:4010                      ;	Bank 4: 7800h - 7FFFh (7800h used)
      13   00:4010                      
      14   00:4010                      
      15   00:4010                      ; ascii-8 mapper
      16   00:4010                      
      17   00:4010  (00:6000)           Bank1:  equ      6000h
      18   00:4010  (00:6800)           Bank2:  equ      6800h
      19   00:4010  (00:7000)           Bank3:  equ      7000h
      20   00:4010  (00:7800)           Bank4:  equ      7800h
      21   00:4010                      
      22   00:4010                      ; scc mapper for scc chip
      23   00:4010                      
      24   00:4010  (00:9000)           sccBank3:  equ      09000h
      25   00:4010                      
      26   00:4010                      ;-------------------------------------
      27   00:4010                      ; Entry point
      28   00:4010                      ;-------------------------------------
      29   00:4010                      START:
      30   00:4010  3E 28                       ld		a,40
      31   00:4012  32 AE F3            		ld		(0xF3AE),a	; screen width
      32   00:4015  AF                          xor     a
      33   00:4016  CD 5F 00                    call    005Fh
      34   00:4019  AF                          xor     a
      35   00:401A  32 DB F3            		ld		(0xF3DB),a	; no key click
      36   00:401D  CD 33 43            		call	init_mapper
      37   00:4020                      
      38   00:4020  CD 38 44            		call	search_slot
      39   00:4023  11 68 01            		ld		de,40*9
      40   00:4026  21 36 41            		ld		hl,rom_slot_text
      41   00:4029  CD EC 40            		call	message
      42   00:402C  11 72 01                    ld      de,40*9+10
      43   00:402F  2A 12 FD            		ld		hl,(slotvar)
      44   00:4032  26 00               		ld		h,0
      45   00:4034  CD 45 43                    call    PrintNum
      46   00:4037                      
      47   00:4037  CD 57 44            		call	search_slotram
      48   00:403A  11 90 01            		ld		de,40*10
      49   00:403D  21 41 41            		ld		hl,ram_slot_text
      50   00:4040  CD EC 40            		call	message
      51   00:4043  11 9A 01                    ld      de,40*10+10
      52   00:4046  2A 13 FD            		ld		hl,(slotram)
      53   00:4049  26 00               		ld		h,0
      54   00:404B  CD 45 43                    call    PrintNum
      55   00:404E                      
      56   00:404E  CD 9A 45                    call    SCCsearch
      57   00:4051  11 40 01            		ld		de,40*8
      58   00:4054  21 2B 41            		ld		hl,scc_slot_text
      59   00:4057  CD EC 40            		call	message
      60   00:405A  11 4A 01                    ld      de,40*8+10
      61   00:405D  2A 14 FD            		ld		hl,(SCC)
      62   00:4060  26 00               		ld		h,0
      63   00:4062  CD 45 43                    call    PrintNum
      64   00:4065                      
      65   00:4065  3A 14 FD            		ld		a,(SCC)
      66   00:4068  3C                  		inc		a
      67   00:4069  20 0A               		jr		nz,1f
      68   00:406B  11 7D 00            		ld		de,3*40+5
      69   00:406E  21 FE 40            		ld		hl,noSCC_text
      70   00:4071  CD EC 40            		call	message
      71   00:4074  C9                  		ret
      72   00:4075                      1:
      73   00:4075  CD AD 45            		call	en_scc
      74   00:4078                      
      75   00:4078  F3                          di
      76   00:4079                      
      77   00:4079  3E 3F                       ld      a,3Fh
      78   00:407B  32 00 90                    ld      (sccBank3),a
      79   00:407E                      
      80   00:407E  CD 9F 43                    call    SccAdjust
      81   00:4081  CD EF 43                    call    SccInit
      82   00:4084  CD 2B 43                    call    ReplayerMute
      83   00:4087  CD 1F 44                    call    SccMute
      84   00:408A  CD 4C 41                    call    InstallIntHanlder
      85   00:408D                      
      86   00:408D                      
      87   00:408D                       ; print period from SccAdjust
      88   00:408D                      
      89   00:408D  2A 0D FD                    ld      hl,(Period)
      90   00:4090  11 00 00                    ld      de,0
      91   00:4093  CD 45 43                    call    PrintNum
      92   00:4096                      
      93   00:4096  11 7D 00            		ld		de,3*40+5
      94   00:4099  21 0F 41            		ld		hl,instruction_text
      95   00:409C  CD EC 40            		call	message
      96   00:409F                      
      97   00:409F                      
      98   00:409F  FB                          ei
      99   00:40A0  C9                  		ret
     100   00:40A1                      
     101   00:40A1                      
     102   00:40A1                      .halt:
     103   00:40A1                      
     104   00:40A1                      ; print blocks to play
     105   00:40A1  76                          halt
     106   00:40A2  2A 0F FD                    ld      hl,(NumBlocksToPlay)
     107   00:40A5  11 08 00                    ld      de,8
     108   00:40A8  CD 45 43                    call    PrintNum
     109   00:40AB                      
     110   00:40AB  2A 09 FD                    ld      hl,(SamplePos)
     111   00:40AE  11 10 00                    ld      de,16
     112   00:40B1  CD 45 43                    call    PrintNum
     113   00:40B4                      
     114   00:40B4  2A 0B FD                    ld      hl,(SamplePage)
     115   00:40B7  26 00                       ld      h,0
     116   00:40B9  11 18 00                    ld      de,24
     117   00:40BC  CD 45 43                    call    PrintNum
     118   00:40BF                      
     119   00:40BF                      ; play one sfx at time
     120   00:40BF  3A 11 FD            		ld      a,(SccSfxOn)
     121   00:40C2  B7                          or      a
     122   00:40C3  CC C7 40            		call	z,effetct24
     123   00:40C6  C9                  		ret
     124   00:40C7                      
     125   00:40C7                      ; Keyboard testing
     126   00:40C7                      ; 2 "B" "A" ??? "/" "." "," "'" "`"
     127   00:40C7                      ; 3 "J" "I" "H" "G" "F" "E" "D" "C"
     128   00:40C7                      ; 4 "R" "Q" "P" "O" "N" "M" "L" "K"
     129   00:40C7                      ; 5 "Z" "Y" "X" "W" "V" "U" "T" "S"
     130   00:40C7                      ; 6 F3 F2  F1 CODE CAP GRAPH CTR SHIFT
     131   00:40C7                      ; 7 RET SEL BS STOP TAB ESC F5  F4
     132   00:40C7                      ; 8 RIGHT DOWN UP LEFT DEL INS HOME SPACE
     133   00:40C7                      
     134   00:40C7                      effetct24:
     135   00:40C7                      
     136   00:40C7  11 03 00            		ld      de,3
     137   00:40CA  D5                  2: 		push	de
     138   00:40CB  CD 2D 44             		call    checkkbd
     139   00:40CE  06 08                		ld      b,8
     140   00:40D0  4F                   		ld      c,a
     141   00:40D1                      1:
     142   00:40D1  78                   		ld      a,b
     143   00:40D2  3D                   		dec     a
     144   00:40D3  82                  		add		a,d
     145   00:40D4  6F                   		ld      l,a
     146   00:40D5  79                   		ld      a,c
     147   00:40D6  87                   		add     a,a
     148   00:40D7  4F                   		ld      c,a
     149   00:40D8  C5                   		push    bc
     150   00:40D9  7D                   		ld      a,l
     151   00:40DA  D4 A1 41             		call    nc,ReplayerInit
     152   00:40DD  C1                   		pop     bc
     153   00:40DE  10 F1                		djnz    1B
     154   00:40E0  D1                  		pop		de
     155   00:40E1  3E 08               		ld		a,8
     156   00:40E3  82                  		add		a,d
     157   00:40E4  57                  		ld		d,a
     158   00:40E5  1C                  		inc		e
     159   00:40E6  3E 08               		ld		a,8
     160   00:40E8  BB                  		cp		e
     161   00:40E9  30 DF               		jr		nc,2B
     162   00:40EB                      
     163   00:40EB  C9                   		ret
     164   00:40EC                      ;-------------------------------------
     165   00:40EC                      ;-------------------------------------
     166   00:40EC                      message:
     167   00:40EC  7B                          ld      a,e
     168   00:40ED  D3 99                       out     (99h),a
     169   00:40EF  7A                          ld      a,d
     170   00:40F0  E6 3F                       and     3Fh
     171   00:40F2  F6 40                       or      40h
     172   00:40F4  D3 99                       out     (99h),a
     173   00:40F6                      
     174   00:40F6  7E                  1:		ld		a,(hl)
     175   00:40F7  A7                  		and		a
     176   00:40F8  C8                  		ret		z
     177   00:40F9  D3 98               		out     (98h),a
     178   00:40FB  23                  		inc		hl
     179   00:40FC  18 F8               		jr		1b
     180   00:40FE                      		
     181   00:40FE                      noSCC_text:
     182   00:40FE                      		db "No SCC detected.",0
     182   00:40FE  4E 6F 20 53 43 43 20 64 65 74 65 63 74 65 64 2E 
     182   00:410E  00 
     183   00:410F                      instruction_text:
     184   00:410F                      		db "use USR0(n) with n in 0-11 ",0
     184   00:410F  75 73 65 20 55 53 52 30 28 6E 29 20 77 69 74 68 
     184   00:411F  20 6E 20 69 6E 20 30 2D 31 31 20 00 
     185   00:412B                      scc_slot_text:
     186   00:412B                      		db	"Scc slot: ",0
     186   00:412B  53 63 63 20 73 6C 6F 74 3A 20 00 
     187   00:4136                      rom_slot_text:
     188   00:4136                      		db	"Rom slot: ",0
     188   00:4136  52 6F 6D 20 73 6C 6F 74 3A 20 00 
     189   00:4141                      ram_slot_text:
     190   00:4141                      		db	"Ram slot: ",0
     190   00:4141  52 61 6D 20 73 6C 6F 74 3A 20 00 
     191   00:414C                      
     192   00:414C                      ;-------------------------------------
     193   00:414C                      ;-------------------------------------
     194   00:414C                      InstallIntHanlder:
     195   00:414C  F3                          di
     196   00:414D  3E F7                       ld      a,0xF7
     197   00:414F  32 9A FD                    ld      ($FD9A),a
     198   00:4152  3A 12 FD            		ld		a,(slotvar)
     199   00:4155  32 9B FD            		ld		($FD9B),a
     200   00:4158  21 91 41                    ld      hl,HandleInt
     201   00:415B  22 9C FD                    ld      ($FD9C),hl
     202   00:415E  3E C9                       ld      a,0xC9
     203   00:4160  32 9E FD                    ld      ($FD9E),a
     204   00:4163                      		
     205   00:4163  21 16 FD            		ld		hl,USR0
     206   00:4166  22 9A F3            		ld		(0xF39A),hl
     207   00:4169                      
     208   00:4169  3E F7                       ld      a,0xF7
     209   00:416B  32 16 FD                    ld      (USR0+0),a
     210   00:416E  3A 12 FD            		ld		a,(slotvar)
     211   00:4171  32 17 FD            		ld		(USR0+1),a
     212   00:4174  21 80 41                    ld      hl,HandleUsr
     213   00:4177  22 18 FD                    ld      (USR0+2),hl
     214   00:417A  3E C9                       ld      a,0xC9
     215   00:417C  32 1A FD                    ld      (USR0+4),a
     216   00:417F                      		
     217   00:417F  C9                          ret
     218   00:4180                      		
     219   00:4180                      HandleUsr:
     220   00:4180  3A 63 F6            		ld		a,(0xF663)
     221   00:4183  FE 02               		cp		2
     222   00:4185  C0                  		ret		nz
     223   00:4186  3A 11 FD            		ld      a,(SccSfxOn)		; play one sfx at time
     224   00:4189  B7                          or      a
     225   00:418A  C0                  		ret		nz
     226   00:418B  2A F8 F7            		ld		hl,(0xF7F8)
     227   00:418E  C3 A1 41            		jp    	ReplayerInit
     228   00:4191                      
     229   00:4191                      HandleInt:
     230   00:4191  F5                          push    af
     231   00:4192  CD AD 45            		call	en_scc				; scc in page 2
     232   00:4195                      		
     233   00:4195  3A 11 FD                    ld      a,(SccSfxOn)
     234   00:4198  B7                          or      a
     235   00:4199  C4 05 42                    call    nz,ReplayerUpdate
     236   00:419C                      
     237   00:419C  CD C9 45            		call	en_slot
     238   00:419F  F1                          pop     af
     239   00:41A0  C9                  		ret
     240   00:41A1                      
     241   00:41A1                      ;-------------------------------------
     242   00:41A1                      ; Initialize replayer
     243   00:41A1                      ;
     244   00:41A1                      ; in :
     245   00:41A1                      ; l  # of Sfx
     246   00:41A1                      ;
     247   00:41A1                      ;-------------------------------------
     248   00:41A1                      ReplayerInit:
     249   00:41A1  26 00                       ld      h,0
     250   00:41A3                      
     251   00:41A3  54                          ld      d,h
     252   00:41A4  5D                          ld      e,l
     253   00:41A5                      
     254   00:41A5  29                          add     hl,hl
     255   00:41A6  29                          add     hl,hl
     256   00:41A7  19                          add     hl,de
     257   00:41A8                      
     258   00:41A8  11 C9 41                    ld      de,SfxTable
     259   00:41AB  19                          add     hl,de
     260   00:41AC                      
     261   00:41AC  5E                          ld      e,(hl)
     262   00:41AD  23                          inc     hl
     263   00:41AE  56                          ld      d,(hl)
     264   00:41AF  23                          inc     hl
     265   00:41B0  ED 53 09 FD                 ld      (SamplePos),de
     266   00:41B4                      
     267   00:41B4  7E                          ld      a,(hl)
     268   00:41B5  23                          inc     hl
     269   00:41B6  32 0B FD                    ld      (SamplePage),a
     270   00:41B9  32 00 68                    ld      (Bank2),a
     271   00:41BC                      
     272   00:41BC  5E                          ld      e,(hl)
     273   00:41BD  23                          inc     hl
     274   00:41BE  56                          ld      d,(hl)
     275   00:41BF  ED 53 0F FD                 ld      (NumBlocksToPlay),de
     276   00:41C3                      
     277   00:41C3  3E FF                       ld      a,0FFh
     278   00:41C5  32 11 FD                    ld      (SccSfxOn),a
     279   00:41C8                      
     280   00:41C8  C9                          ret
     281   00:41C9                      
     282   00:41C9                      SfxTable:
     283   00:41C9                               include SfxTable.asm
       1.  00:41C9  (00:000C)           nwavs:       equ  12
       2.  00:41C9                      
       3.  00:41C9  00 60                        dw     06000h + (s0_START & 01FFFH)
       4.  00:41CB  01                           db     s0_START/02000h-2
       5.  00:41CC  37 00                        dw     (s0_END - s0_START+95)/96
       6.  00:41CE                          
       7.  00:41CE  A0 74                        dw     06000h + (s1_START & 01FFFH)
       8.  00:41D0  01                           db     s1_START/02000h-2
       9.  00:41D1  64 01                        dw     (s1_END - s1_START+95)/96
      10.  00:41D3                          
      11.  00:41D3  20 7A                        dw     06000h + (s2_START & 01FFFH)
      12.  00:41D5  05                           db     s2_START/02000h-2
      13.  00:41D6  4C 01                        dw     (s2_END - s2_START+95)/96
      14.  00:41D8                          
      15.  00:41D8  A0 76                        dw     06000h + (s3_START & 01FFFH)
      16.  00:41DA  09                           db     s3_START/02000h-2
      17.  00:41DB  C8 00                        dw     (s3_END - s3_START+95)/96
      18.  00:41DD                          
      19.  00:41DD  A0 61                        dw     06000h + (s4_START & 01FFFH)
      20.  00:41DF  0C                           db     s4_START/02000h-2
      21.  00:41E0  B2 00                        dw     (s4_END - s4_START+95)/96
      22.  00:41E2                          
      23.  00:41E2  60 64                        dw     06000h + (s5_START & 01FFFH)
      24.  00:41E4  0E                           db     s5_START/02000h-2
      25.  00:41E5  C8 00                        dw     (s5_END - s5_START+95)/96
      26.  00:41E7                          
      27.  00:41E7  60 6F                        dw     06000h + (s6_START & 01FFFH)
      28.  00:41E9  10                           db     s6_START/02000h-2
      29.  00:41EA  C8 00                        dw     (s6_END - s6_START+95)/96
      30.  00:41EC                          
      31.  00:41EC  60 7A                        dw     06000h + (s7_START & 01FFFH)
      32.  00:41EE  12                           db     s7_START/02000h-2
      33.  00:41EF  B2 00                        dw     (s7_END - s7_START+95)/96
      34.  00:41F1                          
      35.  00:41F1  20 7D                        dw     06000h + (s8_START & 01FFFH)
      36.  00:41F3  14                           db     s8_START/02000h-2
      37.  00:41F4  4E 01                        dw     (s8_END - s8_START+95)/96
      38.  00:41F6                          
      39.  00:41F6  60 7A                        dw     06000h + (s9_START & 01FFFH)
      40.  00:41F8  18                           db     s9_START/02000h-2
      41.  00:41F9  FB 00                        dw     (s9_END - s9_START+95)/96
      42.  00:41FB                          
      43.  00:41FB  80 78                        dw     06000h + (s10_START & 01FFFH)
      44.  00:41FD  1B                           db     s10_START/02000h-2
      45.  00:41FE  60 00                        dw     (s10_END - s10_START+95)/96
      46.  00:4200                          
      47.  00:4200  80 7C                        dw     06000h + (s11_START & 01FFFH)
      48.  00:4202  1C                           db     s11_START/02000h-2
      49.  00:4203  C8 00                        dw     (s11_END - s11_START+95)/96
      50.  00:4205                          
     284   00:4205                      
     285   00:4205                      
     286   00:4205                      ;-------------------------------------
     287   00:4205                      ; write 32 samples and moves sample pointer to next page
     288   00:4205                      ;-------------------------------------
     289   00:4205                      		macro	my_ldir
     290   00:4205                    <         repeat  32
     291   00:4205                    <         ldi						; 18*32
     292   00:4205                    <         endrepeat
     293   00:4205                    <         bit     7,h				; 10
     294   00:4205                    <         jp 		z,1f			; 11
     295   00:4205                    <         ld      a,(SamplePage)
     296   00:4205                    <         inc     a
     297   00:4205                    <         ld      (SamplePage),a
     298   00:4205                    <         ld      (Bank2),a
     299   00:4205                    <         ld		h,060h
     300   00:4205                    <         ld      a,(Period)
     301   00:4205                    < 1:		nop						; 10 dummy
     302   00:4205                    < 		nop						; 1 cycle is missing
     303   00:4205                    < 		endm
     304   00:4205                      		
     305   00:4205                      		
     306   00:4205                      ReplayerUpdate:
     307   00:4205  2A 09 FD                    ld      hl,(SamplePos)
     308   00:4208  3A 0D FD                    ld      a,(Period)
     309   00:420B  11 00 98                    ld      de,9800h
     310   00:420E                      
     311   00:420E                              ;622 cycles except at bank swap
     312   00:420E                      
     313   00:420E                              ; phase 0
     314   00:420E                              my_ldir
     314   00:420E                    >         repeat  32
     314   00:420E                    <         ldi
     314   00:420E                    <         endrepeat
     314   00:420E  ED A0 ED A0 ED A0 ED A0 ED A0 ED A0 ED A0 ED A0 
     314   00:421E  ED A0 ED A0 ED A0 ED A0 ED A0 ED A0 ED A0 ED A0 
     314   00:422E  ED A0 ED A0 ED A0 ED A0 ED A0 ED A0 ED A0 ED A0 
     314   00:423E  ED A0 ED A0 ED A0 ED A0 ED A0 ED A0 ED A0 ED A0 
     314   00:424E  CB 7C             >         bit     7,h
     314   00:4250  CA 62 42          >         jp   z,1f
     314   00:4253  3A 0B FD          >         ld      a,(SamplePage)
     314   00:4256  3C                >         inc     a
     314   00:4257  32 0B FD          >         ld      (SamplePage),a
     314   00:425A  32 00 68          >         ld      (Bank2),a
     314   00:425D  26 60             >         ld  h,060h
     314   00:425F  3A 0D FD          >         ld      a,(Period)
     314   00:4262  00                > 1:  nop
     314   00:4263  00                >   nop
     315   00:4264  32 80 98                    ld      (9880h),a       ; 14
     316   00:4267                      		
     317   00:4267                              ; phase 1
     318   00:4267                              my_ldir
     318   00:4267                    >         repeat  32
     318   00:4267                    <         ldi
     318   00:4267                    <         endrepeat
     318   00:4267  ED A0 ED A0 ED A0 ED A0 ED A0 ED A0 ED A0 ED A0 
     318   00:4277  ED A0 ED A0 ED A0 ED A0 ED A0 ED A0 ED A0 ED A0 
     318   00:4287  ED A0 ED A0 ED A0 ED A0 ED A0 ED A0 ED A0 ED A0 
     318   00:4297  ED A0 ED A0 ED A0 ED A0 ED A0 ED A0 ED A0 ED A0 
     318   00:42A7  CB 7C             >         bit     7,h
     318   00:42A9  CA BB 42          >         jp   z,1f
     318   00:42AC  3A 0B FD          >         ld      a,(SamplePage)
     318   00:42AF  3C                >         inc     a
     318   00:42B0  32 0B FD          >         ld      (SamplePage),a
     318   00:42B3  32 00 68          >         ld      (Bank2),a
     318   00:42B6  26 60             >         ld  h,060h
     318   00:42B8  3A 0D FD          >         ld      a,(Period)
     318   00:42BB  00                > 1:  nop
     318   00:42BC  00                >   nop
     319   00:42BD  32 82 98                    ld      (9882h),a		; 14
     320   00:42C0                      		
     321   00:42C0                              ; phase 2
     322   00:42C0                              my_ldir
     322   00:42C0                    >         repeat  32
     322   00:42C0                    <         ldi
     322   00:42C0                    <         endrepeat
     322   00:42C0  ED A0 ED A0 ED A0 ED A0 ED A0 ED A0 ED A0 ED A0 
     322   00:42D0  ED A0 ED A0 ED A0 ED A0 ED A0 ED A0 ED A0 ED A0 
     322   00:42E0  ED A0 ED A0 ED A0 ED A0 ED A0 ED A0 ED A0 ED A0 
     322   00:42F0  ED A0 ED A0 ED A0 ED A0 ED A0 ED A0 ED A0 ED A0 
     322   00:4300  CB 7C             >         bit     7,h
     322   00:4302  CA 14 43          >         jp   z,1f
     322   00:4305  3A 0B FD          >         ld      a,(SamplePage)
     322   00:4308  3C                >         inc     a
     322   00:4309  32 0B FD          >         ld      (SamplePage),a
     322   00:430C  32 00 68          >         ld      (Bank2),a
     322   00:430F  26 60             >         ld  h,060h
     322   00:4311  3A 0D FD          >         ld      a,(Period)
     322   00:4314  00                > 1:  nop
     322   00:4315  00                >   nop
     323   00:4316  32 84 98                    ld      (9884h),a		; 14
     324   00:4319                      
     325   00:4319  22 09 FD                    ld      (SamplePos),hl
     326   00:431C                      
     327   00:431C  3E 07               		ld      a,00000111b     ; channels 1-3 active
     328   00:431E  32 8F 98                    ld      (988Fh),a
     329   00:4321  2A 0F FD                    ld      hl,(NumBlocksToPlay)
     330   00:4324  2B                          dec     hl                       ; does NOT affect Z flag
     331   00:4325  22 0F FD                    ld      (NumBlocksToPlay),hl
     332   00:4328                      
     333   00:4328  7C                          ld      a,h
     334   00:4329  B5                          or      l
     335   00:432A  C0                  		ret		nz
     336   00:432B                      
     337   00:432B                      ;-------------------------------------
     338   00:432B                      ; Mute replayer
     339   00:432B                      ;-------------------------------------
     340   00:432B                      ReplayerMute:
     341   00:432B                      
     342   00:432B  AF                          xor      a
     343   00:432C  32 11 FD                    ld      (SccSfxOn),a
     344   00:432F  32 8F 98                    ld      (988Fh),a	; all channels inactive
     345   00:4332  C9                          ret
     346   00:4333                      
     347   00:4333                      
     348   00:4333                      ;-------------------------------------
     349   00:4333                      ; To make rom guesseres happy
     350   00:4333                      ;-------------------------------------
     351   00:4333                      init_mapper:
     352   00:4333  3E 00                       ld     a,init_mapper/02000h-2
     353   00:4335  32 00 60                    ld      (Bank1),a
     354   00:4338  3C                  		inc		a
     355   00:4339  32 00 68                    ld      (Bank2),a
     356   00:433C  3C                  		inc		a
     357   00:433D  32 00 70                    ld      (Bank3),a
     358   00:4340  3C                  		inc		a
     359   00:4341  32 00 78                    ld      (Bank4),a
     360   00:4344  C9                          ret
     361   00:4345                      
     362   00:4345                      ;-------------------------------------
     363   00:4345                      ; method that prints hl on screen
     364   00:4345                      ; to address de
     365   00:4345                      ;-------------------------------------
     366   00:4345                      PrintNum:
     367   00:4345  7B                          ld      a,e
     368   00:4346  D3 99                       out     (99h),a
     369   00:4348  7A                          ld      a,d
     370   00:4349  E6 3F                       and     3Fh
     371   00:434B  F6 40                       or      40h
     372   00:434D  D3 99                       out     (99h),a
     373   00:434F                      
     374   00:434F  E5                          push    hl
     375   00:4350  EB                          ex      de,hl
     376   00:4351                      
     377   00:4351  7A                          ld      a,d
     378   00:4352  07                          rlca
     379   00:4353  07                          rlca
     380   00:4354  07                          rlca
     381   00:4355  07                          rlca
     382   00:4356  E6 0F                       and     15
     383   00:4358  06 00                       ld      b,0
     384   00:435A  4F                          ld      c,a
     385   00:435B  21 8F 43                    ld      hl,Numbers
     386   00:435E  09                          add     hl,bc
     387   00:435F  7E                          ld      a,(hl)
     388   00:4360  D3 98                       out     (98h),a
     389   00:4362                      
     390   00:4362  7A                          ld      a,d
     391   00:4363  E6 0F                       and     15
     392   00:4365  06 00                       ld      b,0
     393   00:4367  4F                          ld      c,a
     394   00:4368  21 8F 43                    ld      hl,Numbers
     395   00:436B  09                          add     hl,bc
     396   00:436C  7E                          ld      a,(hl)
     397   00:436D  D3 98                       out     (98h),a
     398   00:436F                      
     399   00:436F  7B                          ld      a,e
     400   00:4370  07                          rlca
     401   00:4371  07                          rlca
     402   00:4372  07                          rlca
     403   00:4373  07                          rlca
     404   00:4374  E6 0F                       and     15
     405   00:4376  06 00                       ld      b,0
     406   00:4378  4F                          ld      c,a
     407   00:4379  21 8F 43                    ld      hl,Numbers
     408   00:437C  09                          add     hl,bc
     409   00:437D  7E                          ld      a,(hl)
     410   00:437E  D3 98                       out     (98h),a
     411   00:4380                      
     412   00:4380  7B                          ld      a,e
     413   00:4381  E6 0F                       and     15
     414   00:4383  06 00                       ld      b,0
     415   00:4385  4F                          ld      c,a
     416   00:4386  21 8F 43                    ld      hl,Numbers
     417   00:4389  09                          add     hl,bc
     418   00:438A  7E                          ld      a,(hl)
     419   00:438B  D3 98                       out     (98h),a
     420   00:438D                      
     421   00:438D  E1                          pop     hl
     422   00:438E  C9                          ret
     423   00:438F                      
     424   00:438F                      Numbers:
     425   00:438F                              db  "0123456789ABCDEF"
     425   00:438F  30 31 32 33 34 35 36 37 38 39 41 42 43 44 45 46 
     426   00:439F                      
     427   00:439F                      ;-------------------------------------
     428   00:439F                      ; Adjusts the SCC period to the frame
     429   00:439F                      ; rate
     430   00:439F                      ;-------------------------------------
     431   00:439F                      
     432   00:439F  (00:08BC)           Period50: equ       (3579545/32/50-1)
     433   00:439F  (00:0749)           Period60: equ       (3579545/32*1001/(60*1000)-1)
     434   00:439F                      
     435   00:439F                      ;Period60: equ      749h
     436   00:439F                      
     437   00:439F                      SccAdjust:
     438   00:439F  21 49 07            		ld      hl,Period60
     439   00:43A2  22 0D FD            		ld      (Period),hl
     440   00:43A5                      
     441   00:43A5  1E 07                       ld      e,7					;    7   |   RET   SEL   BS   STOP   TAB   ESC   F5    F4
     442   00:43A7  CD 2D 44                    call    checkkbd
     443   00:43AA  FE FB                       cp      11111011b           ; key ESC
     444   00:43AC  C0                          ret     nz
     445   00:43AD                      
     446   00:43AD                              ; press ESC at boot to start the frequency test
     447   00:43AD                      		; WARNING it hangs on SCC+
     448   00:43AD                      
     449   00:43AD  3E 18                       ld      a,00011000b
     450   00:43AF  32 8F 98                    ld      (988Fh),a		; activate ch 4 & 5 for testing
     451   00:43B2                      
     452   00:43B2  21 60 98                    ld      hl,9800h+32*3   ; counter in channel 4
     453   00:43B5  01 00 20                    ld      bc,2000h
     454   00:43B8                      .counter:
     455   00:43B8  71                          ld      (hl),c
     456   00:43B9  23                          inc     hl
     457   00:43BA  0C                          inc     c
     458   00:43BB  10 FB                       djnz    .counter
     459   00:43BD                      
     460   00:43BD  3E A0                       ld      a,10100000b     	; rotate channel 4&5 with ch4 freq., reset wav if freq is written
     461   00:43BF  32 E0 98                    ld      (98E0h),a			; on SCC
     462   00:43C2  32 C0 98                    ld  	(98C0h),a			; cover SCC+ in SCC mode
     463   00:43C5                      
     464   00:43C5  21 45 07                    ld      hl,Period60-4
     465   00:43C8  DB 99                       in      a,(99h)
     466   00:43CA  C3 E5 43            		jp		2f					; expect in C any value > 31
     467   00:43CD                      
     468   00:43CD                      .loop:
     469   00:43CD                      
     470   00:43CD  DB 99               1:      in      a,(99h)
     471   00:43CF  E6 80                       and     80h
     472   00:43D1  CA CD 43                    jp      z,1B         ; wait vblank
     473   00:43D4                      
     474   00:43D4  3A 60 98                    ld      a,(9800h+32*3)
     475   00:43D7  B9                          cp      c
     476   00:43D8  CA EB 43                    jp      z,.end
     477   00:43DB                      
     478   00:43DB  0E 1F                       ld      c,31
     479   00:43DD  23                          inc     hl
     480   00:43DE                      
     481   00:43DE  DB 99               1:      in      a,(99h)
     482   00:43E0  E6 80                       and     80h
     483   00:43E2  CA DE 43                    jp      z,1B         ; wait vblank
     484   00:43E5                      2:
     485   00:43E5  22 86 98                    ld      (9886h),hl
     486   00:43E8                      ;        ld      (9888h),hl	; ch5 not needed
     487   00:43E8  C3 CD 43                    jp      .loop
     488   00:43EB                      .end:
     489   00:43EB  22 0D FD                    ld      (Period),hl
     490   00:43EE                      
     491   00:43EE  C9                          ret
     492   00:43EF                      
     493   00:43EF                      ;-------------------------------------
     494   00:43EF                      ; Initialize the scc
     495   00:43EF                      ;-------------------------------------
     496   00:43EF                      SccInit:
     497   00:43EF  CD 1F 44                    call SccMute
     498   00:43F2                      
     499   00:43F2  3E 20                       ld  	a,00100000b         ; Reset phase when freq is written
     500   00:43F4  32 E0 98                    ld  	(98E0h),a			; on SCC
     501   00:43F7  32 C0 98                    ld  	(98C0h),a			; cover SCC+ in SCC mode
     502   00:43FA                      
     503   00:43FA  3E 0F                       ld      a,15
     504   00:43FC  32 8A 98                    ld      (988Ah),a       ; volume ch1
     505   00:43FF  32 8B 98                    ld      (988Bh),a       ; volume ch2
     506   00:4402  32 8C 98                    ld      (988Ch),a       ; volume ch3
     507   00:4405  AF                  		xor		a
     508   00:4406  32 8D 98                    ld      (988Dh),a       ; volume ch4
     509   00:4409  32 8E 98                    ld      (988Eh),a       ; experiment on ch4&5
     510   00:440C                      
     511   00:440C  2A 0D FD                    ld      hl,(Period)
     512   00:440F  22 80 98                    ld      (9880h),hl
     513   00:4412  22 82 98                    ld      (9882h),hl
     514   00:4415  22 84 98                    ld      (9884h),hl
     515   00:4418  22 86 98                    ld      (9886h),hl			; experiment on ch 4&5
     516   00:441B  22 88 98                    ld      (9888h),hl
     517   00:441E                      
     518   00:441E  C9                          ret
     519   00:441F                      
     520   00:441F                      SccMute:
     521   00:441F  21 00 98                    ld      hl,9800h
     522   00:4422  11 01 98                    ld      de,9801h
     523   00:4425  01 7F 00                    ld      bc,32*4 -1
     524   00:4428                      
     525   00:4428  36 00                       ld      (hl),0
     526   00:442A  ED B0                       ldir
     527   00:442C  C9                          ret
     528   00:442D                      
     529   00:442D                      ;-------------------------------------
     530   00:442D                      ; checkkbd: ckeck keyboard line
     531   00:442D                      ; syntax:checkkbd <keyboar line #>
     532   00:442D                      ; in:  e
     533   00:442D                      ; out: l
     534   00:442D                      ;-------------------------------------
     535   00:442D                      ; i8255 ports
     536   00:442D                      ;
     537   00:442D  (00:00A8)           i8255porta  equ 0a8h        ; slot selection
     538   00:442D  (00:00A9)           i8255portb  equ 0a9h        ; keyboard column input
     539   00:442D  (00:00AA)           i8255portc  equ 0aah        ; leds, motor, cassette, kbd line
     540   00:442D  (00:00AB)           i8255portd  equ 0abh        ; mode select for i8255 ports A,B,C
     541   00:442D                      
     542   00:442D                      checkkbd:
     543   00:442D  DB AA                       in  a,(i8255portc)
     544   00:442F  E6 F0                       and 011110000B          ; upper 4 bits contain info to preserve
     545   00:4431  B3                          or  e
     546   00:4432  D3 AA                       out (i8255portc),a
     547   00:4434  DB A9                       in  a,(i8255portb)
     548   00:4436  6F                          ld  l,a
     549   00:4437  C9                          ret
     550   00:4438                      
     551   00:4438                      ; #define right (!(kbd & 128))
     552   00:4438                      ; #define left 	(!(kbd & 16))
     553   00:4438                      ; #define up 	(!(kbd & 32))
     554   00:4438                      ; #define down 	(!(kbd & 64))
     555   00:4438                      ; // space
     556   00:4438                      ; #define key1 	(!(kbd & 1))
     557   00:4438                      ; // M
     558   00:4438                      ; #define key2 	(!(kb2 & 4))
     559   00:4438                      
     560   00:4438                      ;  Bit_7 Bit_6 Bit_5 Bit_4 Bit_3 Bit_2 Bit_1 Bit_0
     561   00:4438                      ; 0 "7" "6" "5" "4" "3" "2" "1" "0"
     562   00:4438                      ; 1 ";" "]" "[" "\" "=" "-" "9" "8"
     563   00:4438                      ; 2 "B" "A" ??? "/" "." "," "'" "`"
     564   00:4438                      ; 3 "J" "I" "H" "G" "F" "E" "D" "C"
     565   00:4438                      ; 4 "R" "Q" "P" "O" "N" "M" "L" "K"
     566   00:4438                      ; 5 "Z" "Y" "X" "W" "V" "U" "T" "S"
     567   00:4438                      ; 6 F3 F2  F1 CODE CAP GRAPH CTR SHIFT
     568   00:4438                      ; 7 RET SEL BS STOP TAB ESC F5  F4
     569   00:4438                      ; 8 RIGHT DOWN UP LEFT DEL INS HOME SPACE
     570   00:4438                      
     571   00:4438                      
     572   00:4438                      ;-------------------------------------
     573   00:4438                      ; SCC and Slot management
     574   00:4438                      ;-------------------------------------
     575   00:4438                               include rominit64.asm
       1.  00:4438                      
       2.  00:4438                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
       3.  00:4438                      ; set pages and subslot
       4.  00:4438                      ;
       5.  00:4438                      
       6.  00:4438                      
       7.  00:4438  (00:0024)           ENASLT:			equ		024h
       8.  00:4438  (00:0138)           RSLREG:			equ		0138h
       9.  00:4438  (00:013B)           WSLREG:			equ		013Bh
      10.  00:4438  (00:FCC1)           EXPTBL:			equ		0FCC1h	; Bios Slot / Expansion Slot
      11.  00:4438                      
      12.  00:4438                      
      13.  00:4438                      ; ----------------------------
      14.  00:4438                      ; pre-set main slot for page 3
      15.  00:4438                      ; and set sub-slot for page 3
      16.  00:4438                      ; ----------------------------
      17.  00:4438                      	macro	mainslot_setup n
      18.  00:4438                    < 	and		3
      19.  00:4438                    < [2]	rrca
      20.  00:4438                    < 	and		0xC0
      21.  00:4438                    < 	ld		c,a
      22.  00:4438                    < 	ld		a,d
      23.  00:4438                    < 	and		0x3F
      24.  00:4438                    < 	or		c
      25.  00:4438                    < 	ld		c,a					; Primary slot value with main slot in page 3
      26.  00:4438                    < 
      27.  00:4438                    < 	ld		a,b
      28.  00:4438                    < 	and		0x0C
      29.  00:4438                    < [2]	rrca
      30.  00:4438                    < 	and		3
      31.  00:4438                    < 	ld		b,a					; B = Expanded slot in page 3
      32.  00:4438                    < 	ld		a,c
      33.  00:4438                    < 	out		(0A8h),a			; Slot : Main Slot, xx, xx, Main slot
      34.  00:4438                    < 	ld		a,(0FFFFh)
      35.  00:4438                    < 	cpl
      36.  00:4438                    < 	if (n<=4)
      37.  00:4438                    < [n]	RLCA
      38.  00:4438                    < 	else
      39.  00:4438                    < [8-n] RRCA	
      40.  00:4438                    < 	endif
      41.  00:4438                    < 	and		0xFC
      42.  00:4438                    < 	or		b
      43.  00:4438                    < 	if (n<=4)
      44.  00:4438                    < [n]	RRCA
      45.  00:4438                    < 	else
      46.  00:4438                    < [8-n] RLCA
      47.  00:4438                    < 	endif
      48.  00:4438                    < 	ld		(0FFFFh),a		; Expanded slot selected
      49.  00:4438                    < 	ld		b,a				; save for later	
      50.  00:4438                    < 	endmacro
      51.  00:4438                      		
      52.  00:4438                      
      53.  00:4438                      ; ------------------------------
      54.  00:4438                      ; SEARCH_SLOT
      55.  00:4438                      ; look for the slot of our rom
      56.  00:4438                      ; active in page 1
      57.  00:4438                      ; ------------------------------
      58.  00:4438                      
      59.  00:4438                      search_slot:
      60.  00:4438  CD 38 01            	call	RSLREG
      61.  00:443B  0F 0F               [2]	rrca
      62.  00:443D  E6 03               	and		3
      63.  00:443F  4F                  	ld		c,a
      64.  00:4440  06 00               	ld		b,0
      65.  00:4442  21 C1 FC            	ld		hl,EXPTBL
      66.  00:4445  09                  	add		hl,bc
      67.  00:4446  7E                  	ld		a,(hl)
      68.  00:4447  E6 80               	and		080h
      69.  00:4449  B1                  	or		c
      70.  00:444A  4F                  	ld		c,a
      71.  00:444B  23 23 23 23         [4]	inc		hl
      72.  00:444F  7E                  	ld		a,(hl)
      73.  00:4450  E6 0C               	and		0Ch
      74.  00:4452  B1                  	or		c
      75.  00:4453  32 12 FD            	ld		(slotvar),a
      76.  00:4456  C9                  	ret
      77.  00:4457                      	
      78.  00:4457                      ; ------------------------------
      79.  00:4457                      ; look for the slot of ram
      80.  00:4457                      ; active in page 3
      81.  00:4457                      ; ------------------------------
      82.  00:4457                      
      83.  00:4457                      search_slotram:
      84.  00:4457  F3                  	di
      85.  00:4458  CD 38 01            	call	RSLREG
      86.  00:445B  07 07               [2]	rlca
      87.  00:445D  E6 03               	and		3
      88.  00:445F  4F                  	ld		c,a
      89.  00:4460  06 00               	ld		b,0
      90.  00:4462  21 C1 FC            	ld		hl,EXPTBL
      91.  00:4465  09                  	add		hl,bc
      92.  00:4466  7E                  	ld		a,(hl)
      93.  00:4467  E6 80               	and		080h
      94.  00:4469  28 0D               	jr		z,search_slotram0
      95.  00:446B  B1                  	or		c
      96.  00:446C  4F                  	ld		c,a
      97.  00:446D  23 23 23 23         [4]	inc		hl
      98.  00:4471  7E                  	ld		a,(hl)
      99.  00:4472  07 07 07 07         [4]	rlca
     100.  00:4476  E6 0C               	and		0Ch
     101.  00:4478                      search_slotram0:
     102.  00:4478  B1                  	or		c
     103.  00:4479  32 13 FD            	ld		(slotram),a
     104.  00:447C  C9                  	ret
     105.  00:447D                      	
     106.  00:447D                      ; ------------------------------
     107.  00:447D                      ; SETROMPAGE0
     108.  00:447D                      ; Set the chart in
     109.  00:447D                      ; Page 0
     110.  00:447D                      ; -----------------------------
     111.  00:447D                      
     112.  00:447D                      setrompage0:
     113.  00:447D  3A 12 FD            	ld		a,(slotvar)
     114.  00:4480  C3 9E 44            	jp		setslotpage0
     115.  00:4483                      
     116.  00:4483                      setrompage2:
     117.  00:4483  3A 12 FD            	ld		a,(slotvar)
     118.  00:4486  C3 14 45            	jp		setslotpage2
     119.  00:4489                      
     120.  00:4489                      setrampage2:
     121.  00:4489  3A 13 FD            	ld		a,(slotram)
     122.  00:448C  C3 14 45            	jp		setslotpage2
     123.  00:448F                      	
     124.  00:448F                      setrompage3:
     125.  00:448F  3A 12 FD            	ld		a,(slotvar)
     126.  00:4492  C3 5B 45            	jp		setslotpage3
     127.  00:4495                      
     128.  00:4495                      setrampage3:
     129.  00:4495  3A 13 FD            	ld		a,(slotram)
     130.  00:4498  C3 5B 45            	jp		setslotpage3
     131.  00:449B                      	
     132.  00:449B                      ; ------------------------------
     133.  00:449B                      ; RECBIOS
     134.  00:449B                      ; set the bios ROM
     135.  00:449B                      ; -------------------------------
     136.  00:449B                      recbios:
     137.  00:449B  3A C1 FC            	ld		a,(EXPTBL)
     138.  00:449E                      
     139.  00:449E                      ; ---------------------------
     140.  00:449E                      ; SETSLOTPAGE0
     141.  00:449E                      ; Set the slot passed in A
     142.  00:449E                      ; at page 0 in the Z80 address space
     143.  00:449E                      ; A: Format FxxxSSPP
     144.  00:449E                      ; ----------------------------
     145.  00:449E                      
     146.  00:449E                      setslotpage0:
     147.  00:449E  F3                  	di
     148.  00:449F  47                  	ld		b,a					; B = Slot param in FxxxSSPP format
     149.  00:44A0  DB A8               	in		a,(0A8h)
     150.  00:44A2  E6 FC               	and		0xFC
     151.  00:44A4  57                  	ld		d,a					; D = Primary slot value
     152.  00:44A5  78                  	ld		a,b
     153.  00:44A6  E6 03               	and		3
     154.  00:44A8  B2                  	or		d
     155.  00:44A9  57                  	ld		d,a		; D = Final Value for primary slot
     156.  00:44AA  78                  	ld		a,b		; Check if expanded
     157.  00:44AB  CB 7F               	bit		7,a
     158.  00:44AD  28 22               	jr		z,1f	; Not Expanded
     159.  00:44AF                      	mainslot_setup	0
     159.  00:44AF  E6 03             >  and  3
     159.  00:44B1  0F 0F             > [2] rrca
     159.  00:44B3  E6 C0             >  and  0xC0
     159.  00:44B5  4F                >  ld  c,a
     159.  00:44B6  7A                >  ld  a,d
     159.  00:44B7  E6 3F             >  and  0x3F
     159.  00:44B9  B1                >  or  c
     159.  00:44BA  4F                >  ld  c,a
     159.  00:44BB                    > 
     159.  00:44BB  78                >  ld  a,b
     159.  00:44BC  E6 0C             >  and  0x0C
     159.  00:44BE  0F 0F             > [2] rrca
     159.  00:44C0  E6 03             >  and  3
     159.  00:44C2  47                >  ld  b,a
     159.  00:44C3  79                >  ld  a,c
     159.  00:44C4  D3 A8             >  out  (0A8h),a
     159.  00:44C6  3A FF FF          >  ld  a,(0FFFFh)
     159.  00:44C9  2F                >  cpl
     159.  00:44CA                    >  if (n<=4)
     159.  00:44CA                    > [n] RLCA
     159.  00:44CA                    >  else
     159.  00:44CA                    ~ [8-n] RRCA
     159.  00:44CA                    ~  endif
     159.  00:44CA  E6 FC             >  and  0xFC
     159.  00:44CC  B0                >  or  b
     159.  00:44CD                    >  if (n<=4)
     159.  00:44CD                    > [n] RRCA
     159.  00:44CD                    >  else
     159.  00:44CD                    ~ [8-n] RLCA
     159.  00:44CD                    ~  endif
     159.  00:44CD  32 FF FF          >  ld  (0FFFFh),a
     159.  00:44D0  47                >  ld  b,a
     160.  00:44D1  7A                  1:	ld		a,d				; A = Final value
     161.  00:44D2  D3 A8               	out		(0A8h),a		; Slot Final. Ram, rom c, rom c, Main
     162.  00:44D4  C9                  	ret
     163.  00:44D5                      
     164.  00:44D5                      ; ---------------------------
     165.  00:44D5                      ; SETSLOTPAGE1
     166.  00:44D5                      ; Set the slot passed in A
     167.  00:44D5                      ; at page 1 in the Z80 address space
     168.  00:44D5                      ; A: Format FxxxSSPP
     169.  00:44D5                      ; ----------------------------
     170.  00:44D5                      
     171.  00:44D5                      setslotpage1:
     172.  00:44D5  F3                  	di
     173.  00:44D6  47                  	ld		b,a					; B = Slot param in FxxxSSPP format
     174.  00:44D7  DB A8               	in		a,(0A8h)
     175.  00:44D9  0F 0F               [2]	RRCA
     176.  00:44DB  E6 FC               	and		0xFC
     177.  00:44DD  57                  	ld		d,a					; D = Primary slot value
     178.  00:44DE  78                  	ld		a,b
     179.  00:44DF  E6 03               	and		3
     180.  00:44E1  B2                  	or		d
     181.  00:44E2  07 07               [2]	RLCA
     182.  00:44E4  57                  	ld		d,a		; D = Final Value for primary slot
     183.  00:44E5  78                  	ld		a,b		; Check if expanded
     184.  00:44E6  CB 7F               	bit		7,a
     185.  00:44E8  28 26               	jr		z,1f	; Not Expanded
     186.  00:44EA                      	mainslot_setup	6
     186.  00:44EA  E6 03             >  and  3
     186.  00:44EC  0F 0F             > [2] rrca
     186.  00:44EE  E6 C0             >  and  0xC0
     186.  00:44F0  4F                >  ld  c,a
     186.  00:44F1  7A                >  ld  a,d
     186.  00:44F2  E6 3F             >  and  0x3F
     186.  00:44F4  B1                >  or  c
     186.  00:44F5  4F                >  ld  c,a
     186.  00:44F6                    > 
     186.  00:44F6  78                >  ld  a,b
     186.  00:44F7  E6 0C             >  and  0x0C
     186.  00:44F9  0F 0F             > [2] rrca
     186.  00:44FB  E6 03             >  and  3
     186.  00:44FD  47                >  ld  b,a
     186.  00:44FE  79                >  ld  a,c
     186.  00:44FF  D3 A8             >  out  (0A8h),a
     186.  00:4501  3A FF FF          >  ld  a,(0FFFFh)
     186.  00:4504  2F                >  cpl
     186.  00:4505                    >  if (n<=4)
     186.  00:4505                    ~ [n] RLCA
     186.  00:4505                    ~  else
     186.  00:4505  0F 0F             > [8-n] RRCA
     186.  00:4507                    >  endif
     186.  00:4507  E6 FC             >  and  0xFC
     186.  00:4509  B0                >  or  b
     186.  00:450A                    >  if (n<=4)
     186.  00:450A                    ~ [n] RRCA
     186.  00:450A                    ~  else
     186.  00:450A  07 07             > [8-n] RLCA
     186.  00:450C                    >  endif
     186.  00:450C  32 FF FF          >  ld  (0FFFFh),a
     186.  00:450F  47                >  ld  b,a
     187.  00:4510  7A                  1:	ld		a,d				; A = Final value
     188.  00:4511  D3 A8               	out		(0A8h),a		; Slot Final. Ram, rom c, rom c, Main
     189.  00:4513  C9                  	ret
     190.  00:4514                      	
     191.  00:4514                      
     192.  00:4514                      ; ---------------------------
     193.  00:4514                      ; SETSLOTPAGE2
     194.  00:4514                      ; Set the slot passed in A
     195.  00:4514                      ; at page 2 in the Z80 address space
     196.  00:4514                      ; A: Format FxxxSSPP
     197.  00:4514                      ; ----------------------------
     198.  00:4514                      
     199.  00:4514                      setslotpage2:
     200.  00:4514  F3                  	di
     201.  00:4515  47                  	ld		b,a					; B = Slot param in FxxxSSPP format
     202.  00:4516  DB A8               	in		a,(0A8h)
     203.  00:4518  07 07 07 07         [4]	RLCA
     204.  00:451C  E6 FC               	and		0xFC
     205.  00:451E  57                  	ld		d,a					; D = Primary slot value
     206.  00:451F  78                  	ld		a,b
     207.  00:4520  E6 03               	and		3
     208.  00:4522  B2                  	or		d
     209.  00:4523  0F 0F 0F 0F         [4]	RRCA
     210.  00:4527  57                  	ld		d,a		; D = Final Value for primary slot
     211.  00:4528  78                  	ld		a,b		; Check if expanded
     212.  00:4529  CB 7F               	bit		7,a
     213.  00:452B  28 2A               	jr		z,1f	; Not Expanded
     214.  00:452D                      	mainslot_setup	4
     214.  00:452D  E6 03             >  and  3
     214.  00:452F  0F 0F             > [2] rrca
     214.  00:4531  E6 C0             >  and  0xC0
     214.  00:4533  4F                >  ld  c,a
     214.  00:4534  7A                >  ld  a,d
     214.  00:4535  E6 3F             >  and  0x3F
     214.  00:4537  B1                >  or  c
     214.  00:4538  4F                >  ld  c,a
     214.  00:4539                    > 
     214.  00:4539  78                >  ld  a,b
     214.  00:453A  E6 0C             >  and  0x0C
     214.  00:453C  0F 0F             > [2] rrca
     214.  00:453E  E6 03             >  and  3
     214.  00:4540  47                >  ld  b,a
     214.  00:4541  79                >  ld  a,c
     214.  00:4542  D3 A8             >  out  (0A8h),a
     214.  00:4544  3A FF FF          >  ld  a,(0FFFFh)
     214.  00:4547  2F                >  cpl
     214.  00:4548                    >  if (n<=4)
     214.  00:4548  07 07 07 07       > [n] RLCA
     214.  00:454C                    >  else
     214.  00:454C                    ~ [8-n] RRCA
     214.  00:454C                    ~  endif
     214.  00:454C  E6 FC             >  and  0xFC
     214.  00:454E  B0                >  or  b
     214.  00:454F                    >  if (n<=4)
     214.  00:454F  0F 0F 0F 0F       > [n] RRCA
     214.  00:4553                    >  else
     214.  00:4553                    ~ [8-n] RLCA
     214.  00:4553                    ~  endif
     214.  00:4553  32 FF FF          >  ld  (0FFFFh),a
     214.  00:4556  47                >  ld  b,a
     215.  00:4557  7A                  1:	ld		a,d				; A = Final value
     216.  00:4558  D3 A8               	out		(0A8h),a		; Slot Final. Ram, rom c, rom c, Main
     217.  00:455A  C9                  	ret
     218.  00:455B                      	
     219.  00:455B                      ; ---------------------------
     220.  00:455B                      ; SETSLOTPAGE3
     221.  00:455B                      ; Set the slot passed in A
     222.  00:455B                      ; at page 3 in the Z80 address space
     223.  00:455B                      ; A: Format FxxxSSPP
     224.  00:455B                      ; ----------------------------
     225.  00:455B                      	
     226.  00:455B                      setslotpage3:
     227.  00:455B  F3                  	di
     228.  00:455C  47                  	ld		b,a					; B = Slot param in FxxxSSPP format
     229.  00:455D  DB A8               	in		a,(0A8h)
     230.  00:455F  07 07               [2]	RLCA
     231.  00:4561  E6 FC               	and		0xFC
     232.  00:4563  57                  	ld		d,a					; D = Primary slot value
     233.  00:4564  78                  	ld		a,b
     234.  00:4565  E6 03               	and		3
     235.  00:4567  B2                  	or		d
     236.  00:4568  0F 0F               [2]	RRCA	
     237.  00:456A  57                  	ld		d,a		; D = Final Value for primary slot
     238.  00:456B  78                  	ld		a,b		; Check if expanded
     239.  00:456C  CB 7F               	bit		7,a
     240.  00:456E  28 26               	jr		z,1f	; Not Expanded
     241.  00:4570                      	mainslot_setup	2
     241.  00:4570  E6 03             >  and  3
     241.  00:4572  0F 0F             > [2] rrca
     241.  00:4574  E6 C0             >  and  0xC0
     241.  00:4576  4F                >  ld  c,a
     241.  00:4577  7A                >  ld  a,d
     241.  00:4578  E6 3F             >  and  0x3F
     241.  00:457A  B1                >  or  c
     241.  00:457B  4F                >  ld  c,a
     241.  00:457C                    > 
     241.  00:457C  78                >  ld  a,b
     241.  00:457D  E6 0C             >  and  0x0C
     241.  00:457F  0F 0F             > [2] rrca
     241.  00:4581  E6 03             >  and  3
     241.  00:4583  47                >  ld  b,a
     241.  00:4584  79                >  ld  a,c
     241.  00:4585  D3 A8             >  out  (0A8h),a
     241.  00:4587  3A FF FF          >  ld  a,(0FFFFh)
     241.  00:458A  2F                >  cpl
     241.  00:458B                    >  if (n<=4)
     241.  00:458B  07 07             > [n] RLCA
     241.  00:458D                    >  else
     241.  00:458D                    ~ [8-n] RRCA
     241.  00:458D                    ~  endif
     241.  00:458D  E6 FC             >  and  0xFC
     241.  00:458F  B0                >  or  b
     241.  00:4590                    >  if (n<=4)
     241.  00:4590  0F 0F             > [n] RRCA
     241.  00:4592                    >  else
     241.  00:4592                    ~ [8-n] RLCA
     241.  00:4592                    ~  endif
     241.  00:4592  32 FF FF          >  ld  (0FFFFh),a
     241.  00:4595  47                >  ld  b,a
     242.  00:4596  7A                  1:	ld		a,d				; A = Final value
     243.  00:4597  D3 A8               	out		(0A8h),a		; Slot Final. Ram, rom c, rom c, Main
     244.  00:4599  C9                  	ret
     576   00:459A                               include sccdetec.asm
       1.  00:459A                      
       2.  00:459A                       ; ====================
       3.  00:459A                       ;    Initialization
       4.  00:459A                       ; ====================
       5.  00:459A                      SCCsearch
       6.  00:459A  21 CF 45             	ld	hl,begin
       7.  00:459D  11 00 C0             	ld	de,0C000H
       8.  00:45A0  01 7E 00             	ld	bc,end-begin+1
       9.  00:45A3  ED B0                	ldir
      10.  00:45A5  CD 00 C0             	call	0C000H
      11.  00:45A8  78                   	ld	a,b
      12.  00:45A9  32 14 FD             	ld	(SCC),a
      13.  00:45AC  C9                   	ret
      14.  00:45AD                       
      15.  00:45AD                       ; SLOT            .db     0
      16.  00:45AD                       ; PAGE1RAM        .db     0
      17.  00:45AD                       ; RAMSLOT         .db     0
      18.  00:45AD                       
      19.  00:45AD                       ; SCC             .db     0
      20.  00:45AD                       ; SUB             .db     0FFH
      21.  00:45AD                       
      22.  00:45AD                       
      23.  00:45AD                      en_scc:
      24.  00:45AD  3A 14 FD            	ld	a,[SCC]
      25.  00:45B0  3C                  	inc	a
      26.  00:45B1  C8                  	ret	z			; no scc
      27.  00:45B2                      	; ld	a,(0xFFFF)
      28.  00:45B2                      	; cpl
      29.  00:45B2                      	; ld	(cursubslots),a
      30.  00:45B2  DB A8               	in	a,(0xA8)	; Leemos el registro principal de slots
      31.  00:45B4  32 15 FD            	ld	(curslot),a	; save it
      32.  00:45B7  5F                  	ld	e,a
      33.  00:45B8  3A 14 FD            	ld	a,(SCC)
      34.  00:45BB  E6 03               	and	0x03		; Nos fijamos en el slot primario
      35.  00:45BD  87 87 87 87         [4]	add	a,a
      36.  00:45C1  57                  	ld	d,a
      37.  00:45C2  7B                  	ld	a,e			; registro principal de slots
      38.  00:45C3  E6 CF               	and	11001111b
      39.  00:45C5  B2                  	or	d
      40.  00:45C6  D3 A8               	out (0xA8),a
      41.  00:45C8                      	; ld	(sccslots),a
      42.  00:45C8                      	; ld	a,(0xFFFF)
      43.  00:45C8                      	; cpl
      44.  00:45C8                      	; ld	(sccsubslots),a
      45.  00:45C8  C9                  	ret
      46.  00:45C9                      	
      47.  00:45C9                      en_slot:
      48.  00:45C9  3A 15 FD            	ld	a,(curslot)
      49.  00:45CC  D3 A8               	out (0xA8),a
      50.  00:45CE                      	; ld	a,(cursubslots)
      51.  00:45CE                      	; ld	(0xFFFF),a
      52.  00:45CE  C9                  	ret
      53.  00:45CF                      
      54.  00:45CF                      
      55.  00:45CF                      ;------------------------------------------------------------
      56.  00:45CF                      ; SCC-search v1.0
      57.  00:45CF                      ; by Alwin Henseler
      58.  00:45CF                      ; using method described in bulletin # 18 MSX-club Enschede
      59.  00:45CF                      ; input: none
      60.  00:45CF                      ; output: B=slot that contains SCC (=255 if no SCC found)
      61.  00:45CF                      
      62.  00:45CF  (00:0024)           enaslt:          equ #0024
      63.  00:45CF  (00:FCC1)           exptbl:          equ #fcc1
      64.  00:45CF  (00:FCC5)           slttbl:          equ #fcc5
      65.  00:45CF                      
      66.  00:45CF                      begin:
      67.  00:45CF  (C000)              	MAP #c000
      68.  00:45CF  DB A8               	in a,(#a8)        ; read prim. slotregister
      69.  00:45D1  1F                  	rra
      70.  00:45D2  1F                  	rra
      71.  00:45D3  1F                  	rra
      72.  00:45D4  1F                  	rra
      73.  00:45D5  E6 03               	and %00000011     ; A = prim.slot page 2
      74.  00:45D7  06 00               	ld b,0
      75.  00:45D9  4F                  	ld c,a
      76.  00:45DA  21 C1 FC            	ld hl,exptbl
      77.  00:45DD  09                  	add hl,bc
      78.  00:45DE  CB 7E               	bit 7,(hl)        ; page 2-slot expanded ?
      79.  00:45E0  28 0C               	jr z,scctest
      80.  00:45E2  21 C5 FC            	ld hl,slttbl
      81.  00:45E5  09                  	add hl,bc
      82.  00:45E6  7E                  	ld a,(hl)         ; A = sec.sel.reg. of page 2-slot
      83.  00:45E7  1F                  	rra
      84.  00:45E8  1F                  	rra
      85.  00:45E9  E6 0C               	and %00001100     ; bit 1/2 = sec.slot page 2
      86.  00:45EB  B1                  	or c
      87.  00:45EC  CB FF               	set 7,a           ; compose sec.slot-code
      88.  00:45EE                      scctest:
      89.  00:45EE  F5                  	push af           ; save page 2-slot on the stack
      90.  00:45EF  3A C1 FC            	ld a,(exptbl)     ; 1st slot to test
      91.  00:45F2                      
      92.  00:45F2                      testslot:        
      93.  00:45F2  F5                  	push af           ; save test-slot on the stack
      94.  00:45F3  26 80               	ld h,#80
      95.  00:45F5  CD 24 00            	call enaslt       ; switch slot-to-test in 8000-bfffh
      96.  00:45F8  21 00 90            	ld hl,#9000
      97.  00:45FB  46                  	ld b,(hl)         ; save contents of address 9000h
      98.  00:45FC  36 3F               	ld (hl),#3f       ; activate SCC (if present)
      99.  00:45FE                      
     100.  00:45FE  AF                  	xor	a
     101.  00:45FF  32 FE BF            	ld (0xbffe),a	  ; scc+ patch for bluemsx
     102.  00:4602                      
     103.  00:4602  26 9C               	ld h,#9c          ; address of SCC-register mirrors
     104.  00:4604  11 00 98            	ld de,#9800       ; 9800h = address of SCC-registers
     105.  00:4607                      testreg:         
     106.  00:4607  1A                  	ld a,(de)
     107.  00:4608  4F                  	ld c,a            ; save contents of address 98xxh
     108.  00:4609  7E                  	ld a,(hl)         ; read byte from address 9cxxh
     109.  00:460A  2F                  	cpl               ; and invert it
     110.  00:460B  12                  	ld (de),a         ; write inverted byte to 98xxh
     111.  00:460C  BE                  	cp (hl)           ; same value on 9cxxh ?
     112.  00:460D  79                  	ld a,c
     113.  00:460E  12                  	ld (de),a         ; restore value on 98xxh
     114.  00:460F  20 0D               	jr nz,nextslot    ; unequal -> no SCC -> continue search
     115.  00:4611  23                  	inc hl
     116.  00:4612  13                  	inc de            ; next test-addresses
     117.  00:4613  CB 7D               	bit 7,l           ; 128 addresses (registers) tested ?
     118.  00:4615  28 F0               	jr z,testreg      ; no -> repeat mirror-test
     119.  00:4617  78                  	ld a,b
     120.  00:4618  32 00 90            	ld (#9000),a      ; restore value on 9000h
     121.  00:461B  C1                  	pop bc            ; retrieve slotcode (=SCC-slot) from stack
     122.  00:461C  18 24               	jr done           ; SCC found, restore page 2-slot & return
     123.  00:461E                      
     124.  00:461E                      nextslot:
     125.  00:461E  78                  	ld a,b
     126.  00:461F  32 00 90            	ld (#9000),a      ; restore value on 9000h
     127.  00:4622  C1                  	pop bc            ; retrieve slotcode from stack
     128.  00:4623  CB 78               	bit 7,b           ; test-slot = sec.slot ?
     129.  00:4625  28 07               	jr z,nextprim
     130.  00:4627  78                  	ld a,b
     131.  00:4628  C6 04               	add a,4           ; increase sec.slotnumber
     132.  00:462A  CB 67               	bit 4,a           ; sec.slot = 4 ?
     133.  00:462C  28 C4               	jr z,testslot
     134.  00:462E                      nextprim:
     135.  00:462E  78                  	ld a,b
     136.  00:462F  E6 03               	and %00000011
     137.  00:4631  FE 03               	cp 3              ; prim.slot = 3 ?
     138.  00:4633  28 0B               	jr z,noscc
     139.  00:4635  3C                  	inc a             ; increase prim.slotnumber
     140.  00:4636  16 00               	ld d,0
     141.  00:4638  5F                  	ld e,a
     142.  00:4639  21 C1 FC            	ld hl,exptbl
     143.  00:463C  19                  	add hl,de
     144.  00:463D  B6                  	or (hl)           ; combine slot-expansion with slotcode
     145.  00:463E  18 B2               	jr testslot
     146.  00:4640                      
     147.  00:4640                      noscc:           
     148.  00:4640  06 FF               	ld b,255          ; code for no SCC
     149.  00:4642                      done:            
     150.  00:4642  F1                  	pop af            ; retrieve page 2-slot from stack
     151.  00:4643  C5                  	push bc
     152.  00:4644  26 80               	ld h,#80
     153.  00:4646  CD 24 00            	call enaslt       ; restore original page 2-slot
     154.  00:4649  C1                  	pop bc
     155.  00:464A  FB                  	ei
     156.  00:464B  C9                  	ret
     157.  00:464C                      end:
     158.  00:464C  (0000)              	endmap				 
     159.  00:464C                      ; -------------------------------------------------------------
     160.  00:464C                      
     577   00:464C                      
     578   00:464C                      ;-------------------------------------
     579   00:464C                      ; Padding for rom player
     580   00:464C                      ;-------------------------------------
     581   00:464C  00 (6580)                   ds	$6000 - $
     582   00:6000                      
     583   00:6000                      
     584   00:6000                      
     585   00:6000                      ;-------------------------------------
     586   00:6000                      ; Sample data
     587   00:6000                      ;-------------------------------------
     588   00:6000                      SAMPLE_START:
     589   00:6000                               include DataTable.asm
       1.  00:6000                      s0_START:
       2.  00:6000  (14A0)                       incbin data0.bin 
       3.  00:74A0                      s0_END:
       4.  00:74A0                      s1_START:
       5.  00:74A0  (8580)                       incbin data1.bin 
       6.  00:FA20                      s1_END:
       7.  00:FA20                      s2_START:
       8.  00:FA20  (7C80)                       incbin data2.bin 
       9.  00!76A0                      s2_END:
      10.  00!76A0                      s3_START:
      11.  00!76A0  (4B00)                       incbin data3.bin 
      12.  00!C1A0                      s3_END:
      13.  00!C1A0                      s4_START:
      14.  00!C1A0  (42C0)                       incbin data4.bin 
      15.  00!0460                      s4_END:
      16.  00!0460                      s5_START:
      17.  00!0460  (4B00)                       incbin data5.bin 
      18.  00!4F60                      s5_END:
      19.  00!4F60                      s6_START:
      20.  00!4F60  (4B00)                       incbin data6.bin 
      21.  00!9A60                      s6_END:
      22.  00!9A60                      s7_START:
      23.  00!9A60  (42C0)                       incbin data7.bin 
      24.  00!DD20                      s7_END:
      25.  00!DD20                      s8_START:
      26.  00!DD20  (7D40)                       incbin data8.bin 
      27.  00!5A60                      s8_END:
      28.  00!5A60                      s9_START:
      29.  00!5A60  (5E20)                       incbin data9.bin 
      30.  00!B880                      s9_END:
      31.  00!B880                      s10_START:
      32.  00!B880  (2400)                       incbin data10.bin 
      33.  00!DC80                      s10_END:
      34.  00!DC80                      s11_START:
      35.  00!DC80  (4B00)                       incbin data11.bin 
      36.  00!2780                      s11_END:
     590   00!2780                      SAMPLE_END:
     591   00!2780                      
     592   00!2780                      
     593   00!2780                      
     594   00!2780                      ;-------------------------------------
     595   00!2780                      ; Padding, align rom image to a power of two.
     596   00!2780                      ;-------------------------------------
     597   00!2780                      
     598   00!2780  (00:3C780)          SAMPLE_LENGTH:  equ SAMPLE_END - SAMPLE_START
     599   00!2780                      
     600   00!2780                      
     601   00!2780                      
SccReplayer3c_bas.asm(602) : Forward reference
     602   00!2780                              IF (SAMPLE_LENGTH <= 6000h)
     603   00!2780                    ~         DS (06000h - SAMPLE_LENGTH)
     604   00!2780                    ~         ELSE
SccReplayer3c_bas.asm(605) : Forward reference
     605   00!2780                              IF (SAMPLE_LENGTH <= 10000h-2000h)
     606   00!2780                    ~         DS (0E000h - SAMPLE_LENGTH)
     607   00!2780                    ~         ELSE
SccReplayer3c_bas.asm(608) : Forward reference
     608   00!2780                              IF (SAMPLE_LENGTH <= 1E000h)
     609   00!2780                    ~         DS (01E000h - SAMPLE_LENGTH)
     610   00!2780                    ~         ELSE
SccReplayer3c_bas.asm(611) : Forward reference
     611   00!2780                              IF (SAMPLE_LENGTH <= 3E000h)
     612   00!2780  00 (6272)                   DS (03E000h - SAMPLE_LENGTH)
     613   00!4000                              ELSE
SccReplayer3c_bas.asm(614) : Forward reference
     614   00!4000                    ~         IF (SAMPLE_LENGTH <= 7E000h)
     615   00!4000                    ~         DS (07E000h - SAMPLE_LENGTH)
     616   00!4000                    ~         ELSE
     617   00!4000                    ~         DS (0FE000h - SAMPLE_LENGTH)
     618   00!4000                    ~         ENDIF
     619   00!4000                    ~         ENDIF
     620   00!4000                              ENDIF
     621   00!4000                              ENDIF
     622   00!4000                              ENDIF
     623   00!4000                      
     624   00!4000                      
     625   00!4000                      
     626   00!4000                      FINISH:
     627   00!4000                      
     628   00!4000                      
     629   00!4000                      ;---------------------------------------------------------
     630   00!4000                      ; Variables
     631   00!4000                      ;---------------------------------------------------------
     632   00!4000  (FD09)              					map 0xFD09		; unused ram
     633   00!4000                      
     634   00!4000                      
     635   00!4000  (00:FD09)           SamplePos:          #	2
     636   00!4000  (00:FD0B)           SamplePage:         #	1
     637   00!4000  (00:FD0C)           sccslots			#	1
     638   00!4000  (00:FD0D)           Period:             #	2
     639   00!4000  (00:FD0F)           NumBlocksToPlay:    #	2
     640   00!4000                      
     641   00!4000  (00:FD11)           SccSfxOn:           #	1
     642   00!4000                      
     643   00!4000  (00:FD12)           slotvar:            #	1
     644   00!4000  (00:FD13)           slotram:            #	1
     645   00!4000  (00:FD14)           SCC:            	#	1
     646   00!4000  (00:FD15)           curslot:            #	1
     647   00!4000                      
     648   00!4000  (00:FD16)           USR0:				#	5
     649   00!4000  (0000)              					endmap
     650   00!4000                      					

    LABELS
-------------------------------------------------
00:00006000   Bank1
00:00006800   Bank2
00:00007000   Bank3
00:00007800   Bank4
00:00009000   sccBank3
00:00004010   START
00:000040A1 X START.halt
00:000040C7   effetct24
00:000040EC   message
00:000040FE   noSCC_text
00:0000410F   instruction_text
00:0000412B   scc_slot_text
00:00004136   rom_slot_text
00:00004141   ram_slot_text
00:0000414C   InstallIntHanlder
00:00004180   HandleUsr
00:00004191   HandleInt
00:000041A1   ReplayerInit
00:000041C9   SfxTable
00:0000000C X nwavs
00:00004205   ReplayerUpdate
00:0000432B   ReplayerMute
00:00004333   init_mapper
00:00004345   PrintNum
00:0000438F   Numbers
00:000008BC X Period50
00:00000749   Period60
00:0000439F   SccAdjust
00:000043B8   SccAdjust.counter
00:000043CD   SccAdjust.loop
00:000043EB   SccAdjust.end
00:000043EF   SccInit
00:0000441F   SccMute
00:000000A8 X i8255porta
00:000000A9   i8255portb
00:000000AA   i8255portc
00:000000AB X i8255portd
00:0000442D   checkkbd
00:00000024 X ENASLT
00:00000138   RSLREG
00:0000013B X WSLREG
00:0000FCC1   EXPTBL
00:00004438   search_slot
00:00004457   search_slotram
00:00004478   search_slotram0
00:0000447D X setrompage0
00:00004483 X setrompage2
00:00004489 X setrampage2
00:0000448F X setrompage3
00:00004495 X setrampage3
00:0000449B X recbios
00:0000449E   setslotpage0
00:000044D5 X setslotpage1
00:00004514   setslotpage2
00:0000455B   setslotpage3
00:0000459A   SCCsearch
00:000045AD   en_scc
00:000045C9   en_slot
00:00000024   enaslt
00:0000FCC1   exptbl
00:0000FCC5   slttbl
00:000045CF   begin
00:000045EE   scctest
00:000045F2   testslot
00:00004607   testreg
00:0000461E   nextslot
00:0000462E   nextprim
00:00004640   noscc
00:00004642   done
00:0000464C   end
00:00006000   SAMPLE_START
00:00006000   s0_START
00:000074A0   s0_END
00:000074A0   s1_START
00:0000FA20   s1_END
00:0000FA20   s2_START
00:000176A0   s2_END
00:000176A0   s3_START
00:0001C1A0   s3_END
00:0001C1A0   s4_START
00:00020460   s4_END
00:00020460   s5_START
00:00024F60   s5_END
00:00024F60   s6_START
00:00029A60   s6_END
00:00029A60   s7_START
00:0002DD20   s7_END
00:0002DD20   s8_START
00:00035A60   s8_END
00:00035A60   s9_START
00:0003B880   s9_END
00:0003B880   s10_START
00:0003DC80   s10_END
00:0003DC80   s11_START
00:00042780   s11_END
00:00042780   SAMPLE_END
00:0003C780   SAMPLE_LENGTH
00:00044000 X FINISH
00:0000FD09   SamplePos
00:0000FD0B   SamplePage
00:0000FD0C X sccslots
00:0000FD0D   Period
00:0000FD0F   NumBlocksToPlay
00:0000FD11   SccSfxOn
00:0000FD12   slotvar
00:0000FD13   slotram
00:0000FD14   SCC
00:0000FD15   curslot
00:0000FD16   USR0


 Output: SccReplayer3c_bas.out
-------------------------------------------------

 Page: 00
  Org: 00004000  Size: *  Used: 00000000

    No output

 Output: sccplay3c_bas.rom
-------------------------------------------------

 Page: 00
  Org: 00004000  Size: *  Used: 00040000

   Address   Length Align   Label
   00004000  262144         START
