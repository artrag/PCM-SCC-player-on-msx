Sjasm Z80 Assembler v0.42c - www.xl2s.tk             [2017.02.05 - 10:00:36]

SccReplayer3c.asm
Errors: 5

       1   00:0000                      ;----------------------------------------------------------------------------
       2   00:0000                      ;----------------------------------------------------------------------------
       3   00:0000                      
       4   00:0000                              output "sccplay3c.rom"
       5   00:4000                      
       6   00:4000                              org 4000h
       7   00:4000                              dw  4241h,START,0,0,0,0,0,0
       7   00:4000  41 42 10 40 00 00 00 00 00 00 00 00 00 00 00 00 
       8   00:4010                      
       9   00:4010                      ;	Bank 1: 6000h - 67FFh (6000h used)
      10   00:4010                      ;	Bank 2: 6800h - 6FFFh (6800h used)
      11   00:4010                      ;	Bank 3: 7000h - 77FFh (7000h used)
      12   00:4010                      ;	Bank 4: 7800h - 7FFFh (7800h used)
      13   00:4010                      
      14   00:4010                      
      15   00:4010                      ; ascii-8 mapper
      16   00:4010                      
      17   00:4010  (00:6000)           Bank1:  equ      6000h
      18   00:4010  (00:6800)           Bank2:  equ      6800h
      19   00:4010  (00:7000)           Bank3:  equ      7000h
      20   00:4010  (00:7800)           Bank4:  equ      7800h
      21   00:4010                      
      22   00:4010                      ; scc mapper for scc chip
      23   00:4010                      
      24   00:4010  (00:9000)           sccBank3:  equ      09000h
      25   00:4010                      
      26   00:4010                      ;-------------------------------------
      27   00:4010                      ; Entry point
      28   00:4010                      ;-------------------------------------
      29   00:4010                      START:
      30   00:4010  3E 28                       ld		a,40
      31   00:4012  32 AE F3            		ld		(0xF3AE),a	; screen width
      32   00:4015  AF                          xor     a
      33   00:4016  CD 5F 00                    call    005Fh
      34   00:4019  AF                          xor     a
      35   00:401A  32 DB F3            		ld		(0xF3DB),a	; no key click
      36   00:401D  CD C1 42            		call	init_mapper
      37   00:4020                      
      38   00:4020  CD C5 43            		call	search_slot
      39   00:4023  11 68 01            		ld		de,40*9
      40   00:4026  21 11 41            		ld		hl,rom_slot_text
      41   00:4029  CD DA 40            		call	message
      42   00:402C  11 72 01                    ld      de,40*9+10
      43   00:402F  2A 0C D0            		ld		hl,(slotvar)
      44   00:4032  26 00               		ld		h,0
      45   00:4034  CD D2 42                    call    PrintNum
      46   00:4037                      
      47   00:4037  CD E4 43            		call	search_slotram
      48   00:403A  11 90 01            		ld		de,40*10
      49   00:403D  21 1C 41            		ld		hl,ram_slot_text
      50   00:4040  CD DA 40            		call	message
      51   00:4043  11 9A 01                    ld      de,40*10+10
      52   00:4046  2A 0E D0            		ld		hl,(slotram)
      53   00:4049  26 00               		ld		h,0
      54   00:404B  CD D2 42                    call    PrintNum
      55   00:404E                      
      56   00:404E  CD 27 45                    call    SCCsearch
      57   00:4051  11 40 01            		ld		de,40*8
      58   00:4054  21 06 41            		ld		hl,scc_slot_text
      59   00:4057  CD DA 40            		call	message
      60   00:405A  11 4A 01                    ld      de,40*8+10
      61   00:405D  2A 10 D0            		ld		hl,(SCC)
      62   00:4060  26 00               		ld		h,0
      63   00:4062  CD D2 42                    call    PrintNum
      64   00:4065                      
      65   00:4065                      
      66   00:4065  CD 3A 45            		call	en_scc
      67   00:4068                      
      68   00:4068  F3                          di
      69   00:4069                      
      70   00:4069  3E 3F                       ld      a,3Fh
      71   00:406B  32 00 90                    ld      (sccBank3),a
      72   00:406E                      
      73   00:406E  CD 2C 43                    call    SccAdjust
      74   00:4071  CD 7C 43                    call    SccInit
      75   00:4074  CD B9 42                    call    ReplayerMute
      76   00:4077  CD 27 41                    call    InstallIntHanlder
      77   00:407A                      
      78   00:407A                      
      79   00:407A                       ; print period from SccAdjust
      80   00:407A                      
      81   00:407A  2A 04 D0                    ld      hl,(Period)
      82   00:407D  11 00 00                    ld      de,0
      83   00:4080  CD D2 42                    call    PrintNum
      84   00:4083                      
      85   00:4083  11 7D 00            		ld		de,3*40+5
      86   00:4086  21 EC 40            		ld		hl,instruction_text
      87   00:4089  CD DA 40            		call	message
      88   00:408C                      
      89   00:408C                      
      90   00:408C  FB                          ei
      91   00:408D                      
      92   00:408D                      .halt:
      93   00:408D                      
      94   00:408D                      ; print blocks to play
      95   00:408D  76                          halt
      96   00:408E                      
      97   00:408E  2A 06 D0                    ld      hl,(NumBlocksToPlay)
      98   00:4091  11 08 00                    ld      de,8
      99   00:4094  CD D2 42                    call    PrintNum
     100   00:4097                      
     101   00:4097  2A 00 D0                    ld      hl,(SamplePos)
     102   00:409A  11 10 00                    ld      de,16
     103   00:409D  CD D2 42                    call    PrintNum
     104   00:40A0                      
     105   00:40A0  2A 02 D0                    ld      hl,(SamplePage)
     106   00:40A3  26 00                       ld      h,0
     107   00:40A5  11 18 00                    ld      de,24
     108   00:40A8  CD D2 42                    call    PrintNum
     109   00:40AB                      
     110   00:40AB                      ; play one sfx at time
     111   00:40AB  3A 08 D0            		ld      a,(SccSfxOn)
     112   00:40AE  B7                          or      a
     113   00:40AF  CC B5 40            		call	z,effetct24
     114   00:40B2  C3 8D 40            		jp		.halt
     115   00:40B5                      
     116   00:40B5                      ; Keyboard testing
     117   00:40B5                      ; 2 "B" "A" ??? "/" "." "," "'" "`"
     118   00:40B5                      ; 3 "J" "I" "H" "G" "F" "E" "D" "C"
     119   00:40B5                      ; 4 "R" "Q" "P" "O" "N" "M" "L" "K"
     120   00:40B5                      ; 5 "Z" "Y" "X" "W" "V" "U" "T" "S"
     121   00:40B5                      ; 6 F3 F2  F1 CODE CAP GRAPH CTR SHIFT
     122   00:40B5                      ; 7 RET SEL BS STOP TAB ESC F5  F4
     123   00:40B5                      ; 8 RIGHT DOWN UP LEFT DEL INS HOME SPACE
     124   00:40B5                      
     125   00:40B5                      effetct24:
     126   00:40B5                      
     127   00:40B5  11 03 00            		ld      de,3
     128   00:40B8  D5                  2: 		push	de
     129   00:40B9  CD BA 43             		call    checkkbd
     130   00:40BC  06 08                		ld      b,8
     131   00:40BE  4F                   		ld      c,a
     132   00:40BF                      1:
     133   00:40BF  78                   		ld      a,b
     134   00:40C0  3D                   		dec     a
     135   00:40C1  82                  		add		a,d
     136   00:40C2  6F                   		ld      l,a
     137   00:40C3  79                   		ld      a,c
     138   00:40C4  87                   		add     a,a
     139   00:40C5  4F                   		ld      c,a
     140   00:40C6  C5                   		push    bc
     141   00:40C7  7D                   		ld      a,l
     142   00:40C8  D4 3E 41             		call    nc,ReplayerInit
     143   00:40CB  C1                   		pop     bc
     144   00:40CC  10 F1                		djnz    1B
     145   00:40CE  D1                  		pop		de
     146   00:40CF  3E 08               		ld		a,8
     147   00:40D1  82                  		add		a,d
     148   00:40D2  57                  		ld		d,a
     149   00:40D3  1C                  		inc		e
     150   00:40D4  3E 08               		ld		a,8
     151   00:40D6  BB                  		cp		e
     152   00:40D7  30 DF               		jr		nc,2B
     153   00:40D9                      
     154   00:40D9  C9                   		ret
     155   00:40DA                      ;-------------------------------------
     156   00:40DA                      ;-------------------------------------
     157   00:40DA                      message:
     158   00:40DA  7B                          ld      a,e
     159   00:40DB  D3 99                       out     (99h),a
     160   00:40DD  7A                          ld      a,d
     161   00:40DE  E6 3F                       and     3Fh
     162   00:40E0  F6 40                       or      40h
     163   00:40E2  D3 99                       out     (99h),a
     164   00:40E4                      
     165   00:40E4  7E                  1:		ld		a,(hl)
     166   00:40E5  A7                  		and		a
     167   00:40E6  C8                  		ret		z
     168   00:40E7  D3 98               		out     (98h),a
     169   00:40E9  23                  		inc		hl
     170   00:40EA  18 F8               		jr		1b
     171   00:40EC                      
     172   00:40EC                      instruction_text:
     173   00:40EC                      		db "Press any key from C to Z",0
     173   00:40EC  50 72 65 73 73 20 61 6E 79 20 6B 65 79 20 66 72 
     173   00:40FC  6F 6D 20 43 20 74 6F 20 5A 00 
     174   00:4106                      scc_slot_text:
     175   00:4106                      		db	"Scc slot: ",0
     175   00:4106  53 63 63 20 73 6C 6F 74 3A 20 00 
     176   00:4111                      rom_slot_text:
     177   00:4111                      		db	"Rom slot: ",0
     177   00:4111  52 6F 6D 20 73 6C 6F 74 3A 20 00 
     178   00:411C                      ram_slot_text:
     179   00:411C                      		db	"Ram slot: ",0
     179   00:411C  52 61 6D 20 73 6C 6F 74 3A 20 00 
     180   00:4127                      
     181   00:4127                      ;-------------------------------------
     182   00:4127                      ;-------------------------------------
     183   00:4127                      InstallIntHanlder:
     184   00:4127  F3                          di
     185   00:4128  3E C3                       ld      a,0xC3
     186   00:412A  21 34 41                    ld      hl,HandleInt
     187   00:412D  32 9A FD                    ld      ($FD9A),a
     188   00:4130  22 9B FD                    ld      ($FD9B),hl
     189   00:4133  C9                          ret
     190   00:4134                      
     191   00:4134                      ;-------------------------------------
     192   00:4134                      ;-------------------------------------
     193   00:4134                      HandleInt:
     194   00:4134  F5                          push    af
     195   00:4135                      
     196   00:4135  3A 08 D0                    ld      a,(SccSfxOn)
     197   00:4138  B7                          or      a
     198   00:4139  C4 93 41                    call    nz,ReplayerUpdate
     199   00:413C                      
     200   00:413C  F1                          pop     af
     201   00:413D  C9                          ret
     202   00:413E                      
     203   00:413E                      
     204   00:413E                      
     205   00:413E                      ;-------------------------------------
     206   00:413E                      ; Initialize replayer
     207   00:413E                      ;
     208   00:413E                      ; in :
     209   00:413E                      ; l  # of Sfx
     210   00:413E                      ;
     211   00:413E                      ;-------------------------------------
     212   00:413E                      ReplayerInit:
     213   00:413E  26 00                       ld      h,0
     214   00:4140                      
     215   00:4140  54                          ld      d,h
     216   00:4141  5D                          ld      e,l
     217   00:4142                      
     218   00:4142  29                          add     hl,hl
     219   00:4143  29                          add     hl,hl
     220   00:4144  19                          add     hl,de
     221   00:4145                      
     222   00:4145  11 66 41                    ld      de,SfxTable
     223   00:4148  19                          add     hl,de
     224   00:4149                      
     225   00:4149  5E                          ld      e,(hl)
     226   00:414A  23                          inc     hl
     227   00:414B  56                          ld      d,(hl)
     228   00:414C  23                          inc     hl
     229   00:414D  ED 53 00 D0                 ld      (SamplePos),de
     230   00:4151                      
     231   00:4151  7E                          ld      a,(hl)
     232   00:4152  23                          inc     hl
     233   00:4153  32 02 D0                    ld      (SamplePage),a
     234   00:4156  32 00 68                    ld      (Bank2),a
     235   00:4159                      
     236   00:4159  5E                          ld      e,(hl)
     237   00:415A  23                          inc     hl
     238   00:415B  56                          ld      d,(hl)
     239   00:415C  ED 53 06 D0                 ld      (NumBlocksToPlay),de
     240   00:4160                      
     241   00:4160  3E FF                       ld      a,0FFh
     242   00:4162  32 08 D0                    ld      (SccSfxOn),a
     243   00:4165                      
     244   00:4165  C9                          ret
     245   00:4166                      
     246   00:4166                      SfxTable:
     247   00:4166                               include SfxTable.asm
       1.  00:4166  (00:0009)           nwavs:       equ  9
       2.  00:4166                      
       3.  00:4166  00 60                        dw     06000h + (s0_START & 01FFFH)
       4.  00:4168  01                           db     s0_START/02000h-2
       5.  00:4169  64 00                        dw     (s0_END - s0_START+95)/96
       6.  00:416B                          
       7.  00:416B  80 65                        dw     06000h + (s1_START & 01FFFH)
       8.  00:416D  02                           db     s1_START/02000h-2
       9.  00:416E  50 00                        dw     (s1_END - s1_START+95)/96
      10.  00:4170                          
      11.  00:4170  80 63                        dw     06000h + (s2_START & 01FFFH)
      12.  00:4172  03                           db     s2_START/02000h-2
      13.  00:4173  09 00                        dw     (s2_END - s2_START+95)/96
      14.  00:4175                          
      15.  00:4175  E0 66                        dw     06000h + (s3_START & 01FFFH)
      16.  00:4177  03                           db     s3_START/02000h-2
      17.  00:4178  60 00                        dw     (s3_END - s3_START+95)/96
      18.  00:417A                          
      19.  00:417A  E0 6A                        dw     06000h + (s4_START & 01FFFH)
      20.  00:417C  04                           db     s4_START/02000h-2
      21.  00:417D  03 00                        dw     (s4_END - s4_START+95)/96
      22.  00:417F                          
      23.  00:417F  00 6C                        dw     06000h + (s5_START & 01FFFH)
      24.  00:4181  04                           db     s5_START/02000h-2
      25.  00:4182  0F 00                        dw     (s5_END - s5_START+95)/96
      26.  00:4184                          
      27.  00:4184  A0 71                        dw     06000h + (s6_START & 01FFFH)
      28.  00:4186  04                           db     s6_START/02000h-2
      29.  00:4187  3F 00                        dw     (s6_END - s6_START+95)/96
      30.  00:4189                          
      31.  00:4189  40 69                        dw     06000h + (s7_START & 01FFFH)
      32.  00:418B  05                           db     s7_START/02000h-2
      33.  00:418C  89 00                        dw     (s7_END - s7_START+95)/96
      34.  00:418E                          
      35.  00:418E  A0 7C                        dw     06000h + (s8_START & 01FFFH)
      36.  00:4190  06                           db     s8_START/02000h-2
      37.  00:4191  1E 01                        dw     (s8_END - s8_START+95)/96
      38.  00:4193                          
     248   00:4193                      
     249   00:4193                      
     250   00:4193                      ;-------------------------------------
     251   00:4193                      ; write 32 samples and moves sample pointer to next page
     252   00:4193                      ;-------------------------------------
     253   00:4193                      		macro	my_ldir
     254   00:4193                    <         repeat  32
     255   00:4193                    <         ldi						; 18*32
     256   00:4193                    <         endrepeat
     257   00:4193                    <         bit     7,h				; 10
     258   00:4193                    <         jp 		z,1f			; 11
     259   00:4193                    <         ld      a,(SamplePage)
     260   00:4193                    <         inc     a
     261   00:4193                    <         ld      (SamplePage),a
     262   00:4193                    <         ld      (Bank2),a
     263   00:4193                    <         ld		h,060h
     264   00:4193                    <         ld      a,(Period)
     265   00:4193                    < 1:		nop						; 10 dummy
     266   00:4193                    < 		nop						; 1 cycle is missing
     267   00:4193                    < 		endm
     268   00:4193                      		
     269   00:4193                      		
     270   00:4193                      ReplayerUpdate:
     271   00:4193  2A 00 D0                    ld      hl,(SamplePos)
     272   00:4196  3A 04 D0                    ld      a,(Period)
     273   00:4199  11 00 98                    ld      de,9800h
     274   00:419C                      
     275   00:419C                              ;622 cycles except at bank swap
     276   00:419C                      
     277   00:419C                              ; phase 0
     278   00:419C                              my_ldir
     278   00:419C                    >         repeat  32
     278   00:419C                    <         ldi
     278   00:419C                    <         endrepeat
     278   00:419C  ED A0 ED A0 ED A0 ED A0 ED A0 ED A0 ED A0 ED A0 
     278   00:41AC  ED A0 ED A0 ED A0 ED A0 ED A0 ED A0 ED A0 ED A0 
     278   00:41BC  ED A0 ED A0 ED A0 ED A0 ED A0 ED A0 ED A0 ED A0 
     278   00:41CC  ED A0 ED A0 ED A0 ED A0 ED A0 ED A0 ED A0 ED A0 
     278   00:41DC  CB 7C             >         bit     7,h
     278   00:41DE  CA F0 41          >         jp   z,1f
     278   00:41E1  3A 02 D0          >         ld      a,(SamplePage)
     278   00:41E4  3C                >         inc     a
     278   00:41E5  32 02 D0          >         ld      (SamplePage),a
     278   00:41E8  32 00 68          >         ld      (Bank2),a
     278   00:41EB  26 60             >         ld  h,060h
     278   00:41ED  3A 04 D0          >         ld      a,(Period)
     278   00:41F0  00                > 1:  nop
     278   00:41F1  00                >   nop
     279   00:41F2  32 80 98                    ld      (9880h),a       ; 14
     280   00:41F5                      		
     281   00:41F5                              ; phase 1
     282   00:41F5                              my_ldir
     282   00:41F5                    >         repeat  32
     282   00:41F5                    <         ldi
     282   00:41F5                    <         endrepeat
     282   00:41F5  ED A0 ED A0 ED A0 ED A0 ED A0 ED A0 ED A0 ED A0 
     282   00:4205  ED A0 ED A0 ED A0 ED A0 ED A0 ED A0 ED A0 ED A0 
     282   00:4215  ED A0 ED A0 ED A0 ED A0 ED A0 ED A0 ED A0 ED A0 
     282   00:4225  ED A0 ED A0 ED A0 ED A0 ED A0 ED A0 ED A0 ED A0 
     282   00:4235  CB 7C             >         bit     7,h
     282   00:4237  CA 49 42          >         jp   z,1f
     282   00:423A  3A 02 D0          >         ld      a,(SamplePage)
     282   00:423D  3C                >         inc     a
     282   00:423E  32 02 D0          >         ld      (SamplePage),a
     282   00:4241  32 00 68          >         ld      (Bank2),a
     282   00:4244  26 60             >         ld  h,060h
     282   00:4246  3A 04 D0          >         ld      a,(Period)
     282   00:4249  00                > 1:  nop
     282   00:424A  00                >   nop
     283   00:424B  32 82 98                    ld      (9882h),a		; 14
     284   00:424E                      		
     285   00:424E                              ; phase 2
     286   00:424E                              my_ldir
     286   00:424E                    >         repeat  32
     286   00:424E                    <         ldi
     286   00:424E                    <         endrepeat
     286   00:424E  ED A0 ED A0 ED A0 ED A0 ED A0 ED A0 ED A0 ED A0 
     286   00:425E  ED A0 ED A0 ED A0 ED A0 ED A0 ED A0 ED A0 ED A0 
     286   00:426E  ED A0 ED A0 ED A0 ED A0 ED A0 ED A0 ED A0 ED A0 
     286   00:427E  ED A0 ED A0 ED A0 ED A0 ED A0 ED A0 ED A0 ED A0 
     286   00:428E  CB 7C             >         bit     7,h
     286   00:4290  CA A2 42          >         jp   z,1f
     286   00:4293  3A 02 D0          >         ld      a,(SamplePage)
     286   00:4296  3C                >         inc     a
     286   00:4297  32 02 D0          >         ld      (SamplePage),a
     286   00:429A  32 00 68          >         ld      (Bank2),a
     286   00:429D  26 60             >         ld  h,060h
     286   00:429F  3A 04 D0          >         ld      a,(Period)
     286   00:42A2  00                > 1:  nop
     286   00:42A3  00                >   nop
     287   00:42A4  32 84 98                    ld      (9884h),a		; 14
     288   00:42A7                      
     289   00:42A7  22 00 D0                    ld      (SamplePos),hl
     290   00:42AA                      
     291   00:42AA  3E 07               		ld      a,00000111b     ; channels 1-3 active
     292   00:42AC  32 8F 98                    ld      (988Fh),a
     293   00:42AF  2A 06 D0                    ld      hl,(NumBlocksToPlay)
     294   00:42B2  2B                          dec     hl                       ; does NOT affect Z flag
     295   00:42B3  22 06 D0                    ld      (NumBlocksToPlay),hl
     296   00:42B6                      
     297   00:42B6  7C                          ld      a,h
     298   00:42B7  B5                          or      l
     299   00:42B8  C0                  		ret		nz
     300   00:42B9                      
     301   00:42B9                      ;-------------------------------------
     302   00:42B9                      ; Mute replayer
     303   00:42B9                      ;-------------------------------------
     304   00:42B9                      ReplayerMute:
     305   00:42B9                      
     306   00:42B9  AF                          xor      a
     307   00:42BA  32 08 D0                    ld      (SccSfxOn),a
     308   00:42BD  32 8F 98                    ld      (988Fh),a	; all channels inactive
     309   00:42C0  C9                          ret
     310   00:42C1                      
     311   00:42C1                      
     312   00:42C1                      ;-------------------------------------
     313   00:42C1                      ; To make rom guesseres happy
     314   00:42C1                      ;-------------------------------------
     315   00:42C1                      init_mapper:
     316   00:42C1  AF                          xor     a
     317   00:42C2  32 00 60                    ld      (Bank1),a
     318   00:42C5  3C                  		inc		a
     319   00:42C6  32 00 68                    ld      (Bank2),a
     320   00:42C9  3C                  		inc		a
     321   00:42CA  32 00 70                    ld      (Bank3),a
     322   00:42CD  3C                  		inc		a
     323   00:42CE  32 00 78                    ld      (Bank4),a
     324   00:42D1  C9                          ret
     325   00:42D2                      
     326   00:42D2                      ;-------------------------------------
     327   00:42D2                      ; method that prints hl on screen
     328   00:42D2                      ; to address de
     329   00:42D2                      ;-------------------------------------
     330   00:42D2                      PrintNum:
     331   00:42D2  7B                          ld      a,e
     332   00:42D3  D3 99                       out     (99h),a
     333   00:42D5  7A                          ld      a,d
     334   00:42D6  E6 3F                       and     3Fh
     335   00:42D8  F6 40                       or      40h
     336   00:42DA  D3 99                       out     (99h),a
     337   00:42DC                      
     338   00:42DC  E5                          push    hl
     339   00:42DD  EB                          ex      de,hl
     340   00:42DE                      
     341   00:42DE  7A                          ld      a,d
     342   00:42DF  07                          rlca
     343   00:42E0  07                          rlca
     344   00:42E1  07                          rlca
     345   00:42E2  07                          rlca
     346   00:42E3  E6 0F                       and     15
     347   00:42E5  06 00                       ld      b,0
     348   00:42E7  4F                          ld      c,a
     349   00:42E8  21 1C 43                    ld      hl,Numbers
     350   00:42EB  09                          add     hl,bc
     351   00:42EC  7E                          ld      a,(hl)
     352   00:42ED  D3 98                       out     (98h),a
     353   00:42EF                      
     354   00:42EF  7A                          ld      a,d
     355   00:42F0  E6 0F                       and     15
     356   00:42F2  06 00                       ld      b,0
     357   00:42F4  4F                          ld      c,a
     358   00:42F5  21 1C 43                    ld      hl,Numbers
     359   00:42F8  09                          add     hl,bc
     360   00:42F9  7E                          ld      a,(hl)
     361   00:42FA  D3 98                       out     (98h),a
     362   00:42FC                      
     363   00:42FC  7B                          ld      a,e
     364   00:42FD  07                          rlca
     365   00:42FE  07                          rlca
     366   00:42FF  07                          rlca
     367   00:4300  07                          rlca
     368   00:4301  E6 0F                       and     15
     369   00:4303  06 00                       ld      b,0
     370   00:4305  4F                          ld      c,a
     371   00:4306  21 1C 43                    ld      hl,Numbers
     372   00:4309  09                          add     hl,bc
     373   00:430A  7E                          ld      a,(hl)
     374   00:430B  D3 98                       out     (98h),a
     375   00:430D                      
     376   00:430D  7B                          ld      a,e
     377   00:430E  E6 0F                       and     15
     378   00:4310  06 00                       ld      b,0
     379   00:4312  4F                          ld      c,a
     380   00:4313  21 1C 43                    ld      hl,Numbers
     381   00:4316  09                          add     hl,bc
     382   00:4317  7E                          ld      a,(hl)
     383   00:4318  D3 98                       out     (98h),a
     384   00:431A                      
     385   00:431A  E1                          pop     hl
     386   00:431B  C9                          ret
     387   00:431C                      
     388   00:431C                      Numbers:
     389   00:431C                              db  "0123456789ABCDEF"
     389   00:431C  30 31 32 33 34 35 36 37 38 39 41 42 43 44 45 46 
     390   00:432C                      
     391   00:432C                      ;-------------------------------------
     392   00:432C                      ; Adjusts the SCC period to the frame
     393   00:432C                      ; rate
     394   00:432C                      ;-------------------------------------
     395   00:432C                      
     396   00:432C  (00:08BC)           Period50: equ       (3579545/32/50-1)
     397   00:432C  (00:0749)           Period60: equ       (3579545/32*1001/(60*1000)-1)
     398   00:432C                      
     399   00:432C                      ;Period60: equ      749h
     400   00:432C                      
     401   00:432C                      SccAdjust:
     402   00:432C  21 49 07            		ld      hl,Period60
     403   00:432F  22 04 D0            		ld      (Period),hl
     404   00:4332                      
     405   00:4332  1E 07                       ld      e,7					;    7   |   RET   SEL   BS   STOP   TAB   ESC   F5    F4
     406   00:4334  CD BA 43                    call    checkkbd
     407   00:4337  FE FB                       cp      11111011b           ; key ESC
     408   00:4339  C0                          ret     nz
     409   00:433A                      
     410   00:433A                              ; press ESC at boot to start the frequency test
     411   00:433A                      		; WARNING it hangs on SCC+
     412   00:433A                      
     413   00:433A  3E 18                       ld      a,00011000b
     414   00:433C  32 8F 98                    ld      (988Fh),a		; activate ch 4 & 5 for testing
     415   00:433F                      
     416   00:433F  21 60 98                    ld      hl,9800h+32*3   ; counter in channel 4
     417   00:4342  01 00 20                    ld      bc,2000h
     418   00:4345                      .counter:
     419   00:4345  71                          ld      (hl),c
     420   00:4346  23                          inc     hl
     421   00:4347  0C                          inc     c
     422   00:4348  10 FB                       djnz    .counter
     423   00:434A                      
     424   00:434A  3E A0                       ld      a,10100000b     	; rotate channel 4&5 with ch4 freq., reset wav if freq is written
     425   00:434C  32 E0 98                    ld      (98E0h),a			; on SCC
     426   00:434F  32 C0 98                    ld  	(98C0h),a			; cover SCC+ in SCC mode
     427   00:4352                      
     428   00:4352  21 45 07                    ld      hl,Period60-4
     429   00:4355  DB 99                       in      a,(99h)
     430   00:4357  C3 72 43            		jp		2f					; expect in C any value > 31
     431   00:435A                      
     432   00:435A                      .loop:
     433   00:435A                      
     434   00:435A  DB 99               1:      in      a,(99h)
     435   00:435C  E6 80                       and     80h
     436   00:435E  CA 5A 43                    jp      z,1B         ; wait vblank
     437   00:4361                      
     438   00:4361  3A 60 98                    ld      a,(9800h+32*3)
     439   00:4364  B9                          cp      c
     440   00:4365  CA 78 43                    jp      z,.end
     441   00:4368                      
     442   00:4368  0E 1F                       ld      c,31
     443   00:436A  23                          inc     hl
     444   00:436B                      
     445   00:436B  DB 99               1:      in      a,(99h)
     446   00:436D  E6 80                       and     80h
     447   00:436F  CA 6B 43                    jp      z,1B         ; wait vblank
     448   00:4372                      2:
     449   00:4372  22 86 98                    ld      (9886h),hl
     450   00:4375                      ;        ld      (9888h),hl	; ch5 not needed
     451   00:4375  C3 5A 43                    jp      .loop
     452   00:4378                      .end:
     453   00:4378  22 04 D0                    ld      (Period),hl
     454   00:437B                      
     455   00:437B  C9                          ret
     456   00:437C                      
     457   00:437C                      ;-------------------------------------
     458   00:437C                      ; Initialize the scc
     459   00:437C                      ;-------------------------------------
     460   00:437C                      SccInit:
     461   00:437C  CD AC 43                    call SccMute
     462   00:437F                      
     463   00:437F  3E 20                       ld  	a,00100000b         ; Reset phase when freq is written
     464   00:4381  32 E0 98                    ld  	(98E0h),a			; on SCC
     465   00:4384  32 C0 98                    ld  	(98C0h),a			; cover SCC+ in SCC mode
     466   00:4387                      
     467   00:4387  3E 0F                       ld      a,15
     468   00:4389  32 8A 98                    ld      (988Ah),a       ; volume ch1
     469   00:438C  32 8B 98                    ld      (988Bh),a       ; volume ch2
     470   00:438F  32 8C 98                    ld      (988Ch),a       ; volume ch3
     471   00:4392  AF                  		xor		a
     472   00:4393  32 8D 98                    ld      (988Dh),a       ; volume ch4
     473   00:4396  32 8E 98                    ld      (988Eh),a       ; experiment on ch4&5
     474   00:4399                      
     475   00:4399  2A 04 D0                    ld      hl,(Period)
     476   00:439C  22 80 98                    ld      (9880h),hl
     477   00:439F  22 82 98                    ld      (9882h),hl
     478   00:43A2  22 84 98                    ld      (9884h),hl
     479   00:43A5  22 86 98                    ld      (9886h),hl			; experiment on ch 4&5
     480   00:43A8  22 88 98                    ld      (9888h),hl
     481   00:43AB                      
     482   00:43AB  C9                          ret
     483   00:43AC                      
     484   00:43AC                      SccMute:
     485   00:43AC  21 00 98                    ld      hl,9800h
     486   00:43AF  11 01 98                    ld      de,9801h
     487   00:43B2  01 7F 00                    ld      bc,32*4 -1
     488   00:43B5                      
     489   00:43B5  36 00                       ld      (hl),0
     490   00:43B7  ED B0                       ldir
     491   00:43B9  C9                          ret
     492   00:43BA                      
     493   00:43BA                      ;-------------------------------------
     494   00:43BA                      ; checkkbd: ckeck keyboard line
     495   00:43BA                      ; syntax:checkkbd <keyboar line #>
     496   00:43BA                      ; in:  e
     497   00:43BA                      ; out: l
     498   00:43BA                      ;-------------------------------------
     499   00:43BA                      ; i8255 ports
     500   00:43BA                      ;
     501   00:43BA  (00:00A8)           i8255porta  equ 0a8h        ; slot selection
     502   00:43BA  (00:00A9)           i8255portb  equ 0a9h        ; keyboard column input
     503   00:43BA  (00:00AA)           i8255portc  equ 0aah        ; leds, motor, cassette, kbd line
     504   00:43BA  (00:00AB)           i8255portd  equ 0abh        ; mode select for i8255 ports A,B,C
     505   00:43BA                      
     506   00:43BA                      checkkbd:
     507   00:43BA  DB AA                       in  a,(i8255portc)
     508   00:43BC  E6 F0                       and 011110000B          ; upper 4 bits contain info to preserve
     509   00:43BE  B3                          or  e
     510   00:43BF  D3 AA                       out (i8255portc),a
     511   00:43C1  DB A9                       in  a,(i8255portb)
     512   00:43C3  6F                          ld  l,a
     513   00:43C4  C9                          ret
     514   00:43C5                      
     515   00:43C5                      ; #define right (!(kbd & 128))
     516   00:43C5                      ; #define left 	(!(kbd & 16))
     517   00:43C5                      ; #define up 	(!(kbd & 32))
     518   00:43C5                      ; #define down 	(!(kbd & 64))
     519   00:43C5                      ; // space
     520   00:43C5                      ; #define key1 	(!(kbd & 1))
     521   00:43C5                      ; // M
     522   00:43C5                      ; #define key2 	(!(kb2 & 4))
     523   00:43C5                      
     524   00:43C5                      ;  Bit_7 Bit_6 Bit_5 Bit_4 Bit_3 Bit_2 Bit_1 Bit_0
     525   00:43C5                      ; 0 "7" "6" "5" "4" "3" "2" "1" "0"
     526   00:43C5                      ; 1 ";" "]" "[" "\" "=" "-" "9" "8"
     527   00:43C5                      ; 2 "B" "A" ??? "/" "." "," "'" "`"
     528   00:43C5                      ; 3 "J" "I" "H" "G" "F" "E" "D" "C"
     529   00:43C5                      ; 4 "R" "Q" "P" "O" "N" "M" "L" "K"
     530   00:43C5                      ; 5 "Z" "Y" "X" "W" "V" "U" "T" "S"
     531   00:43C5                      ; 6 F3 F2  F1 CODE CAP GRAPH CTR SHIFT
     532   00:43C5                      ; 7 RET SEL BS STOP TAB ESC F5  F4
     533   00:43C5                      ; 8 RIGHT DOWN UP LEFT DEL INS HOME SPACE
     534   00:43C5                      
     535   00:43C5                      
     536   00:43C5                      ;-------------------------------------
     537   00:43C5                      ; SCC and Slot management
     538   00:43C5                      ;-------------------------------------
     539   00:43C5                               include rominit64.asm
       1.  00:43C5                      
       2.  00:43C5                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
       3.  00:43C5                      ; set pages and subslot
       4.  00:43C5                      ;
       5.  00:43C5                      
       6.  00:43C5                      
       7.  00:43C5  (00:0024)           ENASLT:			equ		024h
       8.  00:43C5  (00:0138)           RSLREG:			equ		0138h
       9.  00:43C5  (00:013B)           WSLREG:			equ		013Bh
      10.  00:43C5  (00:FCC1)           EXPTBL:			equ		0FCC1h	; Bios Slot / Expansion Slot
      11.  00:43C5                      
      12.  00:43C5                      
      13.  00:43C5                      ; ----------------------------
      14.  00:43C5                      ; pre-set main slot for page 3
      15.  00:43C5                      ; and set sub-slot for page 3
      16.  00:43C5                      ; ----------------------------
      17.  00:43C5                      	macro	mainslot_setup n
      18.  00:43C5                    < 	and		3
      19.  00:43C5                    < [2]	rrca
      20.  00:43C5                    < 	and		0xC0
      21.  00:43C5                    < 	ld		c,a
      22.  00:43C5                    < 	ld		a,d
      23.  00:43C5                    < 	and		0x3F
      24.  00:43C5                    < 	or		c
      25.  00:43C5                    < 	ld		c,a					; Primary slot value with main slot in page 3
      26.  00:43C5                    < 
      27.  00:43C5                    < 	ld		a,b
      28.  00:43C5                    < 	and		0x0C
      29.  00:43C5                    < [2]	rrca
      30.  00:43C5                    < 	and		3
      31.  00:43C5                    < 	ld		b,a					; B = Expanded slot in page 3
      32.  00:43C5                    < 	ld		a,c
      33.  00:43C5                    < 	out		(0A8h),a			; Slot : Main Slot, xx, xx, Main slot
      34.  00:43C5                    < 	ld		a,(0FFFFh)
      35.  00:43C5                    < 	cpl
      36.  00:43C5                    < 	if (n<=4)
      37.  00:43C5                    < [n]	RLCA
      38.  00:43C5                    < 	else
      39.  00:43C5                    < [8-n] RRCA	
      40.  00:43C5                    < 	endif
      41.  00:43C5                    < 	and		0xFC
      42.  00:43C5                    < 	or		b
      43.  00:43C5                    < 	if (n<=4)
      44.  00:43C5                    < [n]	RRCA
      45.  00:43C5                    < 	else
      46.  00:43C5                    < [8-n] RLCA
      47.  00:43C5                    < 	endif
      48.  00:43C5                    < 	ld		(0FFFFh),a		; Expanded slot selected
      49.  00:43C5                    < 	ld		b,a				; save for later	
      50.  00:43C5                    < 	endmacro
      51.  00:43C5                      		
      52.  00:43C5                      
      53.  00:43C5                      ; ------------------------------
      54.  00:43C5                      ; SEARCH_SLOT
      55.  00:43C5                      ; look for the slot of our rom
      56.  00:43C5                      ; active in page 1
      57.  00:43C5                      ; ------------------------------
      58.  00:43C5                      
      59.  00:43C5                      search_slot:
      60.  00:43C5  CD 38 01            	call	RSLREG
      61.  00:43C8  0F 0F               [2]	rrca
      62.  00:43CA  E6 03               	and		3
      63.  00:43CC  4F                  	ld		c,a
      64.  00:43CD  06 00               	ld		b,0
      65.  00:43CF  21 C1 FC            	ld		hl,EXPTBL
      66.  00:43D2  09                  	add		hl,bc
      67.  00:43D3  7E                  	ld		a,(hl)
      68.  00:43D4  E6 80               	and		080h
      69.  00:43D6  B1                  	or		c
      70.  00:43D7  4F                  	ld		c,a
      71.  00:43D8  23 23 23 23         [4]	inc		hl
      72.  00:43DC  7E                  	ld		a,(hl)
      73.  00:43DD  E6 0C               	and		0Ch
      74.  00:43DF  B1                  	or		c
      75.  00:43E0  32 0C D0            	ld		(slotvar),a
      76.  00:43E3  C9                  	ret
      77.  00:43E4                      	
      78.  00:43E4                      ; ------------------------------
      79.  00:43E4                      ; look for the slot of ram
      80.  00:43E4                      ; active in page 3
      81.  00:43E4                      ; ------------------------------
      82.  00:43E4                      
      83.  00:43E4                      search_slotram:
      84.  00:43E4  F3                  	di
      85.  00:43E5  CD 38 01            	call	RSLREG
      86.  00:43E8  07 07               [2]	rlca
      87.  00:43EA  E6 03               	and		3
      88.  00:43EC  4F                  	ld		c,a
      89.  00:43ED  06 00               	ld		b,0
      90.  00:43EF  21 C1 FC            	ld		hl,EXPTBL
      91.  00:43F2  09                  	add		hl,bc
      92.  00:43F3  7E                  	ld		a,(hl)
      93.  00:43F4  E6 80               	and		080h
      94.  00:43F6  28 0D               	jr		z,search_slotram0
      95.  00:43F8  B1                  	or		c
      96.  00:43F9  4F                  	ld		c,a
      97.  00:43FA  23 23 23 23         [4]	inc		hl
      98.  00:43FE  7E                  	ld		a,(hl)
      99.  00:43FF  07 07 07 07         [4]	rlca
     100.  00:4403  E6 0C               	and		0Ch
     101.  00:4405                      search_slotram0:
     102.  00:4405  B1                  	or		c
     103.  00:4406  32 0E D0            	ld		(slotram),a
     104.  00:4409  C9                  	ret
     105.  00:440A                      	
     106.  00:440A                      ; ------------------------------
     107.  00:440A                      ; SETROMPAGE0
     108.  00:440A                      ; Set the chart in
     109.  00:440A                      ; Page 0
     110.  00:440A                      ; -----------------------------
     111.  00:440A                      
     112.  00:440A                      setrompage0:
     113.  00:440A  3A 0C D0            	ld		a,(slotvar)
     114.  00:440D  C3 2B 44            	jp		setslotpage0
     115.  00:4410                      
     116.  00:4410                      setrompage2:
     117.  00:4410  3A 0C D0            	ld		a,(slotvar)
     118.  00:4413  C3 A1 44            	jp		setslotpage2
     119.  00:4416                      
     120.  00:4416                      setrampage2:
     121.  00:4416  3A 0E D0            	ld		a,(slotram)
     122.  00:4419  C3 A1 44            	jp		setslotpage2
     123.  00:441C                      	
     124.  00:441C                      setrompage3:
     125.  00:441C  3A 0C D0            	ld		a,(slotvar)
     126.  00:441F  C3 E8 44            	jp		setslotpage3
     127.  00:4422                      
     128.  00:4422                      setrampage3:
     129.  00:4422  3A 0E D0            	ld		a,(slotram)
     130.  00:4425  C3 E8 44            	jp		setslotpage3
     131.  00:4428                      	
     132.  00:4428                      ; ------------------------------
     133.  00:4428                      ; RECBIOS
     134.  00:4428                      ; set the bios ROM
     135.  00:4428                      ; -------------------------------
     136.  00:4428                      recbios:
     137.  00:4428  3A C1 FC            	ld		a,(EXPTBL)
     138.  00:442B                      
     139.  00:442B                      ; ---------------------------
     140.  00:442B                      ; SETSLOTPAGE0
     141.  00:442B                      ; Set the slot passed in A
     142.  00:442B                      ; at page 0 in the Z80 address space
     143.  00:442B                      ; A: Format FxxxSSPP
     144.  00:442B                      ; ----------------------------
     145.  00:442B                      
     146.  00:442B                      setslotpage0:
     147.  00:442B  F3                  	di
     148.  00:442C  47                  	ld		b,a					; B = Slot param in FxxxSSPP format
     149.  00:442D  DB A8               	in		a,(0A8h)
     150.  00:442F  E6 FC               	and		0xFC
     151.  00:4431  57                  	ld		d,a					; D = Primary slot value
     152.  00:4432  78                  	ld		a,b
     153.  00:4433  E6 03               	and		3
     154.  00:4435  B2                  	or		d
     155.  00:4436  57                  	ld		d,a		; D = Final Value for primary slot
     156.  00:4437  78                  	ld		a,b		; Check if expanded
     157.  00:4438  CB 7F               	bit		7,a
     158.  00:443A  28 22               	jr		z,1f	; Not Expanded
     159.  00:443C                      	mainslot_setup	0
     159.  00:443C  E6 03             >  and  3
     159.  00:443E  0F 0F             > [2] rrca
     159.  00:4440  E6 C0             >  and  0xC0
     159.  00:4442  4F                >  ld  c,a
     159.  00:4443  7A                >  ld  a,d
     159.  00:4444  E6 3F             >  and  0x3F
     159.  00:4446  B1                >  or  c
     159.  00:4447  4F                >  ld  c,a
     159.  00:4448                    > 
     159.  00:4448  78                >  ld  a,b
     159.  00:4449  E6 0C             >  and  0x0C
     159.  00:444B  0F 0F             > [2] rrca
     159.  00:444D  E6 03             >  and  3
     159.  00:444F  47                >  ld  b,a
     159.  00:4450  79                >  ld  a,c
     159.  00:4451  D3 A8             >  out  (0A8h),a
     159.  00:4453  3A FF FF          >  ld  a,(0FFFFh)
     159.  00:4456  2F                >  cpl
     159.  00:4457                    >  if (n<=4)
     159.  00:4457                    > [n] RLCA
     159.  00:4457                    >  else
     159.  00:4457                    ~ [8-n] RRCA
     159.  00:4457                    ~  endif
     159.  00:4457  E6 FC             >  and  0xFC
     159.  00:4459  B0                >  or  b
     159.  00:445A                    >  if (n<=4)
     159.  00:445A                    > [n] RRCA
     159.  00:445A                    >  else
     159.  00:445A                    ~ [8-n] RLCA
     159.  00:445A                    ~  endif
     159.  00:445A  32 FF FF          >  ld  (0FFFFh),a
     159.  00:445D  47                >  ld  b,a
     160.  00:445E  7A                  1:	ld		a,d				; A = Final value
     161.  00:445F  D3 A8               	out		(0A8h),a		; Slot Final. Ram, rom c, rom c, Main
     162.  00:4461  C9                  	ret
     163.  00:4462                      
     164.  00:4462                      ; ---------------------------
     165.  00:4462                      ; SETSLOTPAGE1
     166.  00:4462                      ; Set the slot passed in A
     167.  00:4462                      ; at page 1 in the Z80 address space
     168.  00:4462                      ; A: Format FxxxSSPP
     169.  00:4462                      ; ----------------------------
     170.  00:4462                      
     171.  00:4462                      setslotpage1:
     172.  00:4462  F3                  	di
     173.  00:4463  47                  	ld		b,a					; B = Slot param in FxxxSSPP format
     174.  00:4464  DB A8               	in		a,(0A8h)
     175.  00:4466  0F 0F               [2]	RRCA
     176.  00:4468  E6 FC               	and		0xFC
     177.  00:446A  57                  	ld		d,a					; D = Primary slot value
     178.  00:446B  78                  	ld		a,b
     179.  00:446C  E6 03               	and		3
     180.  00:446E  B2                  	or		d
     181.  00:446F  07 07               [2]	RLCA
     182.  00:4471  57                  	ld		d,a		; D = Final Value for primary slot
     183.  00:4472  78                  	ld		a,b		; Check if expanded
     184.  00:4473  CB 7F               	bit		7,a
     185.  00:4475  28 26               	jr		z,1f	; Not Expanded
     186.  00:4477                      	mainslot_setup	6
     186.  00:4477  E6 03             >  and  3
     186.  00:4479  0F 0F             > [2] rrca
     186.  00:447B  E6 C0             >  and  0xC0
     186.  00:447D  4F                >  ld  c,a
     186.  00:447E  7A                >  ld  a,d
     186.  00:447F  E6 3F             >  and  0x3F
     186.  00:4481  B1                >  or  c
     186.  00:4482  4F                >  ld  c,a
     186.  00:4483                    > 
     186.  00:4483  78                >  ld  a,b
     186.  00:4484  E6 0C             >  and  0x0C
     186.  00:4486  0F 0F             > [2] rrca
     186.  00:4488  E6 03             >  and  3
     186.  00:448A  47                >  ld  b,a
     186.  00:448B  79                >  ld  a,c
     186.  00:448C  D3 A8             >  out  (0A8h),a
     186.  00:448E  3A FF FF          >  ld  a,(0FFFFh)
     186.  00:4491  2F                >  cpl
     186.  00:4492                    >  if (n<=4)
     186.  00:4492                    ~ [n] RLCA
     186.  00:4492                    ~  else
     186.  00:4492  0F 0F             > [8-n] RRCA
     186.  00:4494                    >  endif
     186.  00:4494  E6 FC             >  and  0xFC
     186.  00:4496  B0                >  or  b
     186.  00:4497                    >  if (n<=4)
     186.  00:4497                    ~ [n] RRCA
     186.  00:4497                    ~  else
     186.  00:4497  07 07             > [8-n] RLCA
     186.  00:4499                    >  endif
     186.  00:4499  32 FF FF          >  ld  (0FFFFh),a
     186.  00:449C  47                >  ld  b,a
     187.  00:449D  7A                  1:	ld		a,d				; A = Final value
     188.  00:449E  D3 A8               	out		(0A8h),a		; Slot Final. Ram, rom c, rom c, Main
     189.  00:44A0  C9                  	ret
     190.  00:44A1                      	
     191.  00:44A1                      
     192.  00:44A1                      ; ---------------------------
     193.  00:44A1                      ; SETSLOTPAGE2
     194.  00:44A1                      ; Set the slot passed in A
     195.  00:44A1                      ; at page 2 in the Z80 address space
     196.  00:44A1                      ; A: Format FxxxSSPP
     197.  00:44A1                      ; ----------------------------
     198.  00:44A1                      
     199.  00:44A1                      setslotpage2:
     200.  00:44A1  F3                  	di
     201.  00:44A2  47                  	ld		b,a					; B = Slot param in FxxxSSPP format
     202.  00:44A3  DB A8               	in		a,(0A8h)
     203.  00:44A5  07 07 07 07         [4]	RLCA
     204.  00:44A9  E6 FC               	and		0xFC
     205.  00:44AB  57                  	ld		d,a					; D = Primary slot value
     206.  00:44AC  78                  	ld		a,b
     207.  00:44AD  E6 03               	and		3
     208.  00:44AF  B2                  	or		d
     209.  00:44B0  0F 0F 0F 0F         [4]	RRCA
     210.  00:44B4  57                  	ld		d,a		; D = Final Value for primary slot
     211.  00:44B5  78                  	ld		a,b		; Check if expanded
     212.  00:44B6  CB 7F               	bit		7,a
     213.  00:44B8  28 2A               	jr		z,1f	; Not Expanded
     214.  00:44BA                      	mainslot_setup	4
     214.  00:44BA  E6 03             >  and  3
     214.  00:44BC  0F 0F             > [2] rrca
     214.  00:44BE  E6 C0             >  and  0xC0
     214.  00:44C0  4F                >  ld  c,a
     214.  00:44C1  7A                >  ld  a,d
     214.  00:44C2  E6 3F             >  and  0x3F
     214.  00:44C4  B1                >  or  c
     214.  00:44C5  4F                >  ld  c,a
     214.  00:44C6                    > 
     214.  00:44C6  78                >  ld  a,b
     214.  00:44C7  E6 0C             >  and  0x0C
     214.  00:44C9  0F 0F             > [2] rrca
     214.  00:44CB  E6 03             >  and  3
     214.  00:44CD  47                >  ld  b,a
     214.  00:44CE  79                >  ld  a,c
     214.  00:44CF  D3 A8             >  out  (0A8h),a
     214.  00:44D1  3A FF FF          >  ld  a,(0FFFFh)
     214.  00:44D4  2F                >  cpl
     214.  00:44D5                    >  if (n<=4)
     214.  00:44D5  07 07 07 07       > [n] RLCA
     214.  00:44D9                    >  else
     214.  00:44D9                    ~ [8-n] RRCA
     214.  00:44D9                    ~  endif
     214.  00:44D9  E6 FC             >  and  0xFC
     214.  00:44DB  B0                >  or  b
     214.  00:44DC                    >  if (n<=4)
     214.  00:44DC  0F 0F 0F 0F       > [n] RRCA
     214.  00:44E0                    >  else
     214.  00:44E0                    ~ [8-n] RLCA
     214.  00:44E0                    ~  endif
     214.  00:44E0  32 FF FF          >  ld  (0FFFFh),a
     214.  00:44E3  47                >  ld  b,a
     215.  00:44E4  7A                  1:	ld		a,d				; A = Final value
     216.  00:44E5  D3 A8               	out		(0A8h),a		; Slot Final. Ram, rom c, rom c, Main
     217.  00:44E7  C9                  	ret
     218.  00:44E8                      	
     219.  00:44E8                      ; ---------------------------
     220.  00:44E8                      ; SETSLOTPAGE3
     221.  00:44E8                      ; Set the slot passed in A
     222.  00:44E8                      ; at page 3 in the Z80 address space
     223.  00:44E8                      ; A: Format FxxxSSPP
     224.  00:44E8                      ; ----------------------------
     225.  00:44E8                      	
     226.  00:44E8                      setslotpage3:
     227.  00:44E8  F3                  	di
     228.  00:44E9  47                  	ld		b,a					; B = Slot param in FxxxSSPP format
     229.  00:44EA  DB A8               	in		a,(0A8h)
     230.  00:44EC  07 07               [2]	RLCA
     231.  00:44EE  E6 FC               	and		0xFC
     232.  00:44F0  57                  	ld		d,a					; D = Primary slot value
     233.  00:44F1  78                  	ld		a,b
     234.  00:44F2  E6 03               	and		3
     235.  00:44F4  B2                  	or		d
     236.  00:44F5  0F 0F               [2]	RRCA	
     237.  00:44F7  57                  	ld		d,a		; D = Final Value for primary slot
     238.  00:44F8  78                  	ld		a,b		; Check if expanded
     239.  00:44F9  CB 7F               	bit		7,a
     240.  00:44FB  28 26               	jr		z,1f	; Not Expanded
     241.  00:44FD                      	mainslot_setup	2
     241.  00:44FD  E6 03             >  and  3
     241.  00:44FF  0F 0F             > [2] rrca
     241.  00:4501  E6 C0             >  and  0xC0
     241.  00:4503  4F                >  ld  c,a
     241.  00:4504  7A                >  ld  a,d
     241.  00:4505  E6 3F             >  and  0x3F
     241.  00:4507  B1                >  or  c
     241.  00:4508  4F                >  ld  c,a
     241.  00:4509                    > 
     241.  00:4509  78                >  ld  a,b
     241.  00:450A  E6 0C             >  and  0x0C
     241.  00:450C  0F 0F             > [2] rrca
     241.  00:450E  E6 03             >  and  3
     241.  00:4510  47                >  ld  b,a
     241.  00:4511  79                >  ld  a,c
     241.  00:4512  D3 A8             >  out  (0A8h),a
     241.  00:4514  3A FF FF          >  ld  a,(0FFFFh)
     241.  00:4517  2F                >  cpl
     241.  00:4518                    >  if (n<=4)
     241.  00:4518  07 07             > [n] RLCA
     241.  00:451A                    >  else
     241.  00:451A                    ~ [8-n] RRCA
     241.  00:451A                    ~  endif
     241.  00:451A  E6 FC             >  and  0xFC
     241.  00:451C  B0                >  or  b
     241.  00:451D                    >  if (n<=4)
     241.  00:451D  0F 0F             > [n] RRCA
     241.  00:451F                    >  else
     241.  00:451F                    ~ [8-n] RLCA
     241.  00:451F                    ~  endif
     241.  00:451F  32 FF FF          >  ld  (0FFFFh),a
     241.  00:4522  47                >  ld  b,a
     242.  00:4523  7A                  1:	ld		a,d				; A = Final value
     243.  00:4524  D3 A8               	out		(0A8h),a		; Slot Final. Ram, rom c, rom c, Main
     244.  00:4526  C9                  	ret
     540   00:4527                               include sccdetec.asm
       1.  00:4527                      
       2.  00:4527                       ; ====================
       3.  00:4527                       ;    Initialization
       4.  00:4527                       ; ====================
       5.  00:4527                      SCCsearch
       6.  00:4527  21 5C 45             	ld	hl,begin
       7.  00:452A  11 00 C0             	ld	de,0C000H
       8.  00:452D  01 7E 00             	ld	bc,end-begin+1
       9.  00:4530  ED B0                	ldir
      10.  00:4532  CD 00 C0             	call	0C000H
      11.  00:4535  78                   	ld	a,b
      12.  00:4536  32 10 D0             	ld	(SCC),a
      13.  00:4539  C9                   	ret
      14.  00:453A                       
      15.  00:453A                       ; SLOT            .db     0
      16.  00:453A                       ; PAGE1RAM        .db     0
      17.  00:453A                       ; RAMSLOT         .db     0
      18.  00:453A                       
      19.  00:453A                       ; SCC             .db     0
      20.  00:453A                       ; SUB             .db     0FFH
      21.  00:453A                       
      22.  00:453A                       
      23.  00:453A                      en_scc:
      24.  00:453A  3A 10 D0            	ld	a,[SCC]
      25.  00:453D  3C                  	inc	a
      26.  00:453E  C8                  	ret	z			; no scc
      27.  00:453F                      	; ld	a,(0xFFFF)
      28.  00:453F                      	; cpl
      29.  00:453F                      	; ld	(cursubslots),a
      30.  00:453F  DB A8               	in	a,(0xA8)	; Leemos el registro principal de slots
      31.  00:4541  32 12 D0            	ld	(curslot),a	; save it
      32.  00:4544  5F                  	ld	e,a
      33.  00:4545  3A 10 D0            	ld	a,(SCC)
      34.  00:4548  E6 03               	and	0x03		; Nos fijamos en el slot primario
      35.  00:454A  87 87 87 87         [4]	add	a,a
      36.  00:454E  57                  	ld	d,a
      37.  00:454F  7B                  	ld	a,e			; registro principal de slots
      38.  00:4550  E6 CF               	and	11001111b
      39.  00:4552  B2                  	or	d
      40.  00:4553  D3 A8               	out (0xA8),a
      41.  00:4555                      	; ld	(sccslots),a
      42.  00:4555                      	; ld	a,(0xFFFF)
      43.  00:4555                      	; cpl
      44.  00:4555                      	; ld	(sccsubslots),a
      45.  00:4555  C9                  	ret
      46.  00:4556                      	
      47.  00:4556                      en_slot:
      48.  00:4556  3A 12 D0            	ld	a,(curslot)
      49.  00:4559  D3 A8               	out (0xA8),a
      50.  00:455B                      	; ld	a,(cursubslots)
      51.  00:455B                      	; ld	(0xFFFF),a
      52.  00:455B  C9                  	ret
      53.  00:455C                      
      54.  00:455C                      
      55.  00:455C                      ;------------------------------------------------------------
      56.  00:455C                      ; SCC-search v1.0
      57.  00:455C                      ; by Alwin Henseler
      58.  00:455C                      ; using method described in bulletin # 18 MSX-club Enschede
      59.  00:455C                      ; input: none
      60.  00:455C                      ; output: B=slot that contains SCC (=255 if no SCC found)
      61.  00:455C                      
      62.  00:455C  (00:0024)           enaslt:          equ #0024
      63.  00:455C  (00:FCC1)           exptbl:          equ #fcc1
      64.  00:455C  (00:FCC5)           slttbl:          equ #fcc5
      65.  00:455C                      
      66.  00:455C                      begin:
      67.  00:455C  (C000)              	MAP #c000
      68.  00:455C  DB A8               	in a,(#a8)        ; read prim. slotregister
      69.  00:455E  1F                  	rra
      70.  00:455F  1F                  	rra
      71.  00:4560  1F                  	rra
      72.  00:4561  1F                  	rra
      73.  00:4562  E6 03               	and %00000011     ; A = prim.slot page 2
      74.  00:4564  06 00               	ld b,0
      75.  00:4566  4F                  	ld c,a
      76.  00:4567  21 C1 FC            	ld hl,exptbl
      77.  00:456A  09                  	add hl,bc
      78.  00:456B  CB 7E               	bit 7,(hl)        ; page 2-slot expanded ?
      79.  00:456D  28 0C               	jr z,scctest
      80.  00:456F  21 C5 FC            	ld hl,slttbl
      81.  00:4572  09                  	add hl,bc
      82.  00:4573  7E                  	ld a,(hl)         ; A = sec.sel.reg. of page 2-slot
      83.  00:4574  1F                  	rra
      84.  00:4575  1F                  	rra
      85.  00:4576  E6 0C               	and %00001100     ; bit 1/2 = sec.slot page 2
      86.  00:4578  B1                  	or c
      87.  00:4579  CB FF               	set 7,a           ; compose sec.slot-code
      88.  00:457B                      scctest:
      89.  00:457B  F5                  	push af           ; save page 2-slot on the stack
      90.  00:457C  3A C1 FC            	ld a,(exptbl)     ; 1st slot to test
      91.  00:457F                      
      92.  00:457F                      testslot:        
      93.  00:457F  F5                  	push af           ; save test-slot on the stack
      94.  00:4580  26 80               	ld h,#80
      95.  00:4582  CD 24 00            	call enaslt       ; switch slot-to-test in 8000-bfffh
      96.  00:4585  21 00 90            	ld hl,#9000
      97.  00:4588  46                  	ld b,(hl)         ; save contents of address 9000h
      98.  00:4589  36 3F               	ld (hl),#3f       ; activate SCC (if present)
      99.  00:458B                      
     100.  00:458B  AF                  	xor	a
     101.  00:458C  32 FE BF            	ld (0xbffe),a	  ; scc+ patch for bluemsx
     102.  00:458F                      
     103.  00:458F  26 9C               	ld h,#9c          ; address of SCC-register mirrors
     104.  00:4591  11 00 98            	ld de,#9800       ; 9800h = address of SCC-registers
     105.  00:4594                      testreg:         
     106.  00:4594  1A                  	ld a,(de)
     107.  00:4595  4F                  	ld c,a            ; save contents of address 98xxh
     108.  00:4596  7E                  	ld a,(hl)         ; read byte from address 9cxxh
     109.  00:4597  2F                  	cpl               ; and invert it
     110.  00:4598  12                  	ld (de),a         ; write inverted byte to 98xxh
     111.  00:4599  BE                  	cp (hl)           ; same value on 9cxxh ?
     112.  00:459A  79                  	ld a,c
     113.  00:459B  12                  	ld (de),a         ; restore value on 98xxh
     114.  00:459C  20 0D               	jr nz,nextslot    ; unequal -> no SCC -> continue search
     115.  00:459E  23                  	inc hl
     116.  00:459F  13                  	inc de            ; next test-addresses
     117.  00:45A0  CB 7D               	bit 7,l           ; 128 addresses (registers) tested ?
     118.  00:45A2  28 F0               	jr z,testreg      ; no -> repeat mirror-test
     119.  00:45A4  78                  	ld a,b
     120.  00:45A5  32 00 90            	ld (#9000),a      ; restore value on 9000h
     121.  00:45A8  C1                  	pop bc            ; retrieve slotcode (=SCC-slot) from stack
     122.  00:45A9  18 24               	jr done           ; SCC found, restore page 2-slot & return
     123.  00:45AB                      
     124.  00:45AB                      nextslot:
     125.  00:45AB  78                  	ld a,b
     126.  00:45AC  32 00 90            	ld (#9000),a      ; restore value on 9000h
     127.  00:45AF  C1                  	pop bc            ; retrieve slotcode from stack
     128.  00:45B0  CB 78               	bit 7,b           ; test-slot = sec.slot ?
     129.  00:45B2  28 07               	jr z,nextprim
     130.  00:45B4  78                  	ld a,b
     131.  00:45B5  C6 04               	add a,4           ; increase sec.slotnumber
     132.  00:45B7  CB 67               	bit 4,a           ; sec.slot = 4 ?
     133.  00:45B9  28 C4               	jr z,testslot
     134.  00:45BB                      nextprim:
     135.  00:45BB  78                  	ld a,b
     136.  00:45BC  E6 03               	and %00000011
     137.  00:45BE  FE 03               	cp 3              ; prim.slot = 3 ?
     138.  00:45C0  28 0B               	jr z,noscc
     139.  00:45C2  3C                  	inc a             ; increase prim.slotnumber
     140.  00:45C3  16 00               	ld d,0
     141.  00:45C5  5F                  	ld e,a
     142.  00:45C6  21 C1 FC            	ld hl,exptbl
     143.  00:45C9  19                  	add hl,de
     144.  00:45CA  B6                  	or (hl)           ; combine slot-expansion with slotcode
     145.  00:45CB  18 B2               	jr testslot
     146.  00:45CD                      
     147.  00:45CD                      noscc:           
     148.  00:45CD  06 FF               	ld b,255          ; code for no SCC
     149.  00:45CF                      done:            
     150.  00:45CF  F1                  	pop af            ; retrieve page 2-slot from stack
     151.  00:45D0  C5                  	push bc
     152.  00:45D1  26 80               	ld h,#80
     153.  00:45D3  CD 24 00            	call enaslt       ; restore original page 2-slot
     154.  00:45D6  C1                  	pop bc
     155.  00:45D7  FB                  	ei
     156.  00:45D8  C9                  	ret
     157.  00:45D9                      end:
     158.  00:45D9  (0000)              	endmap				 
     159.  00:45D9                      ; -------------------------------------------------------------
     160.  00:45D9                      
     541   00:45D9                      
     542   00:45D9                      ;-------------------------------------
     543   00:45D9                      ; Padding for rom player
     544   00:45D9                      ;-------------------------------------
     545   00:45D9  00 (6695)                   ds	$6000 - $
     546   00:6000                      
     547   00:6000                      
     548   00:6000                      
     549   00:6000                      ;-------------------------------------
     550   00:6000                      ; Sample data
     551   00:6000                      ;-------------------------------------
     552   00:6000                      SAMPLE_START:
     553   00:6000                               include DataTable.asm
       1.  00:6000                      s0_START:
       2.  00:6000  (2580)                       incbin data0.bin 
       3.  00:8580                      s0_END:
       4.  00:8580                      s1_START:
       5.  00:8580  (1E00)                       incbin data1.bin 
       6.  00:A380                      s1_END:
       7.  00:A380                      s2_START:
       8.  00:A380  (0360)                       incbin data2.bin 
       9.  00:A6E0                      s2_END:
      10.  00:A6E0                      s3_START:
      11.  00:A6E0  (2400)                       incbin data3.bin 
      12.  00:CAE0                      s3_END:
      13.  00:CAE0                      s4_START:
      14.  00:CAE0  (0120)                       incbin data4.bin 
      15.  00:CC00                      s4_END:
      16.  00:CC00                      s5_START:
      17.  00:CC00  (05A0)                       incbin data5.bin 
      18.  00:D1A0                      s5_END:
      19.  00:D1A0                      s6_START:
      20.  00:D1A0  (17A0)                       incbin data6.bin 
      21.  00:E940                      s6_END:
      22.  00:E940                      s7_START:
      23.  00:E940  (3360)                       incbin data7.bin 
      24.  00!1CA0                      s7_END:
      25.  00!1CA0                      s8_START:
      26.  00!1CA0  (6B40)                       incbin data8.bin 
      27.  00!87E0                      s8_END:
     554   00!87E0                      SAMPLE_END:
     555   00!87E0                      
     556   00!87E0                      
     557   00!87E0                      
     558   00!87E0                      ;-------------------------------------
     559   00!87E0                      ; Padding, align rom image to a power of two.
     560   00!87E0                      ;-------------------------------------
     561   00!87E0                      
     562   00!87E0  (00:127E0)          SAMPLE_LENGTH:  equ SAMPLE_END - SAMPLE_START
     563   00!87E0                      
     564   00!87E0                      
     565   00!87E0                      
SccReplayer3c.asm(566) : Forward reference
     566   00!87E0                              IF (SAMPLE_LENGTH <= 6000h)
     567   00!87E0                    ~         DS (06000h - SAMPLE_LENGTH)
     568   00!87E0                    ~         ELSE
SccReplayer3c.asm(569) : Forward reference
     569   00!87E0                              IF (SAMPLE_LENGTH <= 10000h-2000h)
     570   00!87E0                    ~         DS (0E000h - SAMPLE_LENGTH)
     571   00!87E0                    ~         ELSE
SccReplayer3c.asm(572) : Forward reference
     572   00!87E0                              IF (SAMPLE_LENGTH <= 1E000h)
     573   00!87E0  00 (47136)                  DS (01E000h - SAMPLE_LENGTH)
     574   00!4000                              ELSE
SccReplayer3c.asm(575) : Forward reference
     575   00!4000                    ~         IF (SAMPLE_LENGTH <= 3E000h)
     576   00!4000                    ~         DS (03E000h - SAMPLE_LENGTH)
     577   00!4000                    ~         ELSE
SccReplayer3c.asm(578) : Forward reference
     578   00!4000                    ~         IF (SAMPLE_LENGTH <= 7E000h)
     579   00!4000                    ~         DS (07E000h - SAMPLE_LENGTH)
     580   00!4000                    ~         ELSE
     581   00!4000                    ~         DS (0FE000h - SAMPLE_LENGTH)
     582   00!4000                    ~         ENDIF
     583   00!4000                    ~         ENDIF
     584   00!4000                    ~         ENDIF
     585   00!4000                              ENDIF
     586   00!4000                              ENDIF
     587   00!4000                      
     588   00!4000                      
     589   00!4000                      
     590   00!4000                      FINISH:
     591   00!4000                      
     592   00!4000                      
     593   00!4000                      ;---------------------------------------------------------
     594   00!4000                      ; Variables
     595   00!4000                      ;---------------------------------------------------------
     596   00!4000  (00:D000)           VarBase:            equ $D000
     597   00!4000                      
     598   00!4000  (00:D000)           SamplePos:          equ VarBase + 0
     599   00!4000  (00:D002)           SamplePage:         equ VarBase + 2
     600   00!4000  (00:D004)           Period:             equ VarBase + 4
     601   00!4000  (00:D006)           NumBlocksToPlay:    equ VarBase + 6
     602   00!4000  (00:D008)           SccSfxOn:           equ VarBase + 8
     603   00!4000  (00:D00A)           Keys:               equ VarBase + 10
     604   00!4000                      
     605   00!4000  (00:D00C)           slotvar:            equ VarBase + 12
     606   00!4000  (00:D00E)           slotram:            equ VarBase + 14
     607   00!4000  (00:D010)           SCC:            	equ VarBase + 16
     608   00!4000  (00:D012)           curslot:            equ VarBase + 18
     609   00!4000  (00:D013)           sccslots			equ VarBase + 19

    LABELS
-------------------------------------------------
00:00006000   Bank1
00:00006800   Bank2
00:00007000   Bank3
00:00007800   Bank4
00:00009000   sccBank3
00:00004010   START
00:0000408D   START.halt
00:000040B5   effetct24
00:000040DA   message
00:000040EC   instruction_text
00:00004106   scc_slot_text
00:00004111   rom_slot_text
00:0000411C   ram_slot_text
00:00004127   InstallIntHanlder
00:00004134   HandleInt
00:0000413E   ReplayerInit
00:00004166   SfxTable
00:00000009 X nwavs
00:00004193   ReplayerUpdate
00:000042B9   ReplayerMute
00:000042C1   init_mapper
00:000042D2   PrintNum
00:0000431C   Numbers
00:000008BC X Period50
00:00000749   Period60
00:0000432C   SccAdjust
00:00004345   SccAdjust.counter
00:0000435A   SccAdjust.loop
00:00004378   SccAdjust.end
00:0000437C   SccInit
00:000043AC   SccMute
00:000000A8 X i8255porta
00:000000A9   i8255portb
00:000000AA   i8255portc
00:000000AB X i8255portd
00:000043BA   checkkbd
00:00000024 X ENASLT
00:00000138   RSLREG
00:0000013B X WSLREG
00:0000FCC1   EXPTBL
00:000043C5   search_slot
00:000043E4   search_slotram
00:00004405   search_slotram0
00:0000440A X setrompage0
00:00004410 X setrompage2
00:00004416 X setrampage2
00:0000441C X setrompage3
00:00004422 X setrampage3
00:00004428 X recbios
00:0000442B   setslotpage0
00:00004462 X setslotpage1
00:000044A1   setslotpage2
00:000044E8   setslotpage3
00:00004527   SCCsearch
00:0000453A   en_scc
00:00004556 X en_slot
00:00000024   enaslt
00:0000FCC1   exptbl
00:0000FCC5   slttbl
00:0000455C   begin
00:0000457B   scctest
00:0000457F   testslot
00:00004594   testreg
00:000045AB   nextslot
00:000045BB   nextprim
00:000045CD   noscc
00:000045CF   done
00:000045D9   end
00:00006000   SAMPLE_START
00:00006000   s0_START
00:00008580   s0_END
00:00008580   s1_START
00:0000A380   s1_END
00:0000A380   s2_START
00:0000A6E0   s2_END
00:0000A6E0   s3_START
00:0000CAE0   s3_END
00:0000CAE0   s4_START
00:0000CC00   s4_END
00:0000CC00   s5_START
00:0000D1A0   s5_END
00:0000D1A0   s6_START
00:0000E940   s6_END
00:0000E940   s7_START
00:00011CA0   s7_END
00:00011CA0   s8_START
00:000187E0   s8_END
00:000187E0   SAMPLE_END
00:000127E0   SAMPLE_LENGTH
00:00024000 X FINISH
00:0000D000   VarBase
00:0000D000   SamplePos
00:0000D002   SamplePage
00:0000D004   Period
00:0000D006   NumBlocksToPlay
00:0000D008   SccSfxOn
00:0000D00A X Keys
00:0000D00C   slotvar
00:0000D00E   slotram
00:0000D010   SCC
00:0000D012   curslot
00:0000D013 X sccslots


 Output: SccReplayer3c.out
-------------------------------------------------

 Page: 00
  Org: 00004000  Size: *  Used: 00000000

    No output

 Output: sccplay3c.rom
-------------------------------------------------

 Page: 00
  Org: 00004000  Size: *  Used: 00020000

   Address   Length Align   Label
   00004000  131072         START
